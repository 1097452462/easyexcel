[{"documents":[{"i":1,"t":"","u":"/blog/archive","b":[]},{"i":2,"t":"First Blog Post","u":"/blog/first-blog-post","b":[]},{"i":4,"t":"Long Blog Post","u":"/blog/long-blog-post","b":[]},{"i":6,"t":"关于EasyExcel","u":"/docs/2.x/","b":["文档"]},{"i":25,"t":"填充Excel","u":"/docs/2.x/quickstart/fill","b":["文档","快速开始"]},{"i":41,"t":"读Excel","u":"/docs/2.x/quickstart/read","b":["文档","快速开始"]},{"i":69,"t":"写Excel","u":"/docs/2.x/quickstart/write","b":["文档","快速开始"]},{"i":118,"t":"关于EasyExcel","u":"/docs/3.x/","b":["文档"]},{"i":137,"t":"填充Excel","u":"/docs/3.x/quickstart/fil","b":["文档","快速开始"]},{"i":153,"t":"读Excel","u":"/docs/3.x/quickstart/read","b":["文档","快速开始"]},{"i":181,"t":"写Excel","u":"/docs/3.x/quickstart/write","b":["文档","快速开始"]}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/1",[]],["t/2",[0,1.337,1,1.009,2,1.009]],["t/4",[1,1.009,2,1.009,3,1.337]],["t/6",[4,1.719]],["t/25",[5,0.672]],["t/41",[5,0.672]],["t/69",[5,0.672]],["t/118",[4,1.719]],["t/137",[5,0.672]],["t/153",[5,0.672]],["t/181",[5,0.672]]],"invertedIndex":[["blog",{"_index":1,"t":{"2":{"position":[[6,4]]},"4":{"position":[[5,4]]}}}],["easyexcel",{"_index":4,"t":{"6":{"position":[[0,11]]},"118":{"position":[[0,11]]}}}],["excel",{"_index":5,"t":{"25":{"position":[[0,7]]},"41":{"position":[[0,6]]},"69":{"position":[[0,6]]},"137":{"position":[[0,7]]},"153":{"position":[[0,6]]},"181":{"position":[[0,6]]}}}],["first",{"_index":0,"t":{"2":{"position":[[0,5]]}}}],["long",{"_index":3,"t":{"4":{"position":[[0,4]]}}}],["post",{"_index":2,"t":{"2":{"position":[[11,4]]},"4":{"position":[[10,4]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":8,"t":"联系方式","u":"/docs/2.x/","h":"#联系方式","p":6},{"i":10,"t":"64M内存20秒读取75M(46W行25列)的Excel（3.0.2+版本）","u":"/docs/2.x/","h":"#64m内存20秒读取75m46w行25列的excel302版本","p":6},{"i":12,"t":"版本支持","u":"/docs/2.x/","h":"#版本支持","p":6},{"i":14,"t":"关于版本升级","u":"/docs/2.x/","h":"#关于版本升级","p":6},{"i":16,"t":"最新版本","u":"/docs/2.x/","h":"#最新版本","p":6},{"i":18,"t":"","u":"/docs/2.x/","h":"","p":6},{"i":19,"t":"工具推荐","u":"/docs/2.x/","h":"#工具推荐","p":6},{"i":21,"t":"easyexcel人员招募","u":"/docs/2.x/","h":"#easyexcel人员招募","p":6},{"i":23,"t":"快速开始","u":"/docs/2.x/","h":"#快速开始","p":6},{"i":27,"t":"示例代码","u":"/docs/2.x/quickstart/fill","h":"#示例代码","p":25},{"i":29,"t":"最简单的填充","u":"/docs/2.x/quickstart/fill","h":"#最简单的填充","p":25},{"i":31,"t":"填充列表","u":"/docs/2.x/quickstart/fill","h":"#填充列表","p":25},{"i":33,"t":"复杂的填充","u":"/docs/2.x/quickstart/fill","h":"#复杂的填充","p":25},{"i":35,"t":"数据量大的复杂填充","u":"/docs/2.x/quickstart/fill","h":"#数据量大的复杂填充","p":25},{"i":37,"t":"横向的填充","u":"/docs/2.x/quickstart/fill","h":"#横向的填充","p":25},{"i":39,"t":"多列表组合填充填充","u":"/docs/2.x/quickstart/fill","h":"#多列表组合填充填充","p":25},{"i":43,"t":"示例代码","u":"/docs/2.x/quickstart/read","h":"#示例代码","p":41},{"i":45,"t":"最简单的读","u":"/docs/2.x/quickstart/read","h":"#最简单的读","p":41},{"i":47,"t":"指定列的下标或者列名","u":"/docs/2.x/quickstart/read","h":"#指定列的下标或者列名","p":41},{"i":49,"t":"读多个sheet","u":"/docs/2.x/quickstart/read","h":"#读多个sheet","p":41},{"i":51,"t":"日期、数字或者自定义格式转换","u":"/docs/2.x/quickstart/read","h":"#日期数字或者自定义格式转换","p":41},{"i":53,"t":"多行头","u":"/docs/2.x/quickstart/read","h":"#多行头","p":41},{"i":55,"t":"同步的返回","u":"/docs/2.x/quickstart/read","h":"#同步的返回","p":41},{"i":57,"t":"读取表头数据","u":"/docs/2.x/quickstart/read","h":"#读取表头数据","p":41},{"i":59,"t":"额外信息（批注、超链接、合并单元格信息读取）","u":"/docs/2.x/quickstart/read","h":"#额外信息批注超链接合并单元格信息读取","p":41},{"i":61,"t":"读取公式和单元格类型","u":"/docs/2.x/quickstart/read","h":"#读取公式和单元格类型","p":41},{"i":63,"t":"数据转换等异常处理","u":"/docs/2.x/quickstart/read","h":"#数据转换等异常处理","p":41},{"i":65,"t":"不创建对象的读","u":"/docs/2.x/quickstart/read","h":"#不创建对象的读","p":41},{"i":67,"t":"web中的读","u":"/docs/2.x/quickstart/read","h":"#web中的读","p":41},{"i":71,"t":"示例代码","u":"/docs/2.x/quickstart/write","h":"#示例代码","p":69},{"i":73,"t":"最简单的写","u":"/docs/2.x/quickstart/write","h":"#最简单的写","p":69},{"i":75,"t":"根据参数只导出指定列","u":"/docs/2.x/quickstart/write","h":"#根据参数只导出指定列","p":69},{"i":77,"t":"指定写入的列","u":"/docs/2.x/quickstart/write","h":"#指定写入的列","p":69},{"i":79,"t":"复杂头写入","u":"/docs/2.x/quickstart/write","h":"#复杂头写入","p":69},{"i":81,"t":"重复多次写入(写到单个或者多个Sheet)","u":"/docs/2.x/quickstart/write","h":"#重复多次写入写到单个或者多个sheet","p":69},{"i":83,"t":"日期、数字或者自定义格式转换","u":"/docs/2.x/quickstart/write","h":"#日期数字或者自定义格式转换","p":69},{"i":85,"t":"图片导出","u":"/docs/2.x/quickstart/write","h":"#图片导出","p":69},{"i":87,"t":"超链接、备注、公式、指定单个单元格的样式、单个单元格多种样式","u":"/docs/2.x/quickstart/write","h":"#超链接备注公式指定单个单元格的样式单个单元格多种样式","p":69},{"i":89,"t":"根据模板写入","u":"/docs/2.x/quickstart/write","h":"#根据模板写入","p":69},{"i":91,"t":"列宽、行高","u":"/docs/2.x/quickstart/write","h":"#列宽行高","p":69},{"i":93,"t":"注解形式自定义样式","u":"/docs/2.x/quickstart/write","h":"#注解形式自定义样式","p":69},{"i":95,"t":"自定义样式","u":"/docs/2.x/quickstart/write","h":"#自定义样式","p":69},{"i":97,"t":"合并单元格","u":"/docs/2.x/quickstart/write","h":"#合并单元格","p":69},{"i":99,"t":"使用table去写入","u":"/docs/2.x/quickstart/write","h":"#使用table去写入","p":69},{"i":101,"t":"动态头，实时生成头写入","u":"/docs/2.x/quickstart/write","h":"#动态头实时生成头写入","p":69},{"i":103,"t":"自动列宽(不太精确)","u":"/docs/2.x/quickstart/write","h":"#自动列宽不太精确","p":69},{"i":105,"t":"自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）","u":"/docs/2.x/quickstart/write","h":"#自定义拦截器上面几点都不符合但是要对单元格进行操作的参照这个","p":69},{"i":107,"t":"插入批注","u":"/docs/2.x/quickstart/write","h":"#插入批注","p":69},{"i":109,"t":"可变标题处理(包括标题国际化等)","u":"/docs/2.x/quickstart/write","h":"#可变标题处理包括标题国际化等","p":69},{"i":111,"t":"","u":"/docs/2.x/quickstart/write","h":"","p":69},{"i":112,"t":"不创建对象的写","u":"/docs/2.x/quickstart/write","h":"#不创建对象的写","p":69},{"i":114,"t":"web中的写","u":"/docs/2.x/quickstart/write","h":"#web中的写","p":69},{"i":116,"t":"web中的写并且失败的时候返回json","u":"/docs/2.x/quickstart/write","h":"#web中的写并且失败的时候返回json","p":69},{"i":120,"t":"联系方式","u":"/docs/3.x/","h":"#联系方式","p":118},{"i":122,"t":"64M内存20秒读取75M(46W行25列)的Excel（3.0.2+版本）","u":"/docs/3.x/","h":"#64m内存20秒读取75m46w行25列的excel302版本","p":118},{"i":124,"t":"版本支持","u":"/docs/3.x/","h":"#版本支持","p":118},{"i":126,"t":"关于版本升级","u":"/docs/3.x/","h":"#关于版本升级","p":118},{"i":128,"t":"最新版本","u":"/docs/3.x/","h":"#最新版本","p":118},{"i":130,"t":"","u":"/docs/3.x/","h":"","p":118},{"i":131,"t":"工具推荐","u":"/docs/3.x/","h":"#工具推荐","p":118},{"i":133,"t":"easyexcel人员招募","u":"/docs/3.x/","h":"#easyexcel人员招募","p":118},{"i":135,"t":"快速开始","u":"/docs/3.x/","h":"#快速开始","p":118},{"i":139,"t":"示例代码","u":"/docs/3.x/quickstart/fil","h":"#示例代码","p":137},{"i":141,"t":"最简单的填充","u":"/docs/3.x/quickstart/fil","h":"#最简单的填充","p":137},{"i":143,"t":"填充列表","u":"/docs/3.x/quickstart/fil","h":"#填充列表","p":137},{"i":145,"t":"复杂的填充","u":"/docs/3.x/quickstart/fil","h":"#复杂的填充","p":137},{"i":147,"t":"数据量大的复杂填充","u":"/docs/3.x/quickstart/fil","h":"#数据量大的复杂填充","p":137},{"i":149,"t":"横向的填充","u":"/docs/3.x/quickstart/fil","h":"#横向的填充","p":137},{"i":151,"t":"多列表组合填充填充","u":"/docs/3.x/quickstart/fil","h":"#多列表组合填充填充","p":137},{"i":155,"t":"示例代码","u":"/docs/3.x/quickstart/read","h":"#示例代码","p":153},{"i":157,"t":"最简单的读","u":"/docs/3.x/quickstart/read","h":"#最简单的读","p":153},{"i":159,"t":"指定列的下标或者列名","u":"/docs/3.x/quickstart/read","h":"#指定列的下标或者列名","p":153},{"i":161,"t":"读多个sheet","u":"/docs/3.x/quickstart/read","h":"#读多个sheet","p":153},{"i":163,"t":"日期、数字或者自定义格式转换","u":"/docs/3.x/quickstart/read","h":"#日期数字或者自定义格式转换","p":153},{"i":165,"t":"多行头","u":"/docs/3.x/quickstart/read","h":"#多行头","p":153},{"i":167,"t":"同步的返回","u":"/docs/3.x/quickstart/read","h":"#同步的返回","p":153},{"i":169,"t":"读取表头数据","u":"/docs/3.x/quickstart/read","h":"#读取表头数据","p":153},{"i":171,"t":"额外信息（批注、超链接、合并单元格信息读取）","u":"/docs/3.x/quickstart/read","h":"#额外信息批注超链接合并单元格信息读取","p":153},{"i":173,"t":"读取公式和单元格类型","u":"/docs/3.x/quickstart/read","h":"#读取公式和单元格类型","p":153},{"i":175,"t":"数据转换等异常处理","u":"/docs/3.x/quickstart/read","h":"#数据转换等异常处理","p":153},{"i":177,"t":"不创建对象的读","u":"/docs/3.x/quickstart/read","h":"#不创建对象的读","p":153},{"i":179,"t":"web中的读","u":"/docs/3.x/quickstart/read","h":"#web中的读","p":153},{"i":183,"t":"示例代码","u":"/docs/3.x/quickstart/write","h":"#示例代码","p":181},{"i":185,"t":"最简单的写","u":"/docs/3.x/quickstart/write","h":"#最简单的写","p":181},{"i":187,"t":"根据参数只导出指定列","u":"/docs/3.x/quickstart/write","h":"#根据参数只导出指定列","p":181},{"i":189,"t":"指定写入的列","u":"/docs/3.x/quickstart/write","h":"#指定写入的列","p":181},{"i":191,"t":"复杂头写入","u":"/docs/3.x/quickstart/write","h":"#复杂头写入","p":181},{"i":193,"t":"重复多次写入(写到单个或者多个Sheet)","u":"/docs/3.x/quickstart/write","h":"#重复多次写入写到单个或者多个sheet","p":181},{"i":195,"t":"日期、数字或者自定义格式转换","u":"/docs/3.x/quickstart/write","h":"#日期数字或者自定义格式转换","p":181},{"i":197,"t":"图片导出","u":"/docs/3.x/quickstart/write","h":"#图片导出","p":181},{"i":199,"t":"超链接、备注、公式、指定单个单元格的样式、单个单元格多种样式","u":"/docs/3.x/quickstart/write","h":"#超链接备注公式指定单个单元格的样式单个单元格多种样式","p":181},{"i":201,"t":"根据模板写入","u":"/docs/3.x/quickstart/write","h":"#根据模板写入","p":181},{"i":203,"t":"列宽、行高","u":"/docs/3.x/quickstart/write","h":"#列宽行高","p":181},{"i":205,"t":"注解形式自定义样式","u":"/docs/3.x/quickstart/write","h":"#注解形式自定义样式","p":181},{"i":207,"t":"自定义样式","u":"/docs/3.x/quickstart/write","h":"#自定义样式","p":181},{"i":209,"t":"合并单元格","u":"/docs/3.x/quickstart/write","h":"#合并单元格","p":181},{"i":211,"t":"使用table去写入","u":"/docs/3.x/quickstart/write","h":"#使用table去写入","p":181},{"i":213,"t":"动态头，实时生成头写入","u":"/docs/3.x/quickstart/write","h":"#动态头实时生成头写入","p":181},{"i":215,"t":"自动列宽(不太精确)","u":"/docs/3.x/quickstart/write","h":"#自动列宽不太精确","p":181},{"i":217,"t":"自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）","u":"/docs/3.x/quickstart/write","h":"#自定义拦截器上面几点都不符合但是要对单元格进行操作的参照这个","p":181},{"i":219,"t":"插入批注","u":"/docs/3.x/quickstart/write","h":"#插入批注","p":181},{"i":221,"t":"可变标题处理(包括标题国际化等)","u":"/docs/3.x/quickstart/write","h":"#可变标题处理包括标题国际化等","p":181},{"i":223,"t":"","u":"/docs/3.x/quickstart/write","h":"","p":181},{"i":224,"t":"不创建对象的写","u":"/docs/3.x/quickstart/write","h":"#不创建对象的写","p":181},{"i":226,"t":"web中的写","u":"/docs/3.x/quickstart/write","h":"#web中的写","p":181},{"i":228,"t":"web中的写并且失败的时候返回json","u":"/docs/3.x/quickstart/write","h":"#web中的写并且失败的时候返回json","p":181}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/8",[0,0.209]],["t/10",[1,3.697]],["t/12",[0,0.209]],["t/14",[0,0.209]],["t/16",[0,0.209]],["t/18",[]],["t/19",[0,0.209]],["t/21",[2,3.697]],["t/23",[0,0.209]],["t/27",[0,0.209]],["t/29",[0,0.209]],["t/31",[0,0.209]],["t/33",[0,0.209]],["t/35",[0,0.209]],["t/37",[0,0.209]],["t/39",[0,0.209]],["t/43",[0,0.209]],["t/45",[0,0.209]],["t/47",[0,0.209]],["t/49",[3,3.119]],["t/51",[0,0.209]],["t/53",[0,0.209]],["t/55",[0,0.209]],["t/57",[0,0.209]],["t/59",[0,0.209]],["t/61",[0,0.209]],["t/63",[0,0.209]],["t/65",[0,0.209]],["t/67",[4,3.119]],["t/71",[0,0.209]],["t/73",[0,0.209]],["t/75",[0,0.209]],["t/77",[0,0.209]],["t/79",[0,0.209]],["t/81",[3,3.119]],["t/83",[0,0.209]],["t/85",[0,0.209]],["t/87",[0,0.209]],["t/89",[0,0.209]],["t/91",[0,0.209]],["t/93",[0,0.209]],["t/95",[0,0.209]],["t/97",[0,0.209]],["t/99",[5,3.697]],["t/101",[0,0.209]],["t/103",[0,0.209]],["t/105",[0,0.209]],["t/107",[0,0.209]],["t/109",[0,0.209]],["t/111",[]],["t/112",[0,0.209]],["t/114",[4,3.119]],["t/116",[6,3.697]],["t/120",[0,0.209]],["t/122",[1,3.697]],["t/124",[0,0.209]],["t/126",[0,0.209]],["t/128",[0,0.209]],["t/130",[]],["t/131",[0,0.209]],["t/133",[2,3.697]],["t/135",[0,0.209]],["t/139",[0,0.209]],["t/141",[0,0.209]],["t/143",[0,0.209]],["t/145",[0,0.209]],["t/147",[0,0.209]],["t/149",[0,0.209]],["t/151",[0,0.209]],["t/155",[0,0.209]],["t/157",[0,0.209]],["t/159",[0,0.209]],["t/161",[3,3.119]],["t/163",[0,0.209]],["t/165",[0,0.209]],["t/167",[0,0.209]],["t/169",[0,0.209]],["t/171",[0,0.209]],["t/173",[0,0.209]],["t/175",[0,0.209]],["t/177",[0,0.209]],["t/179",[4,3.119]],["t/183",[0,0.209]],["t/185",[0,0.209]],["t/187",[0,0.209]],["t/189",[0,0.209]],["t/191",[0,0.209]],["t/193",[3,3.119]],["t/195",[0,0.209]],["t/197",[0,0.209]],["t/199",[0,0.209]],["t/201",[0,0.209]],["t/203",[0,0.209]],["t/205",[0,0.209]],["t/207",[0,0.209]],["t/209",[0,0.209]],["t/211",[5,3.697]],["t/213",[0,0.209]],["t/215",[0,0.209]],["t/217",[0,0.209]],["t/219",[0,0.209]],["t/221",[0,0.209]],["t/223",[]],["t/224",[0,0.209]],["t/226",[4,3.119]],["t/228",[6,3.697]]],"invertedIndex":[["",{"_index":0,"t":{"8":{"position":[[0,4]]},"12":{"position":[[0,4]]},"14":{"position":[[0,6]]},"16":{"position":[[0,4]]},"19":{"position":[[0,4]]},"23":{"position":[[0,4]]},"27":{"position":[[0,4]]},"29":{"position":[[0,6]]},"31":{"position":[[0,4]]},"33":{"position":[[0,5]]},"35":{"position":[[0,9]]},"37":{"position":[[0,5]]},"39":{"position":[[0,9]]},"43":{"position":[[0,4]]},"45":{"position":[[0,5]]},"47":{"position":[[0,10]]},"51":{"position":[[0,14]]},"53":{"position":[[0,3]]},"55":{"position":[[0,5]]},"57":{"position":[[0,6]]},"59":{"position":[[0,22]]},"61":{"position":[[0,10]]},"63":{"position":[[0,9]]},"65":{"position":[[0,7]]},"71":{"position":[[0,4]]},"73":{"position":[[0,5]]},"75":{"position":[[0,10]]},"77":{"position":[[0,6]]},"79":{"position":[[0,5]]},"83":{"position":[[0,14]]},"85":{"position":[[0,4]]},"87":{"position":[[0,30]]},"89":{"position":[[0,6]]},"91":{"position":[[0,5]]},"93":{"position":[[0,9]]},"95":{"position":[[0,5]]},"97":{"position":[[0,5]]},"101":{"position":[[0,11]]},"103":{"position":[[0,10]]},"105":{"position":[[0,32]]},"107":{"position":[[0,4]]},"109":{"position":[[0,16]]},"112":{"position":[[0,7]]},"120":{"position":[[0,4]]},"124":{"position":[[0,4]]},"126":{"position":[[0,6]]},"128":{"position":[[0,4]]},"131":{"position":[[0,4]]},"135":{"position":[[0,4]]},"139":{"position":[[0,4]]},"141":{"position":[[0,6]]},"143":{"position":[[0,4]]},"145":{"position":[[0,5]]},"147":{"position":[[0,9]]},"149":{"position":[[0,5]]},"151":{"position":[[0,9]]},"155":{"position":[[0,4]]},"157":{"position":[[0,5]]},"159":{"position":[[0,10]]},"163":{"position":[[0,14]]},"165":{"position":[[0,3]]},"167":{"position":[[0,5]]},"169":{"position":[[0,6]]},"171":{"position":[[0,22]]},"173":{"position":[[0,10]]},"175":{"position":[[0,9]]},"177":{"position":[[0,7]]},"183":{"position":[[0,4]]},"185":{"position":[[0,5]]},"187":{"position":[[0,10]]},"189":{"position":[[0,6]]},"191":{"position":[[0,5]]},"195":{"position":[[0,14]]},"197":{"position":[[0,4]]},"199":{"position":[[0,30]]},"201":{"position":[[0,6]]},"203":{"position":[[0,5]]},"205":{"position":[[0,9]]},"207":{"position":[[0,5]]},"209":{"position":[[0,5]]},"213":{"position":[[0,11]]},"215":{"position":[[0,10]]},"217":{"position":[[0,32]]},"219":{"position":[[0,4]]},"221":{"position":[[0,16]]},"224":{"position":[[0,7]]}}}],["64m内存20秒读取75m(46w行25列)的excel（3.0.2",{"_index":1,"t":{"10":{"position":[[0,38]]},"122":{"position":[[0,38]]}}}],["easyexcel",{"_index":2,"t":{"21":{"position":[[0,13]]},"133":{"position":[[0,13]]}}}],["sheet",{"_index":3,"t":{"49":{"position":[[0,8]]},"81":{"position":[[0,21]]},"161":{"position":[[0,8]]},"193":{"position":[[0,21]]}}}],["tabl",{"_index":5,"t":{"99":{"position":[[0,10]]},"211":{"position":[[0,10]]}}}],["web",{"_index":4,"t":{"67":{"position":[[0,6]]},"114":{"position":[[0,6]]},"179":{"position":[[0,6]]},"226":{"position":[[0,6]]}}}],["web中的写并且失败的时候返回json",{"_index":6,"t":{"116":{"position":[[0,19]]},"228":{"position":[[0,19]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":3,"t":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","s":"First Blog Post","u":"/blog/first-blog-post","h":"","p":2},{"i":5,"t":"This is the summary of a very long blog post, Use a <!-- truncate --> comment to limit blog post size in the list view. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","s":"Long Blog Post","u":"/blog/long-blog-post","h":"","p":4},{"i":7,"t":"🏠 关于EasyExcel","s":"关于EasyExcel","u":"/docs/2.x/","h":"","p":6},{"i":9,"t":"QQ1群(已满): 662022184 QQ2群(已满): 1097936804 QQ3群(已满): 453928496 QQ4群: 496594404 钉钉1群（已满）: 21960511 钉钉2群（已满）: 32796397 钉钉3群（已满）: 33797247 钉钉4群（已满）: 33491624 钉钉5群（已满）: 32134498 钉钉6群: 34707941 官方网站: https://yuque.com/easyexcel 因为公司不方便用QQ，所以建议加钉钉群​","s":"联系方式","u":"/docs/2.x/","h":"#联系方式","p":6},{"i":11,"t":"当然还有急速模式能更快，但是内存占用会在100M多一点","s":"64M内存20秒读取75M(46W行25列)的Excel（3.0.2+版本）","u":"/docs/2.x/","h":"#64m内存20秒读取75m46w行25列的excel302版本","p":6},{"i":13,"t":"2+ 版本支持 Java7和Java6 3+ 版本至少 Java8","s":"版本支持","u":"/docs/2.x/","h":"#版本支持","p":6},{"i":15,"t":"不建议跨大版本升级 尤其跨2个大版本 2+ 升级到 3+ 一些不兼容的地方 使用了自定义拦截器去修改样式的会出问题（不会编译报错） 读的时候invoke 里面抛出异常，不会再额外封装一层ExcelAnalysisException（不会编译报错） 样式等注解涉及到 boolean or 一些枚举 值的 有变动，新增默认值（会编译报错，注解改就行） 大版本升级后建议相关内容重新测试下","s":"关于版本升级","u":"/docs/2.x/","h":"#关于版本升级","p":6},{"i":17,"t":"<dependency> <groupId>com.alibaba</groupId> <artifactId>easyexcel</artifactId> <version>3.0.5</version> </dependency>","s":"最新版本","u":"/docs/2.x/","h":"#最新版本","p":6},{"i":20,"t":"用一些在线格式化工具经常广告满天飞，自己搭了一个简单的常用工具会不断升级，欢迎使用。https://json6.cn/","s":"工具推荐","u":"/docs/2.x/","h":"#工具推荐","p":6},{"i":22,"t":"由于工作较忙,有意愿做开源的同学可以报名,主要负责群里回答&issue处理，当然也可以做一些PR. 由于开源没有任何物质回报，然后现在的维护同学也是课余时间维护的，所以想加入的同学需要持之以恒，而不是一时兴起. 要求如下： 有一定java编码能力 & 良好的编码习惯 了解easyexcel 读&写的原理 热爱开源项目 能长期坚持的去做 相对工作没那么忙","s":"easyexcel人员招募","u":"/docs/2.x/","h":"#easyexcel人员招募","p":6},{"i":24,"t":"这里仅仅一些最简单的例子，需要完整的上手请参照：文档 读Excel​ DEMO代码地址：https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/read/ReadTest.java /** * 最简单的读 * <p>1. 创建excel对应的实体对象 参照{@link DemoData} * <p>2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照{@link DemoDataListener} * <p>3. 直接读即可 */ @Test public void simpleRead() { String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 这里 需要指定读用哪个class去读，然后读取第一个sheet 文件流会自动关闭 EasyExcel.read(fileName, DemoData.class, new DemoDataListener()).sheet().doRead(); } 写Excel​ DEMO代码地址：https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/write/WriteTest.java /** * 最简单的写 * <p>1. 创建excel对应的实体对象 参照{@link com.alibaba.easyexcel.test.demo.write.DemoData} * <p>2. 直接写即可 */ @Test public void simpleWrite() { String fileName = TestFileUtil.getPath() + \"write\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去读，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 // 如果这里想使用03 则 传入excelType参数即可 EasyExcel.write(fileName, DemoData.class).sheet(\"模板\").doWrite(data()); } web上传、下载​ DEMO代码地址：https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/web/WebTest.java /** * 文件下载（失败了会返回一个有部分数据的Excel） * <p>1. 创建excel对应的实体对象 参照{@link DownloadData} * <p>2. 设置返回的 参数 * <p>3. 直接写，这里注意，finish的时候会自动关闭OutputStream,当然你外面再关闭流问题不大 */ @GetMapping(\"download\") public void download(HttpServletResponse response) throws IOException { // 这里注意 有同学反应使用swagger 会导致各种问题，请直接用浏览器或者用postman response.setContentType(\"application/vnd.ms-excel\"); response.setCharacterEncoding(\"utf-8\"); // 这里URLEncoder.encode可以防止中文乱码 当然和easyexcel没有关系 String fileName = URLEncoder.encode(\"测试\", \"UTF-8\"); response.setHeader(\"Content-disposition\", \"attachment;filename=\" + fileName + \".xlsx\"); EasyExcel.write(response.getOutputStream(), DownloadData.class).sheet(\"模板\").doWrite(data()); } /** * 文件上传 * <p>1. 创建excel对应的实体对象 参照{@link UploadData} * <p>2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照{@link UploadDataListener} * <p>3. 直接读即可 */ @PostMapping(\"upload\") @ResponseBody public String upload(MultipartFile file) throws IOException { EasyExcel.read(file.getInputStream(), UploadData.class, new UploadDataListener(uploadDAO)).sheet().doRead(); return \"success\"; }","s":"快速开始","u":"/docs/2.x/","h":"#快速开始","p":6},{"i":26,"t":"🏠 快速开始 填充Excel","s":"填充Excel","u":"/docs/2.x/quickstart/fill","h":"","p":25},{"i":28,"t":"DEMO代码地址：https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/fill/FillTest.java","s":"示例代码","u":"/docs/2.x/quickstart/fill","h":"#示例代码","p":25},{"i":30,"t":"since​ 2.1.1 模板​ 最终效果​ 对象​ @Getter@Setter@EqualsAndHashCodepublic class FillData { private String name; private double number; private Date date;} 代码​ /** * 最简单的填充 * * @since 2.1.1 */ @Test public void simpleFill() { // 模板注意 用{} 来表示你要用的变量 如果本来就有\"{\",\"}\" 特殊字符 用\"\\{\",\"\\}\"代替 String templateFileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"fill\" + File.separator + \"simple.xlsx\"; // 方案1 根据对象填充 String fileName = TestFileUtil.getPath() + \"simpleFill\" + System.currentTimeMillis() + \".xlsx\"; // 这里 会填充到第一个sheet， 然后文件流会自动关闭 FillData fillData = new FillData(); fillData.setName(\"张三\"); fillData.setNumber(5.2); EasyExcel.write(fileName).withTemplate(templateFileName).sheet().doFill(fillData); // 方案2 根据Map填充 fileName = TestFileUtil.getPath() + \"simpleFill\" + System.currentTimeMillis() + \".xlsx\"; // 这里 会填充到第一个sheet， 然后文件流会自动关闭 Map<String, Object> map = new HashMap<String, Object>(); map.put(\"name\", \"张三\"); map.put(\"number\", 5.2); EasyExcel.write(fileName).withTemplate(templateFileName).sheet().doFill(map); }","s":"最简单的填充","u":"/docs/2.x/quickstart/fill","h":"#最简单的填充","p":25},{"i":32,"t":"since​ 2.1.1 模板​ 最终效果​ 对象​ 参照：对象 代码​ /** * 填充列表 * * @since 2.1.1 */ @Test public void listFill() { // 模板注意 用{} 来表示你要用的变量 如果本来就有\"{\",\"}\" 特殊字符 用\"\\{\",\"\\}\"代替 // 填充list 的时候还要注意 模板中{.} 多了个点 表示list String templateFileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"fill\" + File.separator + \"list.xlsx\"; // 方案1 一下子全部放到内存里面 并填充 String fileName = TestFileUtil.getPath() + \"listFill\" + System.currentTimeMillis() + \".xlsx\"; // 这里 会填充到第一个sheet， 然后文件流会自动关闭 EasyExcel.write(fileName).withTemplate(templateFileName).sheet().doFill(data()); // 方案2 分多次 填充 会使用文件缓存（省内存） jdk8 // since: 3.0.0-beta1 fileName = TestFileUtil.getPath() + \"listFill\" + System.currentTimeMillis() + \".xlsx\"; EasyExcel.write(fileName) .withTemplate(templateFileName) .sheet() .doFill(() -> { // 分页查询数据 return data(); }); // 方案3 分多次 填充 会使用文件缓存（省内存） fileName = TestFileUtil.getPath() + \"listFill\" + System.currentTimeMillis() + \".xlsx\"; ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(templateFileName).build(); WriteSheet writeSheet = EasyExcel.writerSheet().build(); excelWriter.fill(data(), writeSheet); excelWriter.fill(data(), writeSheet); // 千万别忘记关闭流 excelWriter.finish(); }","s":"填充列表","u":"/docs/2.x/quickstart/fill","h":"#填充列表","p":25},{"i":34,"t":"since​ 2.1.1 模板​ 最终效果​ 对象​ 参照：对象 代码​ /** * 复杂的填充 * * @since 2.1.1 */ @Test public void complexFill() { // 模板注意 用{} 来表示你要用的变量 如果本来就有\"{\",\"}\" 特殊字符 用\"\\{\",\"\\}\"代替 // {} 代表普通变量 {.} 代表是list的变量 String templateFileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"fill\" + File.separator + \"complex.xlsx\"; String fileName = TestFileUtil.getPath() + \"complexFill\" + System.currentTimeMillis() + \".xlsx\"; ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(templateFileName).build(); WriteSheet writeSheet = EasyExcel.writerSheet().build(); // 这里注意 入参用了forceNewRow 代表在写入list的时候不管list下面有没有空行 都会创建一行，然后下面的数据往后移动。默认 是false，会直接使用下一行，如果没有则创建。 // forceNewRow 如果设置了true,有个缺点 就是他会把所有的数据都放到内存了，所以慎用 // 简单的说 如果你的模板有list,且list不是最后一行，下面还有数据需要填充 就必须设置 forceNewRow=true 但是这个就会把所有数据放到内存 会很耗内存 // 如果数据量大 list不是最后一行 参照下一个 FillConfig fillConfig = FillConfig.builder().forceNewRow(Boolean.TRUE).build(); excelWriter.fill(data(), fillConfig, writeSheet); excelWriter.fill(data(), fillConfig, writeSheet); Map<String, Object> map = new HashMap<String, Object>(); map.put(\"date\", \"2019年10月9日13:28:28\"); map.put(\"total\", 1000); excelWriter.fill(map, writeSheet); excelWriter.finish(); }","s":"复杂的填充","u":"/docs/2.x/quickstart/fill","h":"#复杂的填充","p":25},{"i":36,"t":"since​ 2.1.1 模板​ 最终效果​ 对象​ 参照：对象 代码​ /** * 数据量大的复杂填充 * <p> * 这里的解决方案是 确保模板list为最后一行，然后再拼接table.还有03版没救，只能刚正面加内存。 * * @since 2.1.1 */ @Test public void complexFillWithTable() { // 模板注意 用{} 来表示你要用的变量 如果本来就有\"{\",\"}\" 特殊字符 用\"\\{\",\"\\}\"代替 // {} 代表普通变量 {.} 代表是list的变量 // 这里模板 删除了list以后的数据，也就是统计的这一行 String templateFileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"fill\" + File.separator + \"complexFillWithTable.xlsx\"; String fileName = TestFileUtil.getPath() + \"complexFillWithTable\" + System.currentTimeMillis() + \".xlsx\"; ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(templateFileName).build(); WriteSheet writeSheet = EasyExcel.writerSheet().build(); // 直接写入数据 excelWriter.fill(data(), writeSheet); excelWriter.fill(data(), writeSheet); // 写入list之前的数据 Map<String, Object> map = new HashMap<String, Object>(); map.put(\"date\", \"2019年10月9日13:28:28\"); excelWriter.fill(map, writeSheet); // list 后面还有个统计 想办法手动写入 // 这里偷懒直接用list 也可以用对象 List<List<String>> totalListList = new ArrayList<List<String>>(); List<String> totalList = new ArrayList<String>(); totalListList.add(totalList); totalList.add(null); totalList.add(null); totalList.add(null); // 第四列 totalList.add(\"统计:1000\"); // 这里是write 别和fill 搞错了 excelWriter.write(totalListList, writeSheet); excelWriter.finish(); // 总体上写法比较复杂 但是也没有想到好的版本 异步的去写入excel 不支持行的删除和移动，也不支持备注这种的写入，所以也排除了可以 // 新建一个 然后一点点复制过来的方案，最后导致list需要新增行的时候，后面的列的数据没法后移，后续会继续想想解决方案 }","s":"数据量大的复杂填充","u":"/docs/2.x/quickstart/fill","h":"#数据量大的复杂填充","p":25},{"i":38,"t":"since​ 2.1.1 模板​ 最终效果​ 对象​ 参照：对象 代码​ /** * 横向的填充 * * @since 2.1.1 */ @Test public void horizontalFill() { // 模板注意 用{} 来表示你要用的变量 如果本来就有\"{\",\"}\" 特殊字符 用\"\\{\",\"\\}\"代替 // {} 代表普通变量 {.} 代表是list的变量 String templateFileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"fill\" + File.separator + \"horizontal.xlsx\"; String fileName = TestFileUtil.getPath() + \"horizontalFill\" + System.currentTimeMillis() + \".xlsx\"; ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(templateFileName).build(); WriteSheet writeSheet = EasyExcel.writerSheet().build(); FillConfig fillConfig = FillConfig.builder().direction(WriteDirectionEnum.HORIZONTAL).build(); excelWriter.fill(data(), fillConfig, writeSheet); excelWriter.fill(data(), fillConfig, writeSheet); Map<String, Object> map = new HashMap<String, Object>(); map.put(\"date\", \"2019年10月9日13:28:28\"); excelWriter.fill(map, writeSheet); // 别忘记关闭流 excelWriter.finish(); }","s":"横向的填充","u":"/docs/2.x/quickstart/fill","h":"#横向的填充","p":25},{"i":40,"t":"since​ 2.2.0-beta1 模板​ 最终效果​ 对象​ 参照：对象 代码​ /** * 多列表组合填充填充 * * @since 2.2.0-beta1 */ @Test public void compositeFill() { // 模板注意 用{} 来表示你要用的变量 如果本来就有\"{\",\"}\" 特殊字符 用\"\\{\",\"\\}\"代替 // {} 代表普通变量 {.} 代表是list的变量 {前缀.} 前缀可以区分不同的list String templateFileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"fill\" + File.separator + \"composite.xlsx\"; String fileName = TestFileUtil.getPath() + \"compositeFill\" + System.currentTimeMillis() + \".xlsx\"; ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(templateFileName).build(); WriteSheet writeSheet = EasyExcel.writerSheet().build(); FillConfig fillConfig = FillConfig.builder().direction(WriteDirectionEnum.HORIZONTAL).build(); // 如果有多个list 模板上必须有{前缀.} 这里的前缀就是 data1，然后多个list必须用 FillWrapper包裹 excelWriter.fill(new FillWrapper(\"data1\", data()), fillConfig, writeSheet); excelWriter.fill(new FillWrapper(\"data1\", data()), fillConfig, writeSheet); excelWriter.fill(new FillWrapper(\"data2\", data()), writeSheet); excelWriter.fill(new FillWrapper(\"data2\", data()), writeSheet); excelWriter.fill(new FillWrapper(\"data3\", data()), writeSheet); excelWriter.fill(new FillWrapper(\"data3\", data()), writeSheet); Map<String, Object> map = new HashMap<String, Object>(); map.put(\"date\", \"2019年10月9日13:28:28\"); excelWriter.fill(map, writeSheet); // 别忘记关闭流 excelWriter.finish(); }","s":"多列表组合填充填充","u":"/docs/2.x/quickstart/fill","h":"#多列表组合填充填充","p":25},{"i":42,"t":"🏠 快速开始 读Excel","s":"读Excel","u":"/docs/2.x/quickstart/read","h":"","p":41},{"i":44,"t":"DEMO代码地址：https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/read/ReadTest.java","s":"示例代码","u":"/docs/2.x/quickstart/read","h":"#示例代码","p":41},{"i":46,"t":"excel示例​ 对象​ @Getter@Setter@EqualsAndHashCodepublic class DemoData { private String string; private Date date; private Double doubleData;} 监听器​ // 有个很重要的点 DemoDataListener 不能被spring管理，要每次读取excel都要new,然后里面用到spring可以构造方法传进去@Slf4jpublic class DemoDataListener implements ReadListener<DemoData> { /** * 每隔5条存储数据库，实际使用中可以100条，然后清理list ，方便内存回收 */ private static final int BATCH_COUNT = 100; /** * 缓存的数据 */ private List<DemoData> cachedDataList = ListUtils.newArrayListWithExpectedSize(BATCH_COUNT); /** * 假设这个是一个DAO，当然有业务逻辑这个也可以是一个service。当然如果不用存储这个对象没用。 */ private DemoDAO demoDAO; public DemoDataListener() { // 这里是demo，所以随便new一个。实际使用如果到了spring,请使用下面的有参构造函数 demoDAO = new DemoDAO(); } /** * 如果使用了spring,请使用这个构造方法。每次创建Listener的时候需要把spring管理的类传进来 * * @param demoDAO */ public DemoDataListener(DemoDAO demoDAO) { this.demoDAO = demoDAO; } /** * 这个每一条数据解析都会来调用 * * @param data one row value. Is is same as {@link AnalysisContext#readRowHolder()} * @param context */ @Override public void invoke(DemoData data, AnalysisContext context) { log.info(\"解析到一条数据:{}\", JSON.toJSONString(data)); cachedDataList.add(data); // 达到BATCH_COUNT了，需要去存储一次数据库，防止数据几万条数据在内存，容易OOM if (cachedDataList.size() >= BATCH_COUNT) { saveData(); // 存储完成清理 list cachedDataList = ListUtils.newArrayListWithExpectedSize(BATCH_COUNT); } } /** * 所有数据解析完成了 都会来调用 * * @param context */ @Override public void doAfterAllAnalysed(AnalysisContext context) { // 这里也要保存数据，确保最后遗留的数据也存储到数据库 saveData(); log.info(\"所有数据解析完成！\"); } /** * 加上存储数据库 */ private void saveData() { log.info(\"{}条数据，开始存储数据库！\", cachedDataList.size()); demoDAO.save(cachedDataList); log.info(\"存储数据库成功！\"); }} 持久层​ /** * 假设这个是你的DAO存储。当然还要这个类让spring管理，当然你不用需要存储，也不需要这个类。 **/public class DemoDAO { public void save(List<DemoData> list) { // 如果是mybatis,尽量别直接调用多次insert,自己写一个mapper里面新增一个方法batchInsert,所有数据一次性插入 }} 代码​ /** * 最简单的读 * <p> * 1. 创建excel对应的实体对象 参照{@link DemoData} * <p> * 2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照{@link DemoDataListener} * <p> * 3. 直接读即可 */ @Test public void simpleRead() { // 写法1：JDK8+ ,不用额外写一个DemoDataListener // since: 3.0.0-beta1 String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 这里 需要指定读用哪个class去读，然后读取第一个sheet 文件流会自动关闭 // 这里每次会读取3000条数据 然后返回过来 直接调用使用数据就行 EasyExcel.read(fileName, DemoData.class, new PageReadListener<DemoData>(dataList -> { for (DemoData demoData : dataList) { log.info(\"读取到一条数据{}\", JSON.toJSONString(demoData)); } })).sheet().doRead(); // 写法2： // 匿名内部类 不用额外写一个DemoDataListener fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 这里 需要指定读用哪个class去读，然后读取第一个sheet 文件流会自动关闭 EasyExcel.read(fileName, DemoData.class, new ReadListener<DemoData>() { /** * 单次缓存的数据量 */ public static final int BATCH_COUNT = 100; /** *临时存储 */ private List<DemoData> cachedDataList = ListUtils.newArrayListWithExpectedSize(BATCH_COUNT); @Override public void invoke(DemoData data, AnalysisContext context) { cachedDataList.add(data); if (cachedDataList.size() >= BATCH_COUNT) { saveData(); // 存储完成清理 list cachedDataList = ListUtils.newArrayListWithExpectedSize(BATCH_COUNT); } } @Override public void doAfterAllAnalysed(AnalysisContext context) { saveData(); } /** * 加上存储数据库 */ private void saveData() { log.info(\"{}条数据，开始存储数据库！\", cachedDataList.size()); log.info(\"存储数据库成功！\"); } }).sheet().doRead(); // 有个很重要的点 DemoDataListener 不能被spring管理，要每次读取excel都要new,然后里面用到spring可以构造方法传进去 // 写法3： fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 这里 需要指定读用哪个class去读，然后读取第一个sheet 文件流会自动关闭 EasyExcel.read(fileName, DemoData.class, new DemoDataListener()).sheet().doRead(); // 写法4： fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 一个文件一个reader ExcelReader excelReader = null; try { excelReader = EasyExcel.read(fileName, DemoData.class, new DemoDataListener()).build(); // 构建一个sheet 这里可以指定名字或者no ReadSheet readSheet = EasyExcel.readSheet(0).build(); // 读取一个sheet excelReader.read(readSheet); } finally { if (excelReader != null) { // 这里千万别忘记关闭，读的时候会创建临时文件，到时磁盘会崩的 excelReader.finish(); } } }","s":"最简单的读","u":"/docs/2.x/quickstart/read","h":"#最简单的读","p":41},{"i":48,"t":"excel示例​ 参照：excel示例 对象​ @Getter@Setter@EqualsAndHashCodepublic class IndexOrNameData { /** * 强制读取第三个 这里不建议 index 和 name 同时用，要么一个对象只用index，要么一个对象只用name去匹配 */ @ExcelProperty(index = 2) private Double doubleData; /** * 用名字去匹配，这里需要注意，如果名字重复，会导致只有一个字段读取到数据 */ @ExcelProperty(\"字符串标题\") private String string; @ExcelProperty(\"日期标题\") private Date date;} 监听器​ 参照：监听器 只是泛型变了而已 代码​ /** * 指定列的下标或者列名 * * <p>1. 创建excel对应的实体对象,并使用{@link ExcelProperty}注解. 参照{@link IndexOrNameData} * <p>2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照{@link IndexOrNameDataListener} * <p>3. 直接读即可 */ @Test public void indexOrNameRead() { String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 这里默认读取第一个sheet EasyExcel.read(fileName, IndexOrNameData.class, new IndexOrNameDataListener()).sheet().doRead(); }","s":"指定列的下标或者列名","u":"/docs/2.x/quickstart/read","h":"#指定列的下标或者列名","p":41},{"i":50,"t":"excel示例​ 参照：excel示例 对象​ 参照：对象 监听器​ 参照：监听器 代码​ /** * 读多个或者全部sheet,这里注意一个sheet不能读取多次，多次读取需要重新读取文件 * <p> * 1. 创建excel对应的实体对象 参照{@link DemoData} * <p> * 2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照{@link DemoDataListener} * <p> * 3. 直接读即可 */ @Test public void repeatedRead() { String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 读取全部sheet // 这里需要注意 DemoDataListener的doAfterAllAnalysed 会在每个sheet读取完毕后调用一次。然后所有sheet都会往同一个DemoDataListener里面写 EasyExcel.read(fileName, DemoData.class, new DemoDataListener()).doReadAll(); // 读取部分sheet fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; ExcelReader excelReader = null; try { excelReader = EasyExcel.read(fileName).build(); // 这里为了简单 所以注册了 同样的head 和Listener 自己使用功能必须不同的Listener ReadSheet readSheet1 = EasyExcel.readSheet(0).head(DemoData.class).registerReadListener(new DemoDataListener()).build(); ReadSheet readSheet2 = EasyExcel.readSheet(1).head(DemoData.class).registerReadListener(new DemoDataListener()).build(); // 这里注意 一定要把sheet1 sheet2 一起传进去，不然有个问题就是03版的excel 会读取多次，浪费性能 excelReader.read(readSheet1, readSheet2); } finally { if (excelReader != null) { // 这里千万别忘记关闭，读的时候会创建临时文件，到时磁盘会崩的 excelReader.finish(); } } }","s":"读多个sheet","u":"/docs/2.x/quickstart/read","h":"#读多个sheet","p":41},{"i":52,"t":"excel示例​ 参照：excel示例 对象​ @Getter@Setter@EqualsAndHashCodepublic class ConverterData { /** * 我自定义 转换器，不管数据库传过来什么 。我给他加上“自定义：” */ @ExcelProperty(converter = CustomStringStringConverter.class) private String string; /** * 这里用string 去接日期才能格式化。我想接收年月日格式 */ @DateTimeFormat(\"yyyy年MM月dd日HH时mm分ss秒\") private String date; /** * 我想接收百分比的数字 */ @NumberFormat(\"#.##%\") private String doubleData;} 监听器​ 参照：监听器 只是泛型变了 自定义转换器​ public class CustomStringStringConverter implements Converter<String> { @Override public Class<?> supportJavaTypeKey() { return String.class; } @Override public CellDataTypeEnum supportExcelTypeKey() { return CellDataTypeEnum.STRING; } /** * 这里读的时候会调用 * * @param context * @return */ @Override public String convertToJavaData(ReadConverterContext<?> context) { return \"自定义：\" + context.getReadCellData().getStringValue(); } /** * 这里是写的时候会调用 不用管 * * @return */ @Override public WriteCellData<?> convertToExcelData(WriteConverterContext<String> context) { return new WriteCellData<>(context.getValue()); }} 代码​ /** * 日期、数字或者自定义格式转换 * <p> * 默认读的转换器{@link DefaultConverterLoader#loadDefaultReadConverter()} * <p>1. 创建excel对应的实体对象 参照{@link ConverterData}.里面可以使用注解{@link DateTimeFormat}、{@link NumberFormat}或者自定义注解 * <p>2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照{@link ConverterDataListener} * <p>3. 直接读即可 */ @Test public void converterRead() { String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 这里 需要指定读用哪个class去读，然后读取第一个sheet EasyExcel.read(fileName, ConverterData.class, new ConverterDataListener()) // 这里注意 我们也可以registerConverter来指定自定义转换器， 但是这个转换变成全局了， 所有java为string,excel为string的都会用这个转换器。 // 如果就想单个字段使用请使用@ExcelProperty 指定converter // .registerConverter(new CustomStringStringConverter()) // 读取sheet .sheet().doRead(); }","s":"日期、数字或者自定义格式转换","u":"/docs/2.x/quickstart/read","h":"#日期数字或者自定义格式转换","p":41},{"i":54,"t":"excel示例​ 参照：excel示例 对象​ 参照：对象 监听器​ 参照：监听器 代码​ /** * 多行头 * * <p>1. 创建excel对应的实体对象 参照{@link DemoData} * <p>2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照{@link DemoDataListener} * <p>3. 设置headRowNumber参数，然后读。 这里要注意headRowNumber如果不指定， 会根据你传入的class的{@link ExcelProperty#value()}里面的表头的数量来决定行数， * 如果不传入class则默认为1.当然你指定了headRowNumber不管是否传入class都是以你传入的为准。 */ @Test public void complexHeaderRead() { String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 这里 需要指定读用哪个class去读，然后读取第一个sheet EasyExcel.read(fileName, DemoData.class, new DemoDataListener()).sheet() // 这里可以设置1，因为头就是一行。如果多行头，可以设置其他值。不传入也可以，因为默认会根据DemoData 来解析，他没有指定头，也就是默认1行 .headRowNumber(1).doRead(); }","s":"多行头","u":"/docs/2.x/quickstart/read","h":"#多行头","p":41},{"i":56,"t":"excel示例​ 参照：excel示例 对象​ 参照：对象 代码​ /** * 同步的返回，不推荐使用，如果数据量大会把数据放到内存里面 */ @Test public void synchronousRead() { String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 这里 需要指定读用哪个class去读，然后读取第一个sheet 同步读取会自动finish List<DemoData> list = EasyExcel.read(fileName).head(DemoData.class).sheet().doReadSync(); for (DemoData data : list) { LOGGER.info(\"读取到数据:{}\", JSON.toJSONString(data)); } // 这里 也可以不指定class，返回一个list，然后读取第一个sheet 同步读取会自动finish List<Map<Integer, String>> listMap = EasyExcel.read(fileName).sheet().doReadSync(); for (Map<Integer, String> data : listMap) { // 返回每条数据的键值对 表示所在的列 和所在列的值 LOGGER.info(\"读取到数据:{}\", JSON.toJSONString(data)); } }","s":"同步的返回","u":"/docs/2.x/quickstart/read","h":"#同步的返回","p":41},{"i":58,"t":"excel示例​ 参照：excel示例 对象​ 参照：对象 监听器​ 参照：监听器 里面多了一个方法,只要重写invokeHeadMap方法即可 /** * 这里会一行行的返回头 * * @param headMap * @param context */ @Override public void invokeHead(Map<Integer, ReadCellData<?>> headMap, AnalysisContext context) { log.info(\"解析到一条头数据:{}\", JSON.toJSONString(headMap)); // 如果想转成成 Map<Integer,String> // 方案1： 不要implements ReadListener 而是 extends AnalysisEventListener // 方案2： 调用 ConverterUtils.convertToStringMap(headMap, context) 自动会转换 } 代码​ /** * 读取表头数据 * * <p> * 1. 创建excel对应的实体对象 参照{@link DemoData} * <p> * 2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照{@link DemoHeadDataListener} * <p> * 3. 直接读即可 */ @Test public void headerRead() { String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 这里 需要指定读用哪个class去读，然后读取第一个sheet EasyExcel.read(fileName, DemoData.class, new DemoHeadDataListener()).sheet().doRead(); }","s":"读取表头数据","u":"/docs/2.x/quickstart/read","h":"#读取表头数据","p":41},{"i":60,"t":"since​ 2.0.0-beta1 excel示例​ 对象​ @Getter@Setter@EqualsAndHashCodepublic class DemoExtraData { private String row1; private String row2;} 监听器​ 参照：监听器 里面多了一个 extra 方法 @Slf4jpublic class DemoExtraListener implements ReadListener<DemoExtraData> { @Override public void invoke(DemoExtraData data, AnalysisContext context) {} @Override public void doAfterAllAnalysed(AnalysisContext context) {} @Override public void extra(CellExtra extra, AnalysisContext context) { log.info(\"读取到了一条额外信息:{}\", JSON.toJSONString(extra)); switch (extra.getType()) { case COMMENT: log.info(\"额外信息是批注,在rowIndex:{},columnIndex;{},内容是:{}\", extra.getRowIndex(), extra.getColumnIndex(), extra.getText()); break; case HYPERLINK: if (\"Sheet1!A1\".equals(extra.getText())) { log.info(\"额外信息是超链接,在rowIndex:{},columnIndex;{},内容是:{}\", extra.getRowIndex(), extra.getColumnIndex(), extra.getText()); } else if (\"Sheet2!A1\".equals(extra.getText())) { log.info( \"额外信息是超链接,而且覆盖了一个区间,在firstRowIndex:{},firstColumnIndex;{},lastRowIndex:{},lastColumnIndex:{},\" + \"内容是:{}\", extra.getFirstRowIndex(), extra.getFirstColumnIndex(), extra.getLastRowIndex(), extra.getLastColumnIndex(), extra.getText()); } else { Assert.fail(\"Unknown hyperlink!\"); } break; case MERGE: log.info( \"额外信息是超链接,而且覆盖了一个区间,在firstRowIndex:{},firstColumnIndex;{},lastRowIndex:{},lastColumnIndex:{}\", extra.getFirstRowIndex(), extra.getFirstColumnIndex(), extra.getLastRowIndex(), extra.getLastColumnIndex()); break; default: } }} 代码​ /** * 额外信息（批注、超链接、合并单元格信息读取） * <p> * 由于是流式读取，没法在读取到单元格数据的时候直接读取到额外信息，所以只能最后通知哪些单元格有哪些额外信息 * * <p> * 1. 创建excel对应的实体对象 参照{@link DemoExtraData} * <p> * 2. 由于默认异步读取excel，所以需要创建excel一行一行的回调监听器，参照{@link DemoExtraListener} * <p> * 3. 直接读即可 * * @since 2.2.0-beat1 */ @Test public void extraRead() { String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"extra.xlsx\"; // 这里 需要指定读用哪个class去读，然后读取第一个sheet EasyExcel.read(fileName, DemoExtraData.class, new DemoExtraListener()) // 需要读取批注 默认不读取 .extraRead(CellExtraTypeEnum.COMMENT) // 需要读取超链接 默认不读取 .extraRead(CellExtraTypeEnum.HYPERLINK) // 需要读取合并单元格信息 默认不读取 .extraRead(CellExtraTypeEnum.MERGE).sheet().doRead(); }","s":"额外信息（批注、超链接、合并单元格信息读取）","u":"/docs/2.x/quickstart/read","h":"#额外信息批注超链接合并单元格信息读取","p":41},{"i":62,"t":"excel示例​ 对象​ @Getter@Setter@EqualsAndHashCodepublic class CellDataReadDemoData { private CellData<String> string; // 这里注意 虽然是日期 但是 类型 存储的是number 因为excel 存储的就是number private CellData<Date> date; private CellData<Double> doubleData; // 这里并不一定能完美的获取 有些公式是依赖性的 可能会读不到 这个问题后续会修复 private CellData<String> formulaValue;} 监听器​ 参照：监听器 代码 /** * 读取公式和单元格类型 * * <p> * 1. 创建excel对应的实体对象 参照{@link CellDataReadDemoData} * <p> * 2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照{@link DemoHeadDataListener} * <p> * 3. 直接读即可 * * @since 2.2.0-beat1 */ @Test public void cellDataRead() { String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"cellDataDemo.xlsx\"; // 这里 需要指定读用哪个class去读，然后读取第一个sheet EasyExcel.read(fileName, CellDataReadDemoData.class, new CellDataDemoHeadDataListener()).sheet().doRead(); }","s":"读取公式和单元格类型","u":"/docs/2.x/quickstart/read","h":"#读取公式和单元格类型","p":41},{"i":64,"t":"excel示例​ 参照：excel示例 对象​ @Getter@Setter@EqualsAndHashCodepublic class ExceptionDemoData { /** * 用日期去接字符串 肯定报错 */ private Date date;} 监听器​ 参照：监听器 里面多了一个方法,只要重写onException方法即可 /** * 在转换异常 获取其他异常下会调用本接口。抛出异常则停止读取。如果这里不抛出异常则 继续读取下一行。 * * @param exception * @param context * @throws Exception */ @Override public void onException(Exception exception, AnalysisContext context) { log.error(\"解析失败，但是继续解析下一行:{}\", exception.getMessage()); // 如果是某一个单元格的转换异常 能获取到具体行号 // 如果要获取头的信息 配合invokeHeadMap使用 if (exception instanceof ExcelDataConvertException) { ExcelDataConvertException excelDataConvertException = (ExcelDataConvertException)exception; log.error(\"第{}行，第{}列解析异常，数据为:{}\", excelDataConvertException.getRowIndex(), excelDataConvertException.getColumnIndex(), excelDataConvertException.getCellData()); } } 代码​ /** * 数据转换等异常处理 * * <p> * 1. 创建excel对应的实体对象 参照{@link ExceptionDemoData} * <p> * 2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照{@link DemoExceptionListener} * <p> * 3. 直接读即可 */ @Test public void exceptionRead() { String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 这里 需要指定读用哪个class去读，然后读取第一个sheet EasyExcel.read(fileName, ExceptionDemoData.class, new DemoExceptionListener()).sheet().doRead(); }","s":"数据转换等异常处理","u":"/docs/2.x/quickstart/read","h":"#数据转换等异常处理","p":41},{"i":66,"t":"excel示例​ 参照：excel示例 监听器​ @Slf4jpublic class NoModelDataListener extends AnalysisEventListener<Map<Integer, String>> { /** * 每隔5条存储数据库，实际使用中可以100条，然后清理list ，方便内存回收 */ private static final int BATCH_COUNT = 5; private List<Map<Integer, String>> cachedDataList = ListUtils.newArrayListWithExpectedSize(BATCH_COUNT); @Override public void invoke(Map<Integer, String> data, AnalysisContext context) { log.info(\"解析到一条数据:{}\", JSON.toJSONString(data)); cachedDataList.add(data); if (cachedDataList.size() >= BATCH_COUNT) { saveData(); cachedDataList = ListUtils.newArrayListWithExpectedSize(BATCH_COUNT); } } @Override public void doAfterAllAnalysed(AnalysisContext context) { saveData(); log.info(\"所有数据解析完成！\"); } /** * 加上存储数据库 */ private void saveData() { log.info(\"{}条数据，开始存储数据库！\", cachedDataList.size()); log.info(\"存储数据库成功！\"); }} 代码​ /** * 不创建对象的读 */ @Test public void noModelRead() { String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 这里 只要，然后读取第一个sheet 同步读取会自动finish EasyExcel.read(fileName, new NoModelDataListener()).sheet().doRead(); }","s":"不创建对象的读","u":"/docs/2.x/quickstart/read","h":"#不创建对象的读","p":41},{"i":68,"t":"示例代码​ DEMO代码地址：https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/web/WebTest.java excel示例​ 参照：excel示例 对象​ 参照：对象 只是名字变了 监听器​ 参照：监听器 只是泛型变了 代码​ /** * 文件上传 * <p> * 1. 创建excel对应的实体对象 参照{@link UploadData} * <p> * 2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照{@link UploadDataListener} * <p> * 3. 直接读即可 */ @PostMapping(\"upload\") @ResponseBody public String upload(MultipartFile file) throws IOException { EasyExcel.read(file.getInputStream(), UploadData.class, new UploadDataListener(uploadDAO)).sheet().doRead(); return \"success\"; }","s":"web中的读","u":"/docs/2.x/quickstart/read","h":"#web中的读","p":41},{"i":70,"t":"🏠 快速开始 写Excel","s":"写Excel","u":"/docs/2.x/quickstart/write","h":"","p":69},{"i":72,"t":"DEMO代码地址：https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/write/WriteTest.java","s":"示例代码","u":"/docs/2.x/quickstart/write","h":"#示例代码","p":69},{"i":74,"t":"excel示例​ 对象​ @Getter@Setter@EqualsAndHashCodepublic class DemoData { @ExcelProperty(\"字符串标题\") private String string; @ExcelProperty(\"日期标题\") private Date date; @ExcelProperty(\"数字标题\") private Double doubleData; /** * 忽略这个字段 */ @ExcelIgnore private String ignore;} 代码​ /** * 最简单的写 * <p> * 1. 创建excel对应的实体对象 参照{@link DemoData} * <p> * 2. 直接写即可 */ @Test public void simpleWrite() { // 注意 simpleWrite在数据量不大的情况下可以使用（5000以内，具体也要看实际情况），数据量大参照 重复多次写入 // 写法1 JDK8+ // since: 3.0.0-beta1 String fileName = TestFileUtil.getPath() + \"simpleWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 // 如果这里想使用03 则 传入excelType参数即可 EasyExcel.write(fileName, DemoData.class) .sheet(\"模板\") .doWrite(() -> { // 分页查询数据 return data(); }); // 写法2 fileName = TestFileUtil.getPath() + \"simpleWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 // 如果这里想使用03 则 传入excelType参数即可 EasyExcel.write(fileName, DemoData.class).sheet(\"模板\").doWrite(data()); // 写法3 fileName = TestFileUtil.getPath() + \"simpleWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写 ExcelWriter excelWriter = null; try { excelWriter = EasyExcel.write(fileName, DemoData.class).build(); WriteSheet writeSheet = EasyExcel.writerSheet(\"模板\").build(); excelWriter.write(data(), writeSheet); } finally { // 千万别忘记finish 会帮忙关闭流 if (excelWriter != null) { excelWriter.finish(); } } }","s":"最简单的写","u":"/docs/2.x/quickstart/write","h":"#最简单的写","p":69},{"i":76,"t":"excel示例​ 对象​ 参照：对象 代码​ /** * 根据参数只导出指定列 * <p> * 1. 创建excel对应的实体对象 参照{@link DemoData} * <p> * 2. 根据自己或者排除自己需要的列 * <p> * 3. 直接写即可 * * @since 2.1.1 */ @Test public void excludeOrIncludeWrite() { String fileName = TestFileUtil.getPath() + \"excludeOrIncludeWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里需要注意 在使用ExcelProperty注解的使用，如果想不空列则需要加入order字段，而不是index,order会忽略空列，然后继续往后，而index，不会忽略空列，在第几列就是第几列。 // 根据用户传入字段 假设我们要忽略 date Set<String> excludeColumnFiledNames = new HashSet<String>(); excludeColumnFiledNames.add(\"date\"); // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, DemoData.class).excludeColumnFiledNames(excludeColumnFiledNames).sheet(\"模板\") .doWrite(data()); fileName = TestFileUtil.getPath() + \"excludeOrIncludeWrite\" + System.currentTimeMillis() + \".xlsx\"; // 根据用户传入字段 假设我们只要导出 date Set<String> includeColumnFiledNames = new HashSet<String>(); includeColumnFiledNames.add(\"date\"); // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, DemoData.class).includeColumnFiledNames(includeColumnFiledNames).sheet(\"模板\") .doWrite(data()); }","s":"根据参数只导出指定列","u":"/docs/2.x/quickstart/write","h":"#根据参数只导出指定列","p":69},{"i":78,"t":"excel示例​ 对象​ @Getter@Setter@EqualsAndHashCodepublic class IndexData { @ExcelProperty(value = \"字符串标题\", index = 0) private String string; @ExcelProperty(value = \"日期标题\", index = 1) private Date date; /** * 这里设置3 会导致第二列空的 */ @ExcelProperty(value = \"数字标题\", index = 3) private Double doubleData;} 代码​ /** * 指定写入的列 * <p>1. 创建excel对应的实体对象 参照{@link IndexData} * <p>2. 使用{@link ExcelProperty}注解指定写入的列 * <p>3. 直接写即可 */ @Test public void indexWrite() { String fileName = TestFileUtil.getPath() + \"indexWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, IndexData.class).sheet(\"模板\").doWrite(data()); }","s":"指定写入的列","u":"/docs/2.x/quickstart/write","h":"#指定写入的列","p":69},{"i":80,"t":"excel示例​ 对象​ @Getter@Setter@EqualsAndHashCodepublic class ComplexHeadData { @ExcelProperty({\"主标题\", \"字符串标题\"}) private String string; @ExcelProperty({\"主标题\", \"日期标题\"}) private Date date; @ExcelProperty({\"主标题\", \"数字标题\"}) private Double doubleData;} 代码​ /** * 复杂头写入 * <p>1. 创建excel对应的实体对象 参照{@link ComplexHeadData} * <p>2. 使用{@link ExcelProperty}注解指定复杂的头 * <p>3. 直接写即可 */ @Test public void complexHeadWrite() { String fileName = TestFileUtil.getPath() + \"complexHeadWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, ComplexHeadData.class).sheet(\"模板\").doWrite(data()); }","s":"复杂头写入","u":"/docs/2.x/quickstart/write","h":"#复杂头写入","p":69},{"i":82,"t":"excel示例​ 对象​ 参照：对象 代码​ /** * 重复多次写入 * <p> * 1. 创建excel对应的实体对象 参照{@link ComplexHeadData} * <p> * 2. 使用{@link ExcelProperty}注解指定复杂的头 * <p> * 3. 直接调用二次写入即可 */ @Test public void repeatedWrite() { // 方法1 如果写到同一个sheet String fileName = TestFileUtil.getPath() + \"repeatedWrite\" + System.currentTimeMillis() + \".xlsx\"; ExcelWriter excelWriter = null; try { // 这里 需要指定写用哪个class去写 excelWriter = EasyExcel.write(fileName, DemoData.class).build(); // 这里注意 如果同一个sheet只要创建一次 WriteSheet writeSheet = EasyExcel.writerSheet(\"模板\").build(); // 去调用写入,这里我调用了五次，实际使用时根据数据库分页的总的页数来 for (int i = 0; i < 5; i++) { // 分页去数据库查询数据 这里可以去数据库查询每一页的数据 List<DemoData> data = data(); excelWriter.write(data, writeSheet); } } finally { // 千万别忘记finish 会帮忙关闭流 if (excelWriter != null) { excelWriter.finish(); } } // 方法2 如果写到不同的sheet 同一个对象 fileName = TestFileUtil.getPath() + \"repeatedWrite\" + System.currentTimeMillis() + \".xlsx\"; try { // 这里 指定文件 excelWriter = EasyExcel.write(fileName, DemoData.class).build(); // 去调用写入,这里我调用了五次，实际使用时根据数据库分页的总的页数来。这里最终会写到5个sheet里面 for (int i = 0; i < 5; i++) { // 每次都要创建writeSheet 这里注意必须指定sheetNo 而且sheetName必须不一样 WriteSheet writeSheet = EasyExcel.writerSheet(i, \"模板\" + i).build(); // 分页去数据库查询数据 这里可以去数据库查询每一页的数据 List<DemoData> data = data(); excelWriter.write(data, writeSheet); } } finally { // 千万别忘记finish 会帮忙关闭流 if (excelWriter != null) { excelWriter.finish(); } } // 方法3 如果写到不同的sheet 不同的对象 fileName = TestFileUtil.getPath() + \"repeatedWrite\" + System.currentTimeMillis() + \".xlsx\"; try { // 这里 指定文件 excelWriter = EasyExcel.write(fileName).build(); // 去调用写入,这里我调用了五次，实际使用时根据数据库分页的总的页数来。这里最终会写到5个sheet里面 for (int i = 0; i < 5; i++) { // 每次都要创建writeSheet 这里注意必须指定sheetNo 而且sheetName必须不一样。这里注意DemoData.class 可以每次都变，我这里为了方便 所以用的同一个class 实际上可以一直变 WriteSheet writeSheet = EasyExcel.writerSheet(i, \"模板\" + i).head(DemoData.class).build(); // 分页去数据库查询数据 这里可以去数据库查询每一页的数据 List<DemoData> data = data(); excelWriter.write(data, writeSheet); } } finally { // 千万别忘记finish 会帮忙关闭流 if (excelWriter != null) { excelWriter.finish(); } } }","s":"重复多次写入(写到单个或者多个Sheet)","u":"/docs/2.x/quickstart/write","h":"#重复多次写入写到单个或者多个sheet","p":69},{"i":84,"t":"excel示例​ 对象​ @Getter@Setter@EqualsAndHashCodepublic class ConverterData { /** * 我想所有的 字符串起前面加上\"自定义：\"三个字 */ @ExcelProperty(value = \"字符串标题\", converter = CustomStringStringConverter.class) private String string; /** * 我想写到excel 用年月日的格式 */ @DateTimeFormat(\"yyyy年MM月dd日HH时mm分ss秒\") @ExcelProperty(\"日期标题\") private Date date; /** * 我想写到excel 用百分比表示 */ @NumberFormat(\"#.##%\") @ExcelProperty(value = \"数字标题\") private Double doubleData;} 代码​ /** * 日期、数字或者自定义格式转换 * <p>1. 创建excel对应的实体对象 参照{@link ConverterData} * <p>2. 使用{@link ExcelProperty}配合使用注解{@link DateTimeFormat}、{@link NumberFormat}或者自定义注解 * <p>3. 直接写即可 */ @Test public void converterWrite() { String fileName = TestFileUtil.getPath() + \"converterWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, ConverterData.class).sheet(\"模板\").doWrite(data()); }","s":"日期、数字或者自定义格式转换","u":"/docs/2.x/quickstart/write","h":"#日期数字或者自定义格式转换","p":69},{"i":86,"t":"excel示例​ 对象​ @Getter@Setter@EqualsAndHashCode@ContentRowHeight(100)@ColumnWidth(100 / 8)public class ImageDemoData { private File file; private InputStream inputStream; /** * 如果string类型 必须指定转换器，string默认转换成string */ @ExcelProperty(converter = StringImageConverter.class) private String string; private byte[] byteArray; /** * 根据url导出 * * @since 2.1.1 */ private URL url; /** * 根据文件导出 并设置导出的位置。 * * @since 3.0.0-beta1 */ private WriteCellData<Void> writeCellDataFile;} 代码​ /** * 图片导出 * <p> * 1. 创建excel对应的实体对象 参照{@link ImageDemoData} * <p> * 2. 直接写即可 */ @Test public void imageWrite() throws Exception { String fileName = TestFileUtil.getPath() + \"imageWrite\" + System.currentTimeMillis() + \".xlsx\"; String imagePath = TestFileUtil.getPath() + \"converter\" + File.separator + \"img.jpg\"; try (InputStream inputStream = FileUtils.openInputStream(new File(imagePath))) { List<ImageDemoData> list = ListUtils.newArrayList(); ImageDemoData imageDemoData = new ImageDemoData(); list.add(imageDemoData); // 放入五种类型的图片 实际使用只要选一种即可 imageDemoData.setByteArray(FileUtils.readFileToByteArray(new File(imagePath))); imageDemoData.setFile(new File(imagePath)); imageDemoData.setString(imagePath); imageDemoData.setInputStream(inputStream); imageDemoData.setUrl(new URL( \"https://raw.githubusercontent.com/alibaba/easyexcel/master/src/test/resources/converter/img.jpg\")); // 这里演示 // 需要额外放入文字 // 而且需要放入2个图片 // 第一个图片靠左 // 第二个靠右 而且要额外的占用他后面的单元格 WriteCellData<Void> writeCellData = new WriteCellData<>(); imageDemoData.setWriteCellDataFile(writeCellData); // 这里可以设置为 EMPTY 则代表不需要其他数据了 writeCellData.setType(CellDataTypeEnum.STRING); writeCellData.setStringValue(\"额外的放一些文字\"); // 可以放入多个图片 List<ImageData> imageDataList = new ArrayList<>(); ImageData imageData = new ImageData(); imageDataList.add(imageData); writeCellData.setImageDataList(imageDataList); // 放入2进制图片 imageData.setImage(FileUtils.readFileToByteArray(new File(imagePath))); // 图片类型 imageData.setImageType(ImageType.PICTURE_TYPE_PNG); // 上 右 下 左 需要留空 // 这个类似于 css 的 margin // 这里实测 不能设置太大 超过单元格原始大小后 打开会提示修复。暂时未找到很好的解法。 imageData.setTop(5); imageData.setRight(40); imageData.setBottom(5); imageData.setLeft(5); // 放入第二个图片 imageData = new ImageData(); imageDataList.add(imageData); writeCellData.setImageDataList(imageDataList); imageData.setImage(FileUtils.readFileToByteArray(new File(imagePath))); imageData.setImageType(ImageType.PICTURE_TYPE_PNG); imageData.setTop(5); imageData.setRight(5); imageData.setBottom(5); imageData.setLeft(50); // 设置图片的位置 假设 现在目标 是 覆盖 当前单元格 和当前单元格右边的单元格 // 起点相对于当前单元格为0 当然可以不写 imageData.setRelativeFirstRowIndex(0); imageData.setRelativeFirstColumnIndex(0); imageData.setRelativeLastRowIndex(0); // 前面3个可以不写 下面这个需要写 也就是 结尾 需要相对当前单元格 往右移动一格 // 也就是说 这个图片会覆盖当前单元格和 后面的那一格 imageData.setRelativeLastColumnIndex(1); // 写入数据 EasyExcel.write(fileName, ImageDemoData.class).sheet().doWrite(list); } }","s":"图片导出","u":"/docs/2.x/quickstart/write","h":"#图片导出","p":69},{"i":88,"t":"excel示例​ 对象​ @Getter@Setter@EqualsAndHashCodepublic class WriteCellDemoData { /** * 超链接 * * @since 3.0.0-beta1 */ private WriteCellData<String> hyperlink; /** * 备注 * * @since 3.0.0-beta1 */ private WriteCellData<String> commentData; /** * 公式 * * @since 3.0.0-beta1 */ private WriteCellData<String> formulaData; /** * 指定单元格的样式。当然样式 也可以用注解等方式。 * * @since 3.0.0-beta1 */ private WriteCellData<String> writeCellStyle; /** * 指定一个单元格有多个样式 * * @since 3.0.0-beta1 */ private WriteCellData<String> richText;} 代码​ /** * 超链接、备注、公式、指定单个单元格的样式、单个单元格多种样式 * <p> * 1. 创建excel对应的实体对象 参照{@link WriteCellDemoData} * <p> * 2. 直接写即可 * * @since 3.0.0-beta1 */ @Test public void writeCellDataWrite() { String fileName = TestFileUtil.getPath() + \"writeCellDataWrite\" + System.currentTimeMillis() + \".xlsx\"; WriteCellDemoData writeCellDemoData = new WriteCellDemoData(); // 设置超链接 WriteCellData<String> hyperlink = new WriteCellData<>(\"官方网站\"); writeCellDemoData.setHyperlink(hyperlink); HyperlinkData hyperlinkData = new HyperlinkData(); hyperlink.setHyperlinkData(hyperlinkData); hyperlinkData.setAddress(\"https://github.com/alibaba/easyexcel\"); hyperlinkData.setHyperlinkType(HyperlinkType.URL); // 设置备注 WriteCellData<String> comment = new WriteCellData<>(\"备注的单元格信息\"); writeCellDemoData.setCommentData(comment); CommentData commentData = new CommentData(); comment.setCommentData(commentData); commentData.setAuthor(\"Jiaju Zhuang\"); commentData.setRichTextStringData(new RichTextStringData(\"这是一个备注\")); // 备注的默认大小是按照单元格的大小 这里想调整到4个单元格那么大 所以向后 向下 各额外占用了一个单元格 commentData.setRelativeLastColumnIndex(1); commentData.setRelativeLastRowIndex(1); // 设置公式 WriteCellData<String> formula = new WriteCellData<>(); writeCellDemoData.setFormulaData(formula); FormulaData formulaData = new FormulaData(); formula.setFormulaData(formulaData); // 将 123456789 中的第一个数字替换成 2 // 这里只是例子 如果真的涉及到公式 能内存算好尽量内存算好 公式能不用尽量不用 formulaData.setFormulaValue(\"REPLACE(123456789,1,1,2)\"); // 设置单个单元格的样式 当然样式 很多的话 也可以用注解等方式。 WriteCellData<String> writeCellStyle = new WriteCellData<>(\"单元格样式\"); writeCellStyle.setType(CellDataTypeEnum.STRING); writeCellDemoData.setWriteCellStyle(writeCellStyle); WriteCellStyle writeCellStyleData = new WriteCellStyle(); writeCellStyle.setWriteCellStyle(writeCellStyleData); // 这里需要指定 FillPatternType 为FillPatternType.SOLID_FOREGROUND 不然无法显示背景颜色. writeCellStyleData.setFillPatternType(FillPatternType.SOLID_FOREGROUND); // 背景绿色 writeCellStyleData.setFillForegroundColor(IndexedColors.GREEN.getIndex()); // 设置单个单元格多种样式 WriteCellData<String> richTest = new WriteCellData<>(); richTest.setType(CellDataTypeEnum.RICH_TEXT_STRING); writeCellDemoData.setRichText(richTest); RichTextStringData richTextStringData = new RichTextStringData(); richTest.setRichTextStringDataValue(richTextStringData); richTextStringData.setTextString(\"红色绿色默认\"); // 前2个字红色 WriteFont writeFont = new WriteFont(); writeFont.setColor(IndexedColors.RED.getIndex()); richTextStringData.applyFont(0, 2, writeFont); // 接下来2个字绿色 writeFont = new WriteFont(); writeFont.setColor(IndexedColors.GREEN.getIndex()); richTextStringData.applyFont(2, 4, writeFont); List<WriteCellDemoData> data = new ArrayList<>(); data.add(writeCellDemoData); EasyExcel.write(fileName, WriteCellDemoData.class).inMemory(true).sheet(\"模板\").doWrite(data); }","s":"超链接、备注、公式、指定单个单元格的样式、单个单元格多种样式","u":"/docs/2.x/quickstart/write","h":"#超链接备注公式指定单个单元格的样式单个单元格多种样式","p":69},{"i":90,"t":"模板excel示例​ excel示例​ 对象​ 参照：对象 代码​ /** * 根据模板写入 * <p>1. 创建excel对应的实体对象 参照{@link IndexData} * <p>2. 使用{@link ExcelProperty}注解指定写入的列 * <p>3. 使用withTemplate 写取模板 * <p>4. 直接写即可 */ @Test public void templateWrite() { String templateFileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; String fileName = TestFileUtil.getPath() + \"templateWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, DemoData.class).withTemplate(templateFileName).sheet().doWrite(data()); }","s":"根据模板写入","u":"/docs/2.x/quickstart/write","h":"#根据模板写入","p":69},{"i":92,"t":"excel示例​ 对象​ @Getter@Setter@EqualsAndHashCode@ContentRowHeight(10)@HeadRowHeight(20)@ColumnWidth(25)public class WidthAndHeightData { @ExcelProperty(\"字符串标题\") private String string; @ExcelProperty(\"日期标题\") private Date date; /** * 宽度为50 */ @ColumnWidth(50) @ExcelProperty(\"数字标题\") private Double doubleData;} 代码​ /** * 列宽、行高 * <p>1. 创建excel对应的实体对象 参照{@link WidthAndHeightData} * <p>2. 使用注解{@link ColumnWidth}、{@link HeadRowHeight}、{@link ContentRowHeight}指定宽度或高度 * <p>3. 直接写即可 */ @Test public void widthAndHeightWrite() { String fileName = TestFileUtil.getPath() + \"widthAndHeightWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, WidthAndHeightData.class).sheet(\"模板\").doWrite(data()); }","s":"列宽、行高","u":"/docs/2.x/quickstart/write","h":"#列宽行高","p":69},{"i":94,"t":"since​ 2.2.0-beta1 excel示例​ 对象​ @Getter@Setter@EqualsAndHashCode// 头背景设置成红色 IndexedColors.RED.getIndex()@HeadStyle(fillPatternType = FillPatternTypeEnum.SOLID_FOREGROUND, fillForegroundColor = 10)// 头字体设置成20@HeadFontStyle(fontHeightInPoints = 20)// 内容的背景设置成绿色 IndexedColors.GREEN.getIndex()@ContentStyle(fillPatternType = FillPatternTypeEnum.SOLID_FOREGROUND, fillForegroundColor = 17)// 内容字体设置成20@ContentFontStyle(fontHeightInPoints = 20)public class DemoStyleData { // 字符串的头背景设置成粉红 IndexedColors.PINK.getIndex() @HeadStyle(fillPatternType = FillPatternTypeEnum.SOLID_FOREGROUND, fillForegroundColor = 14) // 字符串的头字体设置成20 @HeadFontStyle(fontHeightInPoints = 30) // 字符串的内容的背景设置成天蓝 IndexedColors.SKY_BLUE.getIndex() @ContentStyle(fillPatternType = FillPatternTypeEnum.SOLID_FOREGROUND, fillForegroundColor = 40) // 字符串的内容字体设置成20 @ContentFontStyle(fontHeightInPoints = 30) @ExcelProperty(\"字符串标题\") private String string; @ExcelProperty(\"日期标题\") private Date date; @ExcelProperty(\"数字标题\") private Double doubleData;}/** * 样式的数据类 * * @author Jiaju Zhuang **/@Data// 头背景设置成红色 IndexedColors.RED.getIndex()@HeadStyle(fillPatternType = FillPatternType.SOLID_FOREGROUND, fillForegroundColor = 10)// 头字体设置成20@HeadFontStyle(fontHeightInPoints = 20)// 内容的背景设置成绿色 IndexedColors.GREEN.getIndex()@ContentStyle(fillPatternType = FillPatternType.SOLID_FOREGROUND, fillForegroundColor = 17)// 内容字体设置成20@ContentFontStyle(fontHeightInPoints = 20)public class DemoStyleData { // 字符串的头背景设置成粉红 IndexedColors.PINK.getIndex() @HeadStyle(fillPatternType = FillPatternType.SOLID_FOREGROUND, fillForegroundColor = 14) // 字符串的头字体设置成20 @HeadFontStyle(fontHeightInPoints = 30) // 字符串的内容的背景设置成天蓝 IndexedColors.SKY_BLUE.getIndex() @ContentStyle(fillPatternType = FillPatternType.SOLID_FOREGROUND, fillForegroundColor = 40) // 字符串的内容字体设置成20 @ContentFontStyle(fontHeightInPoints = 30) @ExcelProperty(\"字符串标题\") private String string; @ExcelProperty(\"日期标题\") private Date date; @ExcelProperty(\"数字标题\") private Double doubleData;} 代码​ /** * 注解形式自定义样式 * <p> * 1. 创建excel对应的实体对象 参照{@link DemoStyleData} * <p> * 3. 直接写即可 * * @since 2.2.0-beta1 */ @Test public void annotationStyleWrite() { String fileName = TestFileUtil.getPath() + \"annotationStyleWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, DemoStyleData.class).sheet(\"模板\").doWrite(data()); }","s":"注解形式自定义样式","u":"/docs/2.x/quickstart/write","h":"#注解形式自定义样式","p":69},{"i":96,"t":"excel示例​ 对象​ 参照：对象 代码​ /** * 拦截器形式自定义样式 * <p> * 1. 创建excel对应的实体对象 参照{@link DemoData} * <p> * 2. 创建一个style策略 并注册 * <p> * 3. 直接写即可 */ @Test public void handlerStyleWrite() { // 方法1 使用已有的策略 推荐 // HorizontalCellStyleStrategy 每一行的样式都一样 或者隔行一样 // AbstractVerticalCellStyleStrategy 每一列的样式都一样 需要自己回调每一页 String fileName = TestFileUtil.getPath() + \"handlerStyleWrite\" + System.currentTimeMillis() + \".xlsx\"; // 头的策略 WriteCellStyle headWriteCellStyle = new WriteCellStyle(); // 背景设置为红色 headWriteCellStyle.setFillForegroundColor(IndexedColors.RED.getIndex()); WriteFont headWriteFont = new WriteFont(); headWriteFont.setFontHeightInPoints((short)20); headWriteCellStyle.setWriteFont(headWriteFont); // 内容的策略 WriteCellStyle contentWriteCellStyle = new WriteCellStyle(); // 这里需要指定 FillPatternType 为FillPatternType.SOLID_FOREGROUND 不然无法显示背景颜色.头默认了 FillPatternType所以可以不指定 contentWriteCellStyle.setFillPatternType(FillPatternType.SOLID_FOREGROUND); // 背景绿色 contentWriteCellStyle.setFillForegroundColor(IndexedColors.GREEN.getIndex()); WriteFont contentWriteFont = new WriteFont(); // 字体大小 contentWriteFont.setFontHeightInPoints((short)20); contentWriteCellStyle.setWriteFont(contentWriteFont); // 这个策略是 头是头的样式 内容是内容的样式 其他的策略可以自己实现 HorizontalCellStyleStrategy horizontalCellStyleStrategy = new HorizontalCellStyleStrategy(headWriteCellStyle, contentWriteCellStyle); // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, DemoData.class) .registerWriteHandler(horizontalCellStyleStrategy) .sheet(\"模板\") .doWrite(data()); // 方法2: 使用easyexcel的方式完全自己写 不太推荐 尽量使用已有策略 // @since 3.0.0-beta2 fileName = TestFileUtil.getPath() + \"handlerStyleWrite\" + System.currentTimeMillis() + \".xlsx\"; EasyExcel.write(fileName, DemoData.class) .registerWriteHandler(new CellWriteHandler() { @Override public void afterCellDispose(CellWriteHandlerContext context) { // 当前事件会在 数据设置到poi的cell里面才会回调 // 判断不是头的情况 如果是fill 的情况 这里会==null 所以用not true if (BooleanUtils.isNotTrue(context.getHead())) { // 第一个单元格 // 只要不是头 一定会有数据 当然fill的情况 可能要context.getCellDataList() ,这个需要看模板，因为一个单元格会有多个 WriteCellData WriteCellData<?> cellData = context.getFirstCellData(); // 这里需要去cellData 获取样式 // 很重要的一个原因是 WriteCellStyle 和 dataFormatData绑定的 简单的说 比如你加了 DateTimeFormat // ，已经将writeCellStyle里面的dataFormatData 改了 如果你自己new了一个WriteCellStyle，可能注解的样式就失效了 // 然后 getOrCreateStyle 用于返回一个样式，如果为空，则创建一个后返回 WriteCellStyle writeCellStyle = cellData.getOrCreateStyle(); writeCellStyle.setFillForegroundColor(IndexedColors.RED.getIndex()); // 这里需要指定 FillPatternType 为FillPatternType.SOLID_FOREGROUND writeCellStyle.setFillPatternType(FillPatternType.SOLID_FOREGROUND); // 这样样式就设置好了 后面有个FillStyleCellWriteHandler 默认会将 WriteCellStyle 设置到 cell里面去 所以可以不用管了 } } }).sheet(\"模板\") .doWrite(data()); // 方法3: 使用poi的样式完全自己写 不推荐 // @since 3.0.0-beta2 // 坑1：style里面有dataformat 用来格式化数据的 所以自己设置可能导致格式化注解不生效 // 坑2：不要一直去创建style 记得缓存起来 最多创建6W个就挂了 fileName = TestFileUtil.getPath() + \"handlerStyleWrite\" + System.currentTimeMillis() + \".xlsx\"; EasyExcel.write(fileName, DemoData.class) .registerWriteHandler(new CellWriteHandler() { @Override public void afterCellDispose(CellWriteHandlerContext context) { // 当前事件会在 数据设置到poi的cell里面才会回调 // 判断不是头的情况 如果是fill 的情况 这里会==null 所以用not true if (BooleanUtils.isNotTrue(context.getHead())) { Cell cell = context.getCell(); // 拿到poi的workbook Workbook workbook = context.getWriteWorkbookHolder().getWorkbook(); // 这里千万记住 想办法能复用的地方把他缓存起来 一个表格最多创建6W个样式 // 不同单元格尽量传同一个 cellStyle CellStyle cellStyle = workbook.createCellStyle(); cellStyle.setFillForegroundColor(IndexedColors.RED.getIndex()); // 这里需要指定 FillPatternType 为FillPatternType.SOLID_FOREGROUND cellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND); cell.setCellStyle(cellStyle); // 由于这里没有指定dataformat 最后展示的数据 格式可能会不太正确 // 这里要把 WriteCellData的样式清空， 不然后面还有一个拦截器 FillStyleCellWriteHandler 默认会将 WriteCellStyle 设置到 // cell里面去 会导致自己设置的不一样 context.getFirstCellData().setWriteCellStyle(null); } } }).sheet(\"模板\") .doWrite(data()); }","s":"自定义样式","u":"/docs/2.x/quickstart/write","h":"#自定义样式","p":69},{"i":98,"t":"since​ 2.2.0-beta1 excel示例​ 对象​ 方法1 @Getter@Setter@EqualsAndHashCode// 将第6-7行的2-3列合并成一个单元格// @OnceAbsoluteMerge(firstRowIndex = 5, lastRowIndex = 6, firstColumnIndex = 1, lastColumnIndex = 2)public class DemoMergeData { // 这一列 每隔2行 合并单元格 @ContentLoopMerge(eachRow = 2) @ExcelProperty(\"字符串标题\") private String string; @ExcelProperty(\"日期标题\") private Date date; @ExcelProperty(\"数字标题\") private Double doubleData;} 方法2参照：对象 代码​ /** * 合并单元格 * <p> * 1. 创建excel对应的实体对象 参照{@link DemoData} {@link DemoMergeData} * <p> * 2. 创建一个merge策略 并注册 * <p> * 3. 直接写即可 * * @since 2.2.0-beta1 */ @Test public void mergeWrite() { // 方法1 注解 String fileName = TestFileUtil.getPath() + \"mergeWrite\" + System.currentTimeMillis() + \".xlsx\"; // 在DemoStyleData里面加上ContentLoopMerge注解 // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, DemoMergeData.class).sheet(\"模板\").doWrite(data()); // 方法2 自定义合并单元格策略 fileName = TestFileUtil.getPath() + \"mergeWrite\" + System.currentTimeMillis() + \".xlsx\"; // 每隔2行会合并 把eachColumn 设置成 3 也就是我们数据的长度，所以就第一列会合并。当然其他合并策略也可以自己写 LoopMergeStrategy loopMergeStrategy = new LoopMergeStrategy(2, 0); // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, DemoData.class).registerWriteHandler(loopMergeStrategy).sheet(\"模板\").doWrite(data()); }","s":"合并单元格","u":"/docs/2.x/quickstart/write","h":"#合并单元格","p":69},{"i":100,"t":"excel示例​ 对象​ 参照：对象 代码​ /** * 使用table去写入 * <p>1. 创建excel对应的实体对象 参照{@link DemoData} * <p>2. 然后写入table即可 */ @Test public void tableWrite() { String fileName = TestFileUtil.getPath() + \"tableWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里直接写多个table的案例了，如果只有一个 也可以直一行代码搞定，参照其他案例 // 这里 需要指定写用哪个class去写 ExcelWriter excelWriter = null; try { excelWriter = EasyExcel.write(fileName, DemoData.class).build(); // 把sheet设置为不需要头 不然会输出sheet的头 这样看起来第一个table 就有2个头了 WriteSheet writeSheet = EasyExcel.writerSheet(\"模板\").needHead(Boolean.FALSE).build(); // 这里必须指定需要头，table 会继承sheet的配置，sheet配置了不需要，table 默认也是不需要 WriteTable writeTable0 = EasyExcel.writerTable(0).needHead(Boolean.TRUE).build(); WriteTable writeTable1 = EasyExcel.writerTable(1).needHead(Boolean.TRUE).build(); // 第一次写入会创建头 excelWriter.write(data(), writeSheet, writeTable0); // 第二次写如也会创建头，然后在第一次的后面写入数据 excelWriter.write(data(), writeSheet, writeTable1); } finally { // 千万别忘记finish 会帮忙关闭流 if (excelWriter != null) { excelWriter.finish(); } } }","s":"使用table去写入","u":"/docs/2.x/quickstart/write","h":"#使用table去写入","p":69},{"i":102,"t":"excel示例​ 对象​ 参照：对象 代码​ /** * 动态头，实时生成头写入 * <p> * 思路是这样子的，先创建List<String>头格式的sheet仅仅写入头,然后通过table 不写入头的方式 去写入数据 * * <p> * 1. 创建excel对应的实体对象 参照{@link DemoData} * <p> * 2. 然后写入table即可 */ @Test public void dynamicHeadWrite() { String fileName = TestFileUtil.getPath() + \"dynamicHeadWrite\" + System.currentTimeMillis() + \".xlsx\"; EasyExcel.write(fileName) // 这里放入动态头 .head(head()).sheet(\"模板\") // 当然这里数据也可以用 List<List<String>> 去传入 .doWrite(data()); } private List<List<String>> head() { List<List<String>> list = new ArrayList<List<String>>(); List<String> head0 = new ArrayList<String>(); head0.add(\"字符串\" + System.currentTimeMillis()); List<String> head1 = new ArrayList<String>(); head1.add(\"数字\" + System.currentTimeMillis()); List<String> head2 = new ArrayList<String>(); head2.add(\"日期\" + System.currentTimeMillis()); list.add(head0); list.add(head1); list.add(head2); return list; }","s":"动态头，实时生成头写入","u":"/docs/2.x/quickstart/write","h":"#动态头实时生成头写入","p":69},{"i":104,"t":"excel示例​ 对象​ @Getter@Setter@EqualsAndHashCodepublic class LongestMatchColumnWidthData { @ExcelProperty(\"字符串标题\") private String string; @ExcelProperty(\"日期标题很长日期标题很长日期标题很长很长\") private Date date; @ExcelProperty(\"数字\") private Double doubleData;} 代码​ /** * 自动列宽(不太精确) * <p> * 这个目前不是很好用，比如有数字就会导致换行。而且长度也不是刚好和实际长度一致。 所以需要精确到刚好列宽的慎用。 当然也可以自己参照 * {@link LongestMatchColumnWidthStyleStrategy}重新实现. * <p> * poi 自带{@link SXSSFSheet#autoSizeColumn(int)} 对中文支持也不太好。目前没找到很好的算法。 有的话可以推荐下。 * * <p> * 1. 创建excel对应的实体对象 参照{@link LongestMatchColumnWidthData} * <p> * 2. 注册策略{@link LongestMatchColumnWidthStyleStrategy} * <p> * 3. 直接写即可 */ @Test public void longestMatchColumnWidthWrite() { String fileName = TestFileUtil.getPath() + \"longestMatchColumnWidthWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, LongestMatchColumnWidthData.class) .registerWriteHandler(new LongestMatchColumnWidthStyleStrategy()).sheet(\"模板\").doWrite(dataLong()); } private List<LongestMatchColumnWidthData> dataLong() { List<LongestMatchColumnWidthData> list = new ArrayList<LongestMatchColumnWidthData>(); for (int i = 0; i < 10; i++) { LongestMatchColumnWidthData data = new LongestMatchColumnWidthData(); data.setString(\"测试很长的字符串测试很长的字符串测试很长的字符串\" + i); data.setDate(new Date()); data.setDoubleData(1000000000000.0); list.add(data); } return list; }","s":"自动列宽(不太精确)","u":"/docs/2.x/quickstart/write","h":"#自动列宽不太精确","p":69},{"i":106,"t":"excel示例​ 对象​ 参照：对象 定义拦截器​ /** * 自定义拦截器。对第一行第一列的头超链接到:https://github.com/alibaba/easyexcel * * @author Jiaju Zhuang */@Slf4jpublic class CustomCellWriteHandler implements CellWriteHandler { @Override public void afterCellDispose(CellWriteHandlerContext context) { Cell cell = context.getCell(); // 这里可以对cell进行任何操作 log.info(\"第{}行，第{}列写入完成。\", cell.getRowIndex(), cell.getColumnIndex()); if (BooleanUtils.isTrue(context.getHead()) && cell.getColumnIndex() == 0) { CreationHelper createHelper = context.getWriteSheetHolder().getSheet().getWorkbook().getCreationHelper(); Hyperlink hyperlink = createHelper.createHyperlink(HyperlinkType.URL); hyperlink.setAddress(\"https://github.com/alibaba/easyexcel\"); cell.setHyperlink(hyperlink); } }} /** * 自定义拦截器.对第一列第一行和第二行的数据新增下拉框，显示 测试1 测试2 * * @author Jiaju Zhuang */@Slf4jpublic class CustomSheetWriteHandler implements SheetWriteHandler { @Override public void afterSheetCreate(SheetWriteHandlerContext context) { log.info(\"第{}个Sheet写入成功。\", context.getWriteSheetHolder().getSheetNo()); // 区间设置 第一列第一行和第二行的数据。由于第一行是头，所以第一、二行的数据实际上是第二三行 CellRangeAddressList cellRangeAddressList = new CellRangeAddressList(1, 2, 0, 0); DataValidationHelper helper = context.getWriteSheetHolder().getSheet().getDataValidationHelper(); DataValidationConstraint constraint = helper.createExplicitListConstraint(new String[] {\"测试1\", \"测试2\"}); DataValidation dataValidation = helper.createValidation(constraint, cellRangeAddressList); context.getWriteSheetHolder().getSheet().addValidationData(dataValidation); }} 代码​ /** * 下拉，超链接等自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个） * <p> * demo这里实现2点。1. 对第一行第一列的头超链接到:https://github.com/alibaba/easyexcel 2. 对第一列第一行和第二行的数据新增下拉框，显示 测试1 测试2 * <p> * 1. 创建excel对应的实体对象 参照{@link DemoData} * <p> * 2. 注册拦截器 {@link CustomCellWriteHandler} {@link CustomSheetWriteHandler} * <p> * 2. 直接写即可 */ @Test public void customHandlerWrite() { String fileName = TestFileUtil.getPath() + \"customHandlerWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, DemoData.class).registerWriteHandler(new CustomSheetWriteHandler()) .registerWriteHandler(new CustomCellWriteHandler()).sheet(\"模板\").doWrite(data()); }","s":"自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）","u":"/docs/2.x/quickstart/write","h":"#自定义拦截器上面几点都不符合但是要对单元格进行操作的参照这个","p":69},{"i":108,"t":"excel示例​ 对象​ 参照：对象 定义拦截器​ /** * 自定义拦截器.新增注释,第一行头加批注 * * @author Jiaju Zhuang */@Slf4jpublic class CommentWriteHandler implements RowWriteHandler { @Override public void afterRowDispose(RowWriteHandlerContext context) { if (BooleanUtils.isTrue(context.getHead())) { Sheet sheet = context.getWriteSheetHolder().getSheet(); Drawing<?> drawingPatriarch = sheet.createDrawingPatriarch(); // 在第一行 第二列创建一个批注 Comment comment = drawingPatriarch.createCellComment(new XSSFClientAnchor(0, 0, 0, 0, (short)1, 0, (short)2, 1)); // 输入批注信息 comment.setString(new XSSFRichTextString(\"创建批注!\")); // 将批注添加到单元格对象中 sheet.getRow(0).getCell(1).setCellComment(comment); } }} 代码​ /** * 插入批注 * <p> * 1. 创建excel对应的实体对象 参照{@link DemoData} * <p> * 2. 注册拦截器 {@link CommentWriteHandler} * <p> * 2. 直接写即可 */ @Test public void commentWrite() { String fileName = TestFileUtil.getPath() + \"commentWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 // 这里要注意inMemory 要设置为true，才能支持批注。目前没有好的办法解决 不在内存处理批注。这个需要自己选择。 EasyExcel.write(fileName, DemoData.class).inMemory(Boolean.TRUE).registerWriteHandler(new CommentWriteHandler()) .sheet(\"模板\").doWrite(data()); }","s":"插入批注","u":"/docs/2.x/quickstart/write","h":"#插入批注","p":69},{"i":110,"t":"excel示例​ 对象​ @Getter@Setter@EqualsAndHashCodepublic class ConverterData { /** * 我想所有的 字符串起前面加上\"自定义：\"三个字 */ @ExcelProperty(value = \"字符串标题\", converter = CustomStringStringConverter.class) private String string; /** * 我想写到excel 用年月日的格式 */ @DateTimeFormat(\"yyyy年MM月dd日HH时mm分ss秒\") @ExcelProperty(\"日期标题\") private Date date; /** * 我想写到excel 用百分比表示 */ @NumberFormat(\"#.##%\") @ExcelProperty(value = \"数字标题\") private Double doubleData;}@Datapublic class ConverterData { /** * 我想所有的 字符串起前面加上\"自定义：\"三个字 */ @ExcelProperty(value = \"字符串标题\", converter = CustomStringStringConverter.class) private String string; /** * 我想写到excel 用年月日的格式 */ @DateTimeFormat(\"yyyy年MM月dd日HH时mm分ss秒\") @ExcelProperty(\"日期标题\") private Date date; /** * 我想写到excel 用百分比表示 */ @NumberFormat(\"#.##%\") @ExcelProperty(value = \"数字标题\") private Double doubleData;} 代码​ /** * 可变标题处理(包括标题国际化等) * <p> * 简单的说用List<List<String>>的标题 但是还支持注解 * <p> * 1. 创建excel对应的实体对象 参照{@link ConverterData} * <p> * 2. 直接写即可 */ @Test public void variableTitleWrite() { // 写法1 String fileName = TestFileUtil.getPath() + \"variableTitleWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, ConverterData.class).head(variableTitleHead()).sheet(\"模板\").doWrite(data()); } private List<List<String>> variableTitleHead() { List<List<String>> list = ListUtils.newArrayList(); List<String> head0 = ListUtils.newArrayList(); head0.add(\"string\" + System.currentTimeMillis()); List<String> head1 = ListUtils.newArrayList(); head1.add(\"number\" + System.currentTimeMillis()); List<String> head2 = ListUtils.newArrayList(); head2.add(\"date\" + System.currentTimeMillis()); list.add(head0); list.add(head1); list.add(head2); return list; } private List<List<String>> variableTitleHead() { List<List<String>> list = new ArrayList<>(); List<String> head0 = new ArrayList<>(); head0.add(\"string\" + System.currentTimeMillis()); List<String> head1 = new ArrayList<>(); head1.add(\"number\" + System.currentTimeMillis()); List<String> head2 = new ArrayList<>(); head2.add(\"date\" + System.currentTimeMillis()); list.add(head0); list.add(head1); list.add(head2); return list; }","s":"可变标题处理(包括标题国际化等)","u":"/docs/2.x/quickstart/write","h":"#可变标题处理包括标题国际化等","p":69},{"i":113,"t":"excel示例​ 代码​ /** * 不创建对象的写 */ @Test public void noModelWrite() { // 写法1 String fileName = TestFileUtil.getPath() + \"noModelWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName).head(head()).sheet(\"模板\").doWrite(dataList()); } private List<List<String>> head() { List<List<String>> list = ListUtils.newArrayList(); List<String> head0 = ListUtils.newArrayList(); head0.add(\"字符串\" + System.currentTimeMillis()); List<String> head1 = ListUtils.newArrayList(); head1.add(\"数字\" + System.currentTimeMillis()); List<String> head2 = ListUtils.newArrayList(); head2.add(\"日期\" + System.currentTimeMillis()); list.add(head0); list.add(head1); list.add(head2); return list; } private List<List<Object>> dataList() { List<List<Object>> list = ListUtils.newArrayList(); for (int i = 0; i < 10; i++) { List<Object> data = ListUtils.newArrayList(); data.add(\"字符串\" + i); data.add(new Date()); data.add(0.56); list.add(data); } return list; }","s":"不创建对象的写","u":"/docs/2.x/quickstart/write","h":"#不创建对象的写","p":69},{"i":115,"t":"示例代码​ DEMO代码地址：https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/web/WebTest.java 对象​ 参照：对象 就是名称变了下 代码​ /** * 文件下载（失败了会返回一个有部分数据的Excel） * <p> * 1. 创建excel对应的实体对象 参照{@link DownloadData} * <p> * 2. 设置返回的 参数 * <p> * 3. 直接写，这里注意，finish的时候会自动关闭OutputStream,当然你外面再关闭流问题不大 */ @GetMapping(\"download\") public void download(HttpServletResponse response) throws IOException { // 这里注意 有同学反应使用swagger 会导致各种问题，请直接用浏览器或者用postman response.setContentType(\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"); response.setCharacterEncoding(\"utf-8\"); // 这里URLEncoder.encode可以防止中文乱码 当然和easyexcel没有关系 String fileName = URLEncoder.encode(\"测试\", \"UTF-8\").replaceAll(\"\\\\+\", \"%20\"); response.setHeader(\"Content-disposition\", \"attachment;filename*=utf-8''\" + fileName + \".xlsx\"); EasyExcel.write(response.getOutputStream(), DownloadData.class).sheet(\"模板\").doWrite(data()); }","s":"web中的写","u":"/docs/2.x/quickstart/write","h":"#web中的写","p":69},{"i":117,"t":"since​ 2.1.1 对象​ 参照：对象 就是名称变了下 代码​ /** * 文件下载并且失败的时候返回json（默认失败了会返回一个有部分数据的Excel） * * @since 2.1.1 */ @GetMapping(\"downloadFailedUsingJson\") public void downloadFailedUsingJson(HttpServletResponse response) throws IOException { // 这里注意 有同学反应使用swagger 会导致各种问题，请直接用浏览器或者用postman try { response.setContentType(\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"); response.setCharacterEncoding(\"utf-8\"); // 这里URLEncoder.encode可以防止中文乱码 当然和easyexcel没有关系 String fileName = URLEncoder.encode(\"测试\", \"UTF-8\").replaceAll(\"\\\\+\", \"%20\"); response.setHeader(\"Content-disposition\", \"attachment;filename*=utf-8''\" + fileName + \".xlsx\"); // 这里需要设置不关闭流 EasyExcel.write(response.getOutputStream(), DownloadData.class).autoCloseStream(Boolean.FALSE).sheet(\"模板\") .doWrite(data()); } catch (Exception e) { // 重置response response.reset(); response.setContentType(\"application/json\"); response.setCharacterEncoding(\"utf-8\"); Map<String, String> map = MapUtils.newHashMap(); map.put(\"status\", \"failure\"); map.put(\"message\", \"下载文件失败\" + e.getMessage()); response.getWriter().println(JSON.toJSONString(map)); } }","s":"web中的写并且失败的时候返回json","u":"/docs/2.x/quickstart/write","h":"#web中的写并且失败的时候返回json","p":69},{"i":119,"t":"🏠 关于EasyExcel","s":"关于EasyExcel","u":"/docs/3.x/","h":"","p":118},{"i":121,"t":"QQ1群(已满): 662022184 QQ2群(已满): 1097936804 QQ3群(已满): 453928496 QQ4群: 496594404 钉钉1群（已满）: 21960511 钉钉2群（已满）: 32796397 钉钉3群（已满）: 33797247 钉钉4群（已满）: 33491624 钉钉5群（已满）: 32134498 钉钉6群: 34707941 官方网站: https://yuque.com/easyexcel 因为公司不方便用QQ，所以建议加钉钉群​","s":"联系方式","u":"/docs/3.x/","h":"#联系方式","p":118},{"i":123,"t":"当然还有急速模式能更快，但是内存占用会在100M多一点","s":"64M内存20秒读取75M(46W行25列)的Excel（3.0.2+版本）","u":"/docs/3.x/","h":"#64m内存20秒读取75m46w行25列的excel302版本","p":118},{"i":125,"t":"2+ 版本支持 Java7和Java6 3+ 版本至少 Java8","s":"版本支持","u":"/docs/3.x/","h":"#版本支持","p":118},{"i":127,"t":"不建议跨大版本升级 尤其跨2个大版本 2+ 升级到 3+ 一些不兼容的地方 使用了自定义拦截器去修改样式的会出问题（不会编译报错） 读的时候invoke 里面抛出异常，不会再额外封装一层ExcelAnalysisException（不会编译报错） 样式等注解涉及到 boolean or 一些枚举 值的 有变动，新增默认值（会编译报错，注解改就行） 大版本升级后建议相关内容重新测试下","s":"关于版本升级","u":"/docs/3.x/","h":"#关于版本升级","p":118},{"i":129,"t":"<dependency> <groupId>com.alibaba</groupId> <artifactId>easyexcel</artifactId> <version>3.0.5</version> </dependency>","s":"最新版本","u":"/docs/3.x/","h":"#最新版本","p":118},{"i":132,"t":"用一些在线格式化工具经常广告满天飞，自己搭了一个简单的常用工具会不断升级，欢迎使用。https://json6.cn/","s":"工具推荐","u":"/docs/3.x/","h":"#工具推荐","p":118},{"i":134,"t":"由于工作较忙,有意愿做开源的同学可以报名,主要负责群里回答&issue处理，当然也可以做一些PR. 由于开源没有任何物质回报，然后现在的维护同学也是课余时间维护的，所以想加入的同学需要持之以恒，而不是一时兴起. 要求如下： 有一定java编码能力 & 良好的编码习惯 了解easyexcel 读&写的原理 热爱开源项目 能长期坚持的去做 相对工作没那么忙","s":"easyexcel人员招募","u":"/docs/3.x/","h":"#easyexcel人员招募","p":118},{"i":136,"t":"这里仅仅一些最简单的例子，需要完整的上手请参照：文档 读Excel​ DEMO代码地址：https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/read/ReadTest.java /** * 最简单的读 * <p>1. 创建excel对应的实体对象 参照{@link DemoData} * <p>2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照{@link DemoDataListener} * <p>3. 直接读即可 */ @Test public void simpleRead() { String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 这里 需要指定读用哪个class去读，然后读取第一个sheet 文件流会自动关闭 EasyExcel.read(fileName, DemoData.class, new DemoDataListener()).sheet().doRead(); } 写Excel​ DEMO代码地址：https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/write/WriteTest.java /** * 最简单的写 * <p>1. 创建excel对应的实体对象 参照{@link com.alibaba.easyexcel.test.demo.write.DemoData} * <p>2. 直接写即可 */ @Test public void simpleWrite() { String fileName = TestFileUtil.getPath() + \"write\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去读，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 // 如果这里想使用03 则 传入excelType参数即可 EasyExcel.write(fileName, DemoData.class).sheet(\"模板\").doWrite(data()); } web上传、下载​ DEMO代码地址：https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/web/WebTest.java /** * 文件下载（失败了会返回一个有部分数据的Excel） * <p>1. 创建excel对应的实体对象 参照{@link DownloadData} * <p>2. 设置返回的 参数 * <p>3. 直接写，这里注意，finish的时候会自动关闭OutputStream,当然你外面再关闭流问题不大 */ @GetMapping(\"download\") public void download(HttpServletResponse response) throws IOException { // 这里注意 有同学反应使用swagger 会导致各种问题，请直接用浏览器或者用postman response.setContentType(\"application/vnd.ms-excel\"); response.setCharacterEncoding(\"utf-8\"); // 这里URLEncoder.encode可以防止中文乱码 当然和easyexcel没有关系 String fileName = URLEncoder.encode(\"测试\", \"UTF-8\"); response.setHeader(\"Content-disposition\", \"attachment;filename=\" + fileName + \".xlsx\"); EasyExcel.write(response.getOutputStream(), DownloadData.class).sheet(\"模板\").doWrite(data()); } /** * 文件上传 * <p>1. 创建excel对应的实体对象 参照{@link UploadData} * <p>2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照{@link UploadDataListener} * <p>3. 直接读即可 */ @PostMapping(\"upload\") @ResponseBody public String upload(MultipartFile file) throws IOException { EasyExcel.read(file.getInputStream(), UploadData.class, new UploadDataListener(uploadDAO)).sheet().doRead(); return \"success\"; }","s":"快速开始","u":"/docs/3.x/","h":"#快速开始","p":118},{"i":138,"t":"🏠 快速开始 填充Excel","s":"填充Excel","u":"/docs/3.x/quickstart/fil","h":"","p":137},{"i":140,"t":"DEMO代码地址：https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/fill/FillTest.java","s":"示例代码","u":"/docs/3.x/quickstart/fil","h":"#示例代码","p":137},{"i":142,"t":"since​ 2.1.1 模板​ 最终效果​ 对象​ @Getter@Setter@EqualsAndHashCodepublic class FillData { private String name; private double number; private Date date;} 代码​ /** * 最简单的填充 * * @since 2.1.1 */ @Test public void simpleFill() { // 模板注意 用{} 来表示你要用的变量 如果本来就有\"{\",\"}\" 特殊字符 用\"\\{\",\"\\}\"代替 String templateFileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"fill\" + File.separator + \"simple.xlsx\"; // 方案1 根据对象填充 String fileName = TestFileUtil.getPath() + \"simpleFill\" + System.currentTimeMillis() + \".xlsx\"; // 这里 会填充到第一个sheet， 然后文件流会自动关闭 FillData fillData = new FillData(); fillData.setName(\"张三\"); fillData.setNumber(5.2); EasyExcel.write(fileName).withTemplate(templateFileName).sheet().doFill(fillData); // 方案2 根据Map填充 fileName = TestFileUtil.getPath() + \"simpleFill\" + System.currentTimeMillis() + \".xlsx\"; // 这里 会填充到第一个sheet， 然后文件流会自动关闭 Map<String, Object> map = new HashMap<String, Object>(); map.put(\"name\", \"张三\"); map.put(\"number\", 5.2); EasyExcel.write(fileName).withTemplate(templateFileName).sheet().doFill(map); }","s":"最简单的填充","u":"/docs/3.x/quickstart/fil","h":"#最简单的填充","p":137},{"i":144,"t":"since​ 2.1.1 模板​ 最终效果​ 对象​ 参照：对象 代码​ /** * 填充列表 * * @since 2.1.1 */ @Test public void listFill() { // 模板注意 用{} 来表示你要用的变量 如果本来就有\"{\",\"}\" 特殊字符 用\"\\{\",\"\\}\"代替 // 填充list 的时候还要注意 模板中{.} 多了个点 表示list String templateFileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"fill\" + File.separator + \"list.xlsx\"; // 方案1 一下子全部放到内存里面 并填充 String fileName = TestFileUtil.getPath() + \"listFill\" + System.currentTimeMillis() + \".xlsx\"; // 这里 会填充到第一个sheet， 然后文件流会自动关闭 EasyExcel.write(fileName).withTemplate(templateFileName).sheet().doFill(data()); // 方案2 分多次 填充 会使用文件缓存（省内存） jdk8 // since: 3.0.0-beta1 fileName = TestFileUtil.getPath() + \"listFill\" + System.currentTimeMillis() + \".xlsx\"; EasyExcel.write(fileName) .withTemplate(templateFileName) .sheet() .doFill(() -> { // 分页查询数据 return data(); }); // 方案3 分多次 填充 会使用文件缓存（省内存） fileName = TestFileUtil.getPath() + \"listFill\" + System.currentTimeMillis() + \".xlsx\"; ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(templateFileName).build(); WriteSheet writeSheet = EasyExcel.writerSheet().build(); excelWriter.fill(data(), writeSheet); excelWriter.fill(data(), writeSheet); // 千万别忘记关闭流 excelWriter.finish(); }","s":"填充列表","u":"/docs/3.x/quickstart/fil","h":"#填充列表","p":137},{"i":146,"t":"since​ 2.1.1 模板​ 最终效果​ 对象​ 参照：对象 代码​ /** * 复杂的填充 * * @since 2.1.1 */ @Test public void complexFill() { // 模板注意 用{} 来表示你要用的变量 如果本来就有\"{\",\"}\" 特殊字符 用\"\\{\",\"\\}\"代替 // {} 代表普通变量 {.} 代表是list的变量 String templateFileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"fill\" + File.separator + \"complex.xlsx\"; String fileName = TestFileUtil.getPath() + \"complexFill\" + System.currentTimeMillis() + \".xlsx\"; ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(templateFileName).build(); WriteSheet writeSheet = EasyExcel.writerSheet().build(); // 这里注意 入参用了forceNewRow 代表在写入list的时候不管list下面有没有空行 都会创建一行，然后下面的数据往后移动。默认 是false，会直接使用下一行，如果没有则创建。 // forceNewRow 如果设置了true,有个缺点 就是他会把所有的数据都放到内存了，所以慎用 // 简单的说 如果你的模板有list,且list不是最后一行，下面还有数据需要填充 就必须设置 forceNewRow=true 但是这个就会把所有数据放到内存 会很耗内存 // 如果数据量大 list不是最后一行 参照下一个 FillConfig fillConfig = FillConfig.builder().forceNewRow(Boolean.TRUE).build(); excelWriter.fill(data(), fillConfig, writeSheet); excelWriter.fill(data(), fillConfig, writeSheet); Map<String, Object> map = new HashMap<String, Object>(); map.put(\"date\", \"2019年10月9日13:28:28\"); map.put(\"total\", 1000); excelWriter.fill(map, writeSheet); excelWriter.finish(); }","s":"复杂的填充","u":"/docs/3.x/quickstart/fil","h":"#复杂的填充","p":137},{"i":148,"t":"since​ 2.1.1 模板​ 最终效果​ 对象​ 参照：对象 代码​ /** * 数据量大的复杂填充 * <p> * 这里的解决方案是 确保模板list为最后一行，然后再拼接table.还有03版没救，只能刚正面加内存。 * * @since 2.1.1 */ @Test public void complexFillWithTable() { // 模板注意 用{} 来表示你要用的变量 如果本来就有\"{\",\"}\" 特殊字符 用\"\\{\",\"\\}\"代替 // {} 代表普通变量 {.} 代表是list的变量 // 这里模板 删除了list以后的数据，也就是统计的这一行 String templateFileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"fill\" + File.separator + \"complexFillWithTable.xlsx\"; String fileName = TestFileUtil.getPath() + \"complexFillWithTable\" + System.currentTimeMillis() + \".xlsx\"; ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(templateFileName).build(); WriteSheet writeSheet = EasyExcel.writerSheet().build(); // 直接写入数据 excelWriter.fill(data(), writeSheet); excelWriter.fill(data(), writeSheet); // 写入list之前的数据 Map<String, Object> map = new HashMap<String, Object>(); map.put(\"date\", \"2019年10月9日13:28:28\"); excelWriter.fill(map, writeSheet); // list 后面还有个统计 想办法手动写入 // 这里偷懒直接用list 也可以用对象 List<List<String>> totalListList = new ArrayList<List<String>>(); List<String> totalList = new ArrayList<String>(); totalListList.add(totalList); totalList.add(null); totalList.add(null); totalList.add(null); // 第四列 totalList.add(\"统计:1000\"); // 这里是write 别和fill 搞错了 excelWriter.write(totalListList, writeSheet); excelWriter.finish(); // 总体上写法比较复杂 但是也没有想到好的版本 异步的去写入excel 不支持行的删除和移动，也不支持备注这种的写入，所以也排除了可以 // 新建一个 然后一点点复制过来的方案，最后导致list需要新增行的时候，后面的列的数据没法后移，后续会继续想想解决方案 }","s":"数据量大的复杂填充","u":"/docs/3.x/quickstart/fil","h":"#数据量大的复杂填充","p":137},{"i":150,"t":"since​ 2.1.1 模板​ 最终效果​ 对象​ 参照：对象 代码​ /** * 横向的填充 * * @since 2.1.1 */ @Test public void horizontalFill() { // 模板注意 用{} 来表示你要用的变量 如果本来就有\"{\",\"}\" 特殊字符 用\"\\{\",\"\\}\"代替 // {} 代表普通变量 {.} 代表是list的变量 String templateFileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"fill\" + File.separator + \"horizontal.xlsx\"; String fileName = TestFileUtil.getPath() + \"horizontalFill\" + System.currentTimeMillis() + \".xlsx\"; ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(templateFileName).build(); WriteSheet writeSheet = EasyExcel.writerSheet().build(); FillConfig fillConfig = FillConfig.builder().direction(WriteDirectionEnum.HORIZONTAL).build(); excelWriter.fill(data(), fillConfig, writeSheet); excelWriter.fill(data(), fillConfig, writeSheet); Map<String, Object> map = new HashMap<String, Object>(); map.put(\"date\", \"2019年10月9日13:28:28\"); excelWriter.fill(map, writeSheet); // 别忘记关闭流 excelWriter.finish(); }","s":"横向的填充","u":"/docs/3.x/quickstart/fil","h":"#横向的填充","p":137},{"i":152,"t":"since​ 2.2.0-beta1 模板​ 最终效果​ 对象​ 参照：对象 代码​ /** * 多列表组合填充填充 * * @since 2.2.0-beta1 */ @Test public void compositeFill() { // 模板注意 用{} 来表示你要用的变量 如果本来就有\"{\",\"}\" 特殊字符 用\"\\{\",\"\\}\"代替 // {} 代表普通变量 {.} 代表是list的变量 {前缀.} 前缀可以区分不同的list String templateFileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"fill\" + File.separator + \"composite.xlsx\"; String fileName = TestFileUtil.getPath() + \"compositeFill\" + System.currentTimeMillis() + \".xlsx\"; ExcelWriter excelWriter = EasyExcel.write(fileName).withTemplate(templateFileName).build(); WriteSheet writeSheet = EasyExcel.writerSheet().build(); FillConfig fillConfig = FillConfig.builder().direction(WriteDirectionEnum.HORIZONTAL).build(); // 如果有多个list 模板上必须有{前缀.} 这里的前缀就是 data1，然后多个list必须用 FillWrapper包裹 excelWriter.fill(new FillWrapper(\"data1\", data()), fillConfig, writeSheet); excelWriter.fill(new FillWrapper(\"data1\", data()), fillConfig, writeSheet); excelWriter.fill(new FillWrapper(\"data2\", data()), writeSheet); excelWriter.fill(new FillWrapper(\"data2\", data()), writeSheet); excelWriter.fill(new FillWrapper(\"data3\", data()), writeSheet); excelWriter.fill(new FillWrapper(\"data3\", data()), writeSheet); Map<String, Object> map = new HashMap<String, Object>(); map.put(\"date\", \"2019年10月9日13:28:28\"); excelWriter.fill(map, writeSheet); // 别忘记关闭流 excelWriter.finish(); }","s":"多列表组合填充填充","u":"/docs/3.x/quickstart/fil","h":"#多列表组合填充填充","p":137},{"i":154,"t":"🏠 快速开始 读Excel","s":"读Excel","u":"/docs/3.x/quickstart/read","h":"","p":153},{"i":156,"t":"DEMO代码地址：https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/read/ReadTest.java","s":"示例代码","u":"/docs/3.x/quickstart/read","h":"#示例代码","p":153},{"i":158,"t":"excel示例​ 对象​ @Getter@Setter@EqualsAndHashCodepublic class DemoData { private String string; private Date date; private Double doubleData;} 监听器​ // 有个很重要的点 DemoDataListener 不能被spring管理，要每次读取excel都要new,然后里面用到spring可以构造方法传进去@Slf4jpublic class DemoDataListener implements ReadListener<DemoData> { /** * 每隔5条存储数据库，实际使用中可以100条，然后清理list ，方便内存回收 */ private static final int BATCH_COUNT = 100; /** * 缓存的数据 */ private List<DemoData> cachedDataList = ListUtils.newArrayListWithExpectedSize(BATCH_COUNT); /** * 假设这个是一个DAO，当然有业务逻辑这个也可以是一个service。当然如果不用存储这个对象没用。 */ private DemoDAO demoDAO; public DemoDataListener() { // 这里是demo，所以随便new一个。实际使用如果到了spring,请使用下面的有参构造函数 demoDAO = new DemoDAO(); } /** * 如果使用了spring,请使用这个构造方法。每次创建Listener的时候需要把spring管理的类传进来 * * @param demoDAO */ public DemoDataListener(DemoDAO demoDAO) { this.demoDAO = demoDAO; } /** * 这个每一条数据解析都会来调用 * * @param data one row value. Is is same as {@link AnalysisContext#readRowHolder()} * @param context */ @Override public void invoke(DemoData data, AnalysisContext context) { log.info(\"解析到一条数据:{}\", JSON.toJSONString(data)); cachedDataList.add(data); // 达到BATCH_COUNT了，需要去存储一次数据库，防止数据几万条数据在内存，容易OOM if (cachedDataList.size() >= BATCH_COUNT) { saveData(); // 存储完成清理 list cachedDataList = ListUtils.newArrayListWithExpectedSize(BATCH_COUNT); } } /** * 所有数据解析完成了 都会来调用 * * @param context */ @Override public void doAfterAllAnalysed(AnalysisContext context) { // 这里也要保存数据，确保最后遗留的数据也存储到数据库 saveData(); log.info(\"所有数据解析完成！\"); } /** * 加上存储数据库 */ private void saveData() { log.info(\"{}条数据，开始存储数据库！\", cachedDataList.size()); demoDAO.save(cachedDataList); log.info(\"存储数据库成功！\"); }} 持久层​ /** * 假设这个是你的DAO存储。当然还要这个类让spring管理，当然你不用需要存储，也不需要这个类。 **/public class DemoDAO { public void save(List<DemoData> list) { // 如果是mybatis,尽量别直接调用多次insert,自己写一个mapper里面新增一个方法batchInsert,所有数据一次性插入 }} 代码​ /** * 最简单的读 * <p> * 1. 创建excel对应的实体对象 参照{@link DemoData} * <p> * 2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照{@link DemoDataListener} * <p> * 3. 直接读即可 */ @Test public void simpleRead() { // 写法1：JDK8+ ,不用额外写一个DemoDataListener // since: 3.0.0-beta1 String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 这里 需要指定读用哪个class去读，然后读取第一个sheet 文件流会自动关闭 // 这里每次会读取3000条数据 然后返回过来 直接调用使用数据就行 EasyExcel.read(fileName, DemoData.class, new PageReadListener<DemoData>(dataList -> { for (DemoData demoData : dataList) { log.info(\"读取到一条数据{}\", JSON.toJSONString(demoData)); } })).sheet().doRead(); // 写法2： // 匿名内部类 不用额外写一个DemoDataListener fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 这里 需要指定读用哪个class去读，然后读取第一个sheet 文件流会自动关闭 EasyExcel.read(fileName, DemoData.class, new ReadListener<DemoData>() { /** * 单次缓存的数据量 */ public static final int BATCH_COUNT = 100; /** *临时存储 */ private List<DemoData> cachedDataList = ListUtils.newArrayListWithExpectedSize(BATCH_COUNT); @Override public void invoke(DemoData data, AnalysisContext context) { cachedDataList.add(data); if (cachedDataList.size() >= BATCH_COUNT) { saveData(); // 存储完成清理 list cachedDataList = ListUtils.newArrayListWithExpectedSize(BATCH_COUNT); } } @Override public void doAfterAllAnalysed(AnalysisContext context) { saveData(); } /** * 加上存储数据库 */ private void saveData() { log.info(\"{}条数据，开始存储数据库！\", cachedDataList.size()); log.info(\"存储数据库成功！\"); } }).sheet().doRead(); // 有个很重要的点 DemoDataListener 不能被spring管理，要每次读取excel都要new,然后里面用到spring可以构造方法传进去 // 写法3： fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 这里 需要指定读用哪个class去读，然后读取第一个sheet 文件流会自动关闭 EasyExcel.read(fileName, DemoData.class, new DemoDataListener()).sheet().doRead(); // 写法4： fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 一个文件一个reader ExcelReader excelReader = null; try { excelReader = EasyExcel.read(fileName, DemoData.class, new DemoDataListener()).build(); // 构建一个sheet 这里可以指定名字或者no ReadSheet readSheet = EasyExcel.readSheet(0).build(); // 读取一个sheet excelReader.read(readSheet); } finally { if (excelReader != null) { // 这里千万别忘记关闭，读的时候会创建临时文件，到时磁盘会崩的 excelReader.finish(); } } }","s":"最简单的读","u":"/docs/3.x/quickstart/read","h":"#最简单的读","p":153},{"i":160,"t":"excel示例​ 参照：excel示例 对象​ @Getter@Setter@EqualsAndHashCodepublic class IndexOrNameData { /** * 强制读取第三个 这里不建议 index 和 name 同时用，要么一个对象只用index，要么一个对象只用name去匹配 */ @ExcelProperty(index = 2) private Double doubleData; /** * 用名字去匹配，这里需要注意，如果名字重复，会导致只有一个字段读取到数据 */ @ExcelProperty(\"字符串标题\") private String string; @ExcelProperty(\"日期标题\") private Date date;} 监听器​ 参照：监听器 只是泛型变了而已 代码​ /** * 指定列的下标或者列名 * * <p>1. 创建excel对应的实体对象,并使用{@link ExcelProperty}注解. 参照{@link IndexOrNameData} * <p>2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照{@link IndexOrNameDataListener} * <p>3. 直接读即可 */ @Test public void indexOrNameRead() { String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 这里默认读取第一个sheet EasyExcel.read(fileName, IndexOrNameData.class, new IndexOrNameDataListener()).sheet().doRead(); }","s":"指定列的下标或者列名","u":"/docs/3.x/quickstart/read","h":"#指定列的下标或者列名","p":153},{"i":162,"t":"excel示例​ 参照：excel示例 对象​ 参照：对象 监听器​ 参照：监听器 代码​ /** * 读多个或者全部sheet,这里注意一个sheet不能读取多次，多次读取需要重新读取文件 * <p> * 1. 创建excel对应的实体对象 参照{@link DemoData} * <p> * 2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照{@link DemoDataListener} * <p> * 3. 直接读即可 */ @Test public void repeatedRead() { String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 读取全部sheet // 这里需要注意 DemoDataListener的doAfterAllAnalysed 会在每个sheet读取完毕后调用一次。然后所有sheet都会往同一个DemoDataListener里面写 EasyExcel.read(fileName, DemoData.class, new DemoDataListener()).doReadAll(); // 读取部分sheet fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; ExcelReader excelReader = null; try { excelReader = EasyExcel.read(fileName).build(); // 这里为了简单 所以注册了 同样的head 和Listener 自己使用功能必须不同的Listener ReadSheet readSheet1 = EasyExcel.readSheet(0).head(DemoData.class).registerReadListener(new DemoDataListener()).build(); ReadSheet readSheet2 = EasyExcel.readSheet(1).head(DemoData.class).registerReadListener(new DemoDataListener()).build(); // 这里注意 一定要把sheet1 sheet2 一起传进去，不然有个问题就是03版的excel 会读取多次，浪费性能 excelReader.read(readSheet1, readSheet2); } finally { if (excelReader != null) { // 这里千万别忘记关闭，读的时候会创建临时文件，到时磁盘会崩的 excelReader.finish(); } } }","s":"读多个sheet","u":"/docs/3.x/quickstart/read","h":"#读多个sheet","p":153},{"i":164,"t":"excel示例​ 参照：excel示例 对象​ @Getter@Setter@EqualsAndHashCodepublic class ConverterData { /** * 我自定义 转换器，不管数据库传过来什么 。我给他加上“自定义：” */ @ExcelProperty(converter = CustomStringStringConverter.class) private String string; /** * 这里用string 去接日期才能格式化。我想接收年月日格式 */ @DateTimeFormat(\"yyyy年MM月dd日HH时mm分ss秒\") private String date; /** * 我想接收百分比的数字 */ @NumberFormat(\"#.##%\") private String doubleData;} 监听器​ 参照：监听器 只是泛型变了 自定义转换器​ public class CustomStringStringConverter implements Converter<String> { @Override public Class<?> supportJavaTypeKey() { return String.class; } @Override public CellDataTypeEnum supportExcelTypeKey() { return CellDataTypeEnum.STRING; } /** * 这里读的时候会调用 * * @param context * @return */ @Override public String convertToJavaData(ReadConverterContext<?> context) { return \"自定义：\" + context.getReadCellData().getStringValue(); } /** * 这里是写的时候会调用 不用管 * * @return */ @Override public WriteCellData<?> convertToExcelData(WriteConverterContext<String> context) { return new WriteCellData<>(context.getValue()); }} 代码​ /** * 日期、数字或者自定义格式转换 * <p> * 默认读的转换器{@link DefaultConverterLoader#loadDefaultReadConverter()} * <p>1. 创建excel对应的实体对象 参照{@link ConverterData}.里面可以使用注解{@link DateTimeFormat}、{@link NumberFormat}或者自定义注解 * <p>2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照{@link ConverterDataListener} * <p>3. 直接读即可 */ @Test public void converterRead() { String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 这里 需要指定读用哪个class去读，然后读取第一个sheet EasyExcel.read(fileName, ConverterData.class, new ConverterDataListener()) // 这里注意 我们也可以registerConverter来指定自定义转换器， 但是这个转换变成全局了， 所有java为string,excel为string的都会用这个转换器。 // 如果就想单个字段使用请使用@ExcelProperty 指定converter // .registerConverter(new CustomStringStringConverter()) // 读取sheet .sheet().doRead(); }","s":"日期、数字或者自定义格式转换","u":"/docs/3.x/quickstart/read","h":"#日期数字或者自定义格式转换","p":153},{"i":166,"t":"excel示例​ 参照：excel示例 对象​ 参照：对象 监听器​ 参照：监听器 代码​ /** * 多行头 * * <p>1. 创建excel对应的实体对象 参照{@link DemoData} * <p>2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照{@link DemoDataListener} * <p>3. 设置headRowNumber参数，然后读。 这里要注意headRowNumber如果不指定， 会根据你传入的class的{@link ExcelProperty#value()}里面的表头的数量来决定行数， * 如果不传入class则默认为1.当然你指定了headRowNumber不管是否传入class都是以你传入的为准。 */ @Test public void complexHeaderRead() { String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 这里 需要指定读用哪个class去读，然后读取第一个sheet EasyExcel.read(fileName, DemoData.class, new DemoDataListener()).sheet() // 这里可以设置1，因为头就是一行。如果多行头，可以设置其他值。不传入也可以，因为默认会根据DemoData 来解析，他没有指定头，也就是默认1行 .headRowNumber(1).doRead(); }","s":"多行头","u":"/docs/3.x/quickstart/read","h":"#多行头","p":153},{"i":168,"t":"excel示例​ 参照：excel示例 对象​ 参照：对象 代码​ /** * 同步的返回，不推荐使用，如果数据量大会把数据放到内存里面 */ @Test public void synchronousRead() { String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 这里 需要指定读用哪个class去读，然后读取第一个sheet 同步读取会自动finish List<DemoData> list = EasyExcel.read(fileName).head(DemoData.class).sheet().doReadSync(); for (DemoData data : list) { LOGGER.info(\"读取到数据:{}\", JSON.toJSONString(data)); } // 这里 也可以不指定class，返回一个list，然后读取第一个sheet 同步读取会自动finish List<Map<Integer, String>> listMap = EasyExcel.read(fileName).sheet().doReadSync(); for (Map<Integer, String> data : listMap) { // 返回每条数据的键值对 表示所在的列 和所在列的值 LOGGER.info(\"读取到数据:{}\", JSON.toJSONString(data)); } }","s":"同步的返回","u":"/docs/3.x/quickstart/read","h":"#同步的返回","p":153},{"i":170,"t":"excel示例​ 参照：excel示例 对象​ 参照：对象 监听器​ 参照：监听器 里面多了一个方法,只要重写invokeHeadMap方法即可 /** * 这里会一行行的返回头 * * @param headMap * @param context */ @Override public void invokeHead(Map<Integer, ReadCellData<?>> headMap, AnalysisContext context) { log.info(\"解析到一条头数据:{}\", JSON.toJSONString(headMap)); // 如果想转成成 Map<Integer,String> // 方案1： 不要implements ReadListener 而是 extends AnalysisEventListener // 方案2： 调用 ConverterUtils.convertToStringMap(headMap, context) 自动会转换 } 代码​ /** * 读取表头数据 * * <p> * 1. 创建excel对应的实体对象 参照{@link DemoData} * <p> * 2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照{@link DemoHeadDataListener} * <p> * 3. 直接读即可 */ @Test public void headerRead() { String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 这里 需要指定读用哪个class去读，然后读取第一个sheet EasyExcel.read(fileName, DemoData.class, new DemoHeadDataListener()).sheet().doRead(); }","s":"读取表头数据","u":"/docs/3.x/quickstart/read","h":"#读取表头数据","p":153},{"i":172,"t":"since​ 2.0.0-beta1 excel示例​ 对象​ @Getter@Setter@EqualsAndHashCodepublic class DemoExtraData { private String row1; private String row2;} 监听器​ 参照：监听器 里面多了一个 extra 方法 @Slf4jpublic class DemoExtraListener implements ReadListener<DemoExtraData> { @Override public void invoke(DemoExtraData data, AnalysisContext context) {} @Override public void doAfterAllAnalysed(AnalysisContext context) {} @Override public void extra(CellExtra extra, AnalysisContext context) { log.info(\"读取到了一条额外信息:{}\", JSON.toJSONString(extra)); switch (extra.getType()) { case COMMENT: log.info(\"额外信息是批注,在rowIndex:{},columnIndex;{},内容是:{}\", extra.getRowIndex(), extra.getColumnIndex(), extra.getText()); break; case HYPERLINK: if (\"Sheet1!A1\".equals(extra.getText())) { log.info(\"额外信息是超链接,在rowIndex:{},columnIndex;{},内容是:{}\", extra.getRowIndex(), extra.getColumnIndex(), extra.getText()); } else if (\"Sheet2!A1\".equals(extra.getText())) { log.info( \"额外信息是超链接,而且覆盖了一个区间,在firstRowIndex:{},firstColumnIndex;{},lastRowIndex:{},lastColumnIndex:{},\" + \"内容是:{}\", extra.getFirstRowIndex(), extra.getFirstColumnIndex(), extra.getLastRowIndex(), extra.getLastColumnIndex(), extra.getText()); } else { Assert.fail(\"Unknown hyperlink!\"); } break; case MERGE: log.info( \"额外信息是超链接,而且覆盖了一个区间,在firstRowIndex:{},firstColumnIndex;{},lastRowIndex:{},lastColumnIndex:{}\", extra.getFirstRowIndex(), extra.getFirstColumnIndex(), extra.getLastRowIndex(), extra.getLastColumnIndex()); break; default: } }} 代码​ /** * 额外信息（批注、超链接、合并单元格信息读取） * <p> * 由于是流式读取，没法在读取到单元格数据的时候直接读取到额外信息，所以只能最后通知哪些单元格有哪些额外信息 * * <p> * 1. 创建excel对应的实体对象 参照{@link DemoExtraData} * <p> * 2. 由于默认异步读取excel，所以需要创建excel一行一行的回调监听器，参照{@link DemoExtraListener} * <p> * 3. 直接读即可 * * @since 2.2.0-beat1 */ @Test public void extraRead() { String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"extra.xlsx\"; // 这里 需要指定读用哪个class去读，然后读取第一个sheet EasyExcel.read(fileName, DemoExtraData.class, new DemoExtraListener()) // 需要读取批注 默认不读取 .extraRead(CellExtraTypeEnum.COMMENT) // 需要读取超链接 默认不读取 .extraRead(CellExtraTypeEnum.HYPERLINK) // 需要读取合并单元格信息 默认不读取 .extraRead(CellExtraTypeEnum.MERGE).sheet().doRead(); }","s":"额外信息（批注、超链接、合并单元格信息读取）","u":"/docs/3.x/quickstart/read","h":"#额外信息批注超链接合并单元格信息读取","p":153},{"i":174,"t":"excel示例​ 对象​ @Getter@Setter@EqualsAndHashCodepublic class CellDataReadDemoData { private CellData<String> string; // 这里注意 虽然是日期 但是 类型 存储的是number 因为excel 存储的就是number private CellData<Date> date; private CellData<Double> doubleData; // 这里并不一定能完美的获取 有些公式是依赖性的 可能会读不到 这个问题后续会修复 private CellData<String> formulaValue;} 监听器​ 参照：监听器 代码 /** * 读取公式和单元格类型 * * <p> * 1. 创建excel对应的实体对象 参照{@link CellDataReadDemoData} * <p> * 2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照{@link DemoHeadDataListener} * <p> * 3. 直接读即可 * * @since 2.2.0-beat1 */ @Test public void cellDataRead() { String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"cellDataDemo.xlsx\"; // 这里 需要指定读用哪个class去读，然后读取第一个sheet EasyExcel.read(fileName, CellDataReadDemoData.class, new CellDataDemoHeadDataListener()).sheet().doRead(); }","s":"读取公式和单元格类型","u":"/docs/3.x/quickstart/read","h":"#读取公式和单元格类型","p":153},{"i":176,"t":"excel示例​ 参照：excel示例 对象​ @Getter@Setter@EqualsAndHashCodepublic class ExceptionDemoData { /** * 用日期去接字符串 肯定报错 */ private Date date;} 监听器​ 参照：监听器 里面多了一个方法,只要重写onException方法即可 /** * 在转换异常 获取其他异常下会调用本接口。抛出异常则停止读取。如果这里不抛出异常则 继续读取下一行。 * * @param exception * @param context * @throws Exception */ @Override public void onException(Exception exception, AnalysisContext context) { log.error(\"解析失败，但是继续解析下一行:{}\", exception.getMessage()); // 如果是某一个单元格的转换异常 能获取到具体行号 // 如果要获取头的信息 配合invokeHeadMap使用 if (exception instanceof ExcelDataConvertException) { ExcelDataConvertException excelDataConvertException = (ExcelDataConvertException)exception; log.error(\"第{}行，第{}列解析异常，数据为:{}\", excelDataConvertException.getRowIndex(), excelDataConvertException.getColumnIndex(), excelDataConvertException.getCellData()); } } 代码​ /** * 数据转换等异常处理 * * <p> * 1. 创建excel对应的实体对象 参照{@link ExceptionDemoData} * <p> * 2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照{@link DemoExceptionListener} * <p> * 3. 直接读即可 */ @Test public void exceptionRead() { String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 这里 需要指定读用哪个class去读，然后读取第一个sheet EasyExcel.read(fileName, ExceptionDemoData.class, new DemoExceptionListener()).sheet().doRead(); }","s":"数据转换等异常处理","u":"/docs/3.x/quickstart/read","h":"#数据转换等异常处理","p":153},{"i":178,"t":"excel示例​ 参照：excel示例 监听器​ @Slf4jpublic class NoModelDataListener extends AnalysisEventListener<Map<Integer, String>> { /** * 每隔5条存储数据库，实际使用中可以100条，然后清理list ，方便内存回收 */ private static final int BATCH_COUNT = 5; private List<Map<Integer, String>> cachedDataList = ListUtils.newArrayListWithExpectedSize(BATCH_COUNT); @Override public void invoke(Map<Integer, String> data, AnalysisContext context) { log.info(\"解析到一条数据:{}\", JSON.toJSONString(data)); cachedDataList.add(data); if (cachedDataList.size() >= BATCH_COUNT) { saveData(); cachedDataList = ListUtils.newArrayListWithExpectedSize(BATCH_COUNT); } } @Override public void doAfterAllAnalysed(AnalysisContext context) { saveData(); log.info(\"所有数据解析完成！\"); } /** * 加上存储数据库 */ private void saveData() { log.info(\"{}条数据，开始存储数据库！\", cachedDataList.size()); log.info(\"存储数据库成功！\"); }} 代码​ /** * 不创建对象的读 */ @Test public void noModelRead() { String fileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; // 这里 只要，然后读取第一个sheet 同步读取会自动finish EasyExcel.read(fileName, new NoModelDataListener()).sheet().doRead(); }","s":"不创建对象的读","u":"/docs/3.x/quickstart/read","h":"#不创建对象的读","p":153},{"i":180,"t":"示例代码​ DEMO代码地址：https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/web/WebTest.java excel示例​ 参照：excel示例 对象​ 参照：对象 只是名字变了 监听器​ 参照：监听器 只是泛型变了 代码​ /** * 文件上传 * <p> * 1. 创建excel对应的实体对象 参照{@link UploadData} * <p> * 2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照{@link UploadDataListener} * <p> * 3. 直接读即可 */ @PostMapping(\"upload\") @ResponseBody public String upload(MultipartFile file) throws IOException { EasyExcel.read(file.getInputStream(), UploadData.class, new UploadDataListener(uploadDAO)).sheet().doRead(); return \"success\"; }","s":"web中的读","u":"/docs/3.x/quickstart/read","h":"#web中的读","p":153},{"i":182,"t":"🏠 快速开始 写Excel","s":"写Excel","u":"/docs/3.x/quickstart/write","h":"","p":181},{"i":184,"t":"DEMO代码地址：https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/write/WriteTest.java","s":"示例代码","u":"/docs/3.x/quickstart/write","h":"#示例代码","p":181},{"i":186,"t":"excel示例​ 对象​ @Getter@Setter@EqualsAndHashCodepublic class DemoData { @ExcelProperty(\"字符串标题\") private String string; @ExcelProperty(\"日期标题\") private Date date; @ExcelProperty(\"数字标题\") private Double doubleData; /** * 忽略这个字段 */ @ExcelIgnore private String ignore;} 代码​ /** * 最简单的写 * <p> * 1. 创建excel对应的实体对象 参照{@link DemoData} * <p> * 2. 直接写即可 */ @Test public void simpleWrite() { // 注意 simpleWrite在数据量不大的情况下可以使用（5000以内，具体也要看实际情况），数据量大参照 重复多次写入 // 写法1 JDK8+ // since: 3.0.0-beta1 String fileName = TestFileUtil.getPath() + \"simpleWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 // 如果这里想使用03 则 传入excelType参数即可 EasyExcel.write(fileName, DemoData.class) .sheet(\"模板\") .doWrite(() -> { // 分页查询数据 return data(); }); // 写法2 fileName = TestFileUtil.getPath() + \"simpleWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 // 如果这里想使用03 则 传入excelType参数即可 EasyExcel.write(fileName, DemoData.class).sheet(\"模板\").doWrite(data()); // 写法3 fileName = TestFileUtil.getPath() + \"simpleWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写 ExcelWriter excelWriter = null; try { excelWriter = EasyExcel.write(fileName, DemoData.class).build(); WriteSheet writeSheet = EasyExcel.writerSheet(\"模板\").build(); excelWriter.write(data(), writeSheet); } finally { // 千万别忘记finish 会帮忙关闭流 if (excelWriter != null) { excelWriter.finish(); } } }","s":"最简单的写","u":"/docs/3.x/quickstart/write","h":"#最简单的写","p":181},{"i":188,"t":"excel示例​ 对象​ 参照：对象 代码​ /** * 根据参数只导出指定列 * <p> * 1. 创建excel对应的实体对象 参照{@link DemoData} * <p> * 2. 根据自己或者排除自己需要的列 * <p> * 3. 直接写即可 * * @since 2.1.1 */ @Test public void excludeOrIncludeWrite() { String fileName = TestFileUtil.getPath() + \"excludeOrIncludeWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里需要注意 在使用ExcelProperty注解的使用，如果想不空列则需要加入order字段，而不是index,order会忽略空列，然后继续往后，而index，不会忽略空列，在第几列就是第几列。 // 根据用户传入字段 假设我们要忽略 date Set<String> excludeColumnFiledNames = new HashSet<String>(); excludeColumnFiledNames.add(\"date\"); // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, DemoData.class).excludeColumnFiledNames(excludeColumnFiledNames).sheet(\"模板\") .doWrite(data()); fileName = TestFileUtil.getPath() + \"excludeOrIncludeWrite\" + System.currentTimeMillis() + \".xlsx\"; // 根据用户传入字段 假设我们只要导出 date Set<String> includeColumnFiledNames = new HashSet<String>(); includeColumnFiledNames.add(\"date\"); // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, DemoData.class).includeColumnFiledNames(includeColumnFiledNames).sheet(\"模板\") .doWrite(data()); }","s":"根据参数只导出指定列","u":"/docs/3.x/quickstart/write","h":"#根据参数只导出指定列","p":181},{"i":190,"t":"excel示例​ 对象​ @Getter@Setter@EqualsAndHashCodepublic class IndexData { @ExcelProperty(value = \"字符串标题\", index = 0) private String string; @ExcelProperty(value = \"日期标题\", index = 1) private Date date; /** * 这里设置3 会导致第二列空的 */ @ExcelProperty(value = \"数字标题\", index = 3) private Double doubleData;} 代码​ /** * 指定写入的列 * <p>1. 创建excel对应的实体对象 参照{@link IndexData} * <p>2. 使用{@link ExcelProperty}注解指定写入的列 * <p>3. 直接写即可 */ @Test public void indexWrite() { String fileName = TestFileUtil.getPath() + \"indexWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, IndexData.class).sheet(\"模板\").doWrite(data()); }","s":"指定写入的列","u":"/docs/3.x/quickstart/write","h":"#指定写入的列","p":181},{"i":192,"t":"excel示例​ 对象​ @Getter@Setter@EqualsAndHashCodepublic class ComplexHeadData { @ExcelProperty({\"主标题\", \"字符串标题\"}) private String string; @ExcelProperty({\"主标题\", \"日期标题\"}) private Date date; @ExcelProperty({\"主标题\", \"数字标题\"}) private Double doubleData;} 代码​ /** * 复杂头写入 * <p>1. 创建excel对应的实体对象 参照{@link ComplexHeadData} * <p>2. 使用{@link ExcelProperty}注解指定复杂的头 * <p>3. 直接写即可 */ @Test public void complexHeadWrite() { String fileName = TestFileUtil.getPath() + \"complexHeadWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, ComplexHeadData.class).sheet(\"模板\").doWrite(data()); }","s":"复杂头写入","u":"/docs/3.x/quickstart/write","h":"#复杂头写入","p":181},{"i":194,"t":"excel示例​ 对象​ 参照：对象 代码​ /** * 重复多次写入 * <p> * 1. 创建excel对应的实体对象 参照{@link ComplexHeadData} * <p> * 2. 使用{@link ExcelProperty}注解指定复杂的头 * <p> * 3. 直接调用二次写入即可 */ @Test public void repeatedWrite() { // 方法1 如果写到同一个sheet String fileName = TestFileUtil.getPath() + \"repeatedWrite\" + System.currentTimeMillis() + \".xlsx\"; ExcelWriter excelWriter = null; try { // 这里 需要指定写用哪个class去写 excelWriter = EasyExcel.write(fileName, DemoData.class).build(); // 这里注意 如果同一个sheet只要创建一次 WriteSheet writeSheet = EasyExcel.writerSheet(\"模板\").build(); // 去调用写入,这里我调用了五次，实际使用时根据数据库分页的总的页数来 for (int i = 0; i < 5; i++) { // 分页去数据库查询数据 这里可以去数据库查询每一页的数据 List<DemoData> data = data(); excelWriter.write(data, writeSheet); } } finally { // 千万别忘记finish 会帮忙关闭流 if (excelWriter != null) { excelWriter.finish(); } } // 方法2 如果写到不同的sheet 同一个对象 fileName = TestFileUtil.getPath() + \"repeatedWrite\" + System.currentTimeMillis() + \".xlsx\"; try { // 这里 指定文件 excelWriter = EasyExcel.write(fileName, DemoData.class).build(); // 去调用写入,这里我调用了五次，实际使用时根据数据库分页的总的页数来。这里最终会写到5个sheet里面 for (int i = 0; i < 5; i++) { // 每次都要创建writeSheet 这里注意必须指定sheetNo 而且sheetName必须不一样 WriteSheet writeSheet = EasyExcel.writerSheet(i, \"模板\" + i).build(); // 分页去数据库查询数据 这里可以去数据库查询每一页的数据 List<DemoData> data = data(); excelWriter.write(data, writeSheet); } } finally { // 千万别忘记finish 会帮忙关闭流 if (excelWriter != null) { excelWriter.finish(); } } // 方法3 如果写到不同的sheet 不同的对象 fileName = TestFileUtil.getPath() + \"repeatedWrite\" + System.currentTimeMillis() + \".xlsx\"; try { // 这里 指定文件 excelWriter = EasyExcel.write(fileName).build(); // 去调用写入,这里我调用了五次，实际使用时根据数据库分页的总的页数来。这里最终会写到5个sheet里面 for (int i = 0; i < 5; i++) { // 每次都要创建writeSheet 这里注意必须指定sheetNo 而且sheetName必须不一样。这里注意DemoData.class 可以每次都变，我这里为了方便 所以用的同一个class 实际上可以一直变 WriteSheet writeSheet = EasyExcel.writerSheet(i, \"模板\" + i).head(DemoData.class).build(); // 分页去数据库查询数据 这里可以去数据库查询每一页的数据 List<DemoData> data = data(); excelWriter.write(data, writeSheet); } } finally { // 千万别忘记finish 会帮忙关闭流 if (excelWriter != null) { excelWriter.finish(); } } }","s":"重复多次写入(写到单个或者多个Sheet)","u":"/docs/3.x/quickstart/write","h":"#重复多次写入写到单个或者多个sheet","p":181},{"i":196,"t":"excel示例​ 对象​ @Getter@Setter@EqualsAndHashCodepublic class ConverterData { /** * 我想所有的 字符串起前面加上\"自定义：\"三个字 */ @ExcelProperty(value = \"字符串标题\", converter = CustomStringStringConverter.class) private String string; /** * 我想写到excel 用年月日的格式 */ @DateTimeFormat(\"yyyy年MM月dd日HH时mm分ss秒\") @ExcelProperty(\"日期标题\") private Date date; /** * 我想写到excel 用百分比表示 */ @NumberFormat(\"#.##%\") @ExcelProperty(value = \"数字标题\") private Double doubleData;} 代码​ /** * 日期、数字或者自定义格式转换 * <p>1. 创建excel对应的实体对象 参照{@link ConverterData} * <p>2. 使用{@link ExcelProperty}配合使用注解{@link DateTimeFormat}、{@link NumberFormat}或者自定义注解 * <p>3. 直接写即可 */ @Test public void converterWrite() { String fileName = TestFileUtil.getPath() + \"converterWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, ConverterData.class).sheet(\"模板\").doWrite(data()); }","s":"日期、数字或者自定义格式转换","u":"/docs/3.x/quickstart/write","h":"#日期数字或者自定义格式转换","p":181},{"i":198,"t":"excel示例​ 对象​ @Getter@Setter@EqualsAndHashCode@ContentRowHeight(100)@ColumnWidth(100 / 8)public class ImageDemoData { private File file; private InputStream inputStream; /** * 如果string类型 必须指定转换器，string默认转换成string */ @ExcelProperty(converter = StringImageConverter.class) private String string; private byte[] byteArray; /** * 根据url导出 * * @since 2.1.1 */ private URL url; /** * 根据文件导出 并设置导出的位置。 * * @since 3.0.0-beta1 */ private WriteCellData<Void> writeCellDataFile;} 代码​ /** * 图片导出 * <p> * 1. 创建excel对应的实体对象 参照{@link ImageDemoData} * <p> * 2. 直接写即可 */ @Test public void imageWrite() throws Exception { String fileName = TestFileUtil.getPath() + \"imageWrite\" + System.currentTimeMillis() + \".xlsx\"; String imagePath = TestFileUtil.getPath() + \"converter\" + File.separator + \"img.jpg\"; try (InputStream inputStream = FileUtils.openInputStream(new File(imagePath))) { List<ImageDemoData> list = ListUtils.newArrayList(); ImageDemoData imageDemoData = new ImageDemoData(); list.add(imageDemoData); // 放入五种类型的图片 实际使用只要选一种即可 imageDemoData.setByteArray(FileUtils.readFileToByteArray(new File(imagePath))); imageDemoData.setFile(new File(imagePath)); imageDemoData.setString(imagePath); imageDemoData.setInputStream(inputStream); imageDemoData.setUrl(new URL( \"https://raw.githubusercontent.com/alibaba/easyexcel/master/src/test/resources/converter/img.jpg\")); // 这里演示 // 需要额外放入文字 // 而且需要放入2个图片 // 第一个图片靠左 // 第二个靠右 而且要额外的占用他后面的单元格 WriteCellData<Void> writeCellData = new WriteCellData<>(); imageDemoData.setWriteCellDataFile(writeCellData); // 这里可以设置为 EMPTY 则代表不需要其他数据了 writeCellData.setType(CellDataTypeEnum.STRING); writeCellData.setStringValue(\"额外的放一些文字\"); // 可以放入多个图片 List<ImageData> imageDataList = new ArrayList<>(); ImageData imageData = new ImageData(); imageDataList.add(imageData); writeCellData.setImageDataList(imageDataList); // 放入2进制图片 imageData.setImage(FileUtils.readFileToByteArray(new File(imagePath))); // 图片类型 imageData.setImageType(ImageType.PICTURE_TYPE_PNG); // 上 右 下 左 需要留空 // 这个类似于 css 的 margin // 这里实测 不能设置太大 超过单元格原始大小后 打开会提示修复。暂时未找到很好的解法。 imageData.setTop(5); imageData.setRight(40); imageData.setBottom(5); imageData.setLeft(5); // 放入第二个图片 imageData = new ImageData(); imageDataList.add(imageData); writeCellData.setImageDataList(imageDataList); imageData.setImage(FileUtils.readFileToByteArray(new File(imagePath))); imageData.setImageType(ImageType.PICTURE_TYPE_PNG); imageData.setTop(5); imageData.setRight(5); imageData.setBottom(5); imageData.setLeft(50); // 设置图片的位置 假设 现在目标 是 覆盖 当前单元格 和当前单元格右边的单元格 // 起点相对于当前单元格为0 当然可以不写 imageData.setRelativeFirstRowIndex(0); imageData.setRelativeFirstColumnIndex(0); imageData.setRelativeLastRowIndex(0); // 前面3个可以不写 下面这个需要写 也就是 结尾 需要相对当前单元格 往右移动一格 // 也就是说 这个图片会覆盖当前单元格和 后面的那一格 imageData.setRelativeLastColumnIndex(1); // 写入数据 EasyExcel.write(fileName, ImageDemoData.class).sheet().doWrite(list); } }","s":"图片导出","u":"/docs/3.x/quickstart/write","h":"#图片导出","p":181},{"i":200,"t":"excel示例​ 对象​ @Getter@Setter@EqualsAndHashCodepublic class WriteCellDemoData { /** * 超链接 * * @since 3.0.0-beta1 */ private WriteCellData<String> hyperlink; /** * 备注 * * @since 3.0.0-beta1 */ private WriteCellData<String> commentData; /** * 公式 * * @since 3.0.0-beta1 */ private WriteCellData<String> formulaData; /** * 指定单元格的样式。当然样式 也可以用注解等方式。 * * @since 3.0.0-beta1 */ private WriteCellData<String> writeCellStyle; /** * 指定一个单元格有多个样式 * * @since 3.0.0-beta1 */ private WriteCellData<String> richText;} 代码​ /** * 超链接、备注、公式、指定单个单元格的样式、单个单元格多种样式 * <p> * 1. 创建excel对应的实体对象 参照{@link WriteCellDemoData} * <p> * 2. 直接写即可 * * @since 3.0.0-beta1 */ @Test public void writeCellDataWrite() { String fileName = TestFileUtil.getPath() + \"writeCellDataWrite\" + System.currentTimeMillis() + \".xlsx\"; WriteCellDemoData writeCellDemoData = new WriteCellDemoData(); // 设置超链接 WriteCellData<String> hyperlink = new WriteCellData<>(\"官方网站\"); writeCellDemoData.setHyperlink(hyperlink); HyperlinkData hyperlinkData = new HyperlinkData(); hyperlink.setHyperlinkData(hyperlinkData); hyperlinkData.setAddress(\"https://github.com/alibaba/easyexcel\"); hyperlinkData.setHyperlinkType(HyperlinkType.URL); // 设置备注 WriteCellData<String> comment = new WriteCellData<>(\"备注的单元格信息\"); writeCellDemoData.setCommentData(comment); CommentData commentData = new CommentData(); comment.setCommentData(commentData); commentData.setAuthor(\"Jiaju Zhuang\"); commentData.setRichTextStringData(new RichTextStringData(\"这是一个备注\")); // 备注的默认大小是按照单元格的大小 这里想调整到4个单元格那么大 所以向后 向下 各额外占用了一个单元格 commentData.setRelativeLastColumnIndex(1); commentData.setRelativeLastRowIndex(1); // 设置公式 WriteCellData<String> formula = new WriteCellData<>(); writeCellDemoData.setFormulaData(formula); FormulaData formulaData = new FormulaData(); formula.setFormulaData(formulaData); // 将 123456789 中的第一个数字替换成 2 // 这里只是例子 如果真的涉及到公式 能内存算好尽量内存算好 公式能不用尽量不用 formulaData.setFormulaValue(\"REPLACE(123456789,1,1,2)\"); // 设置单个单元格的样式 当然样式 很多的话 也可以用注解等方式。 WriteCellData<String> writeCellStyle = new WriteCellData<>(\"单元格样式\"); writeCellStyle.setType(CellDataTypeEnum.STRING); writeCellDemoData.setWriteCellStyle(writeCellStyle); WriteCellStyle writeCellStyleData = new WriteCellStyle(); writeCellStyle.setWriteCellStyle(writeCellStyleData); // 这里需要指定 FillPatternType 为FillPatternType.SOLID_FOREGROUND 不然无法显示背景颜色. writeCellStyleData.setFillPatternType(FillPatternType.SOLID_FOREGROUND); // 背景绿色 writeCellStyleData.setFillForegroundColor(IndexedColors.GREEN.getIndex()); // 设置单个单元格多种样式 WriteCellData<String> richTest = new WriteCellData<>(); richTest.setType(CellDataTypeEnum.RICH_TEXT_STRING); writeCellDemoData.setRichText(richTest); RichTextStringData richTextStringData = new RichTextStringData(); richTest.setRichTextStringDataValue(richTextStringData); richTextStringData.setTextString(\"红色绿色默认\"); // 前2个字红色 WriteFont writeFont = new WriteFont(); writeFont.setColor(IndexedColors.RED.getIndex()); richTextStringData.applyFont(0, 2, writeFont); // 接下来2个字绿色 writeFont = new WriteFont(); writeFont.setColor(IndexedColors.GREEN.getIndex()); richTextStringData.applyFont(2, 4, writeFont); List<WriteCellDemoData> data = new ArrayList<>(); data.add(writeCellDemoData); EasyExcel.write(fileName, WriteCellDemoData.class).inMemory(true).sheet(\"模板\").doWrite(data); }","s":"超链接、备注、公式、指定单个单元格的样式、单个单元格多种样式","u":"/docs/3.x/quickstart/write","h":"#超链接备注公式指定单个单元格的样式单个单元格多种样式","p":181},{"i":202,"t":"模板excel示例​ excel示例​ 对象​ 参照：对象 代码​ /** * 根据模板写入 * <p>1. 创建excel对应的实体对象 参照{@link IndexData} * <p>2. 使用{@link ExcelProperty}注解指定写入的列 * <p>3. 使用withTemplate 写取模板 * <p>4. 直接写即可 */ @Test public void templateWrite() { String templateFileName = TestFileUtil.getPath() + \"demo\" + File.separator + \"demo.xlsx\"; String fileName = TestFileUtil.getPath() + \"templateWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, DemoData.class).withTemplate(templateFileName).sheet().doWrite(data()); }","s":"根据模板写入","u":"/docs/3.x/quickstart/write","h":"#根据模板写入","p":181},{"i":204,"t":"excel示例​ 对象​ @Getter@Setter@EqualsAndHashCode@ContentRowHeight(10)@HeadRowHeight(20)@ColumnWidth(25)public class WidthAndHeightData { @ExcelProperty(\"字符串标题\") private String string; @ExcelProperty(\"日期标题\") private Date date; /** * 宽度为50 */ @ColumnWidth(50) @ExcelProperty(\"数字标题\") private Double doubleData;} 代码​ /** * 列宽、行高 * <p>1. 创建excel对应的实体对象 参照{@link WidthAndHeightData} * <p>2. 使用注解{@link ColumnWidth}、{@link HeadRowHeight}、{@link ContentRowHeight}指定宽度或高度 * <p>3. 直接写即可 */ @Test public void widthAndHeightWrite() { String fileName = TestFileUtil.getPath() + \"widthAndHeightWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, WidthAndHeightData.class).sheet(\"模板\").doWrite(data()); }","s":"列宽、行高","u":"/docs/3.x/quickstart/write","h":"#列宽行高","p":181},{"i":206,"t":"since​ 2.2.0-beta1 excel示例​ 对象​ @Getter@Setter@EqualsAndHashCode// 头背景设置成红色 IndexedColors.RED.getIndex()@HeadStyle(fillPatternType = FillPatternTypeEnum.SOLID_FOREGROUND, fillForegroundColor = 10)// 头字体设置成20@HeadFontStyle(fontHeightInPoints = 20)// 内容的背景设置成绿色 IndexedColors.GREEN.getIndex()@ContentStyle(fillPatternType = FillPatternTypeEnum.SOLID_FOREGROUND, fillForegroundColor = 17)// 内容字体设置成20@ContentFontStyle(fontHeightInPoints = 20)public class DemoStyleData { // 字符串的头背景设置成粉红 IndexedColors.PINK.getIndex() @HeadStyle(fillPatternType = FillPatternTypeEnum.SOLID_FOREGROUND, fillForegroundColor = 14) // 字符串的头字体设置成20 @HeadFontStyle(fontHeightInPoints = 30) // 字符串的内容的背景设置成天蓝 IndexedColors.SKY_BLUE.getIndex() @ContentStyle(fillPatternType = FillPatternTypeEnum.SOLID_FOREGROUND, fillForegroundColor = 40) // 字符串的内容字体设置成20 @ContentFontStyle(fontHeightInPoints = 30) @ExcelProperty(\"字符串标题\") private String string; @ExcelProperty(\"日期标题\") private Date date; @ExcelProperty(\"数字标题\") private Double doubleData;}/** * 样式的数据类 * * @author Jiaju Zhuang **/@Data// 头背景设置成红色 IndexedColors.RED.getIndex()@HeadStyle(fillPatternType = FillPatternType.SOLID_FOREGROUND, fillForegroundColor = 10)// 头字体设置成20@HeadFontStyle(fontHeightInPoints = 20)// 内容的背景设置成绿色 IndexedColors.GREEN.getIndex()@ContentStyle(fillPatternType = FillPatternType.SOLID_FOREGROUND, fillForegroundColor = 17)// 内容字体设置成20@ContentFontStyle(fontHeightInPoints = 20)public class DemoStyleData { // 字符串的头背景设置成粉红 IndexedColors.PINK.getIndex() @HeadStyle(fillPatternType = FillPatternType.SOLID_FOREGROUND, fillForegroundColor = 14) // 字符串的头字体设置成20 @HeadFontStyle(fontHeightInPoints = 30) // 字符串的内容的背景设置成天蓝 IndexedColors.SKY_BLUE.getIndex() @ContentStyle(fillPatternType = FillPatternType.SOLID_FOREGROUND, fillForegroundColor = 40) // 字符串的内容字体设置成20 @ContentFontStyle(fontHeightInPoints = 30) @ExcelProperty(\"字符串标题\") private String string; @ExcelProperty(\"日期标题\") private Date date; @ExcelProperty(\"数字标题\") private Double doubleData;} 代码​ /** * 注解形式自定义样式 * <p> * 1. 创建excel对应的实体对象 参照{@link DemoStyleData} * <p> * 3. 直接写即可 * * @since 2.2.0-beta1 */ @Test public void annotationStyleWrite() { String fileName = TestFileUtil.getPath() + \"annotationStyleWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, DemoStyleData.class).sheet(\"模板\").doWrite(data()); }","s":"注解形式自定义样式","u":"/docs/3.x/quickstart/write","h":"#注解形式自定义样式","p":181},{"i":208,"t":"excel示例​ 对象​ 参照：对象 代码​ /** * 拦截器形式自定义样式 * <p> * 1. 创建excel对应的实体对象 参照{@link DemoData} * <p> * 2. 创建一个style策略 并注册 * <p> * 3. 直接写即可 */ @Test public void handlerStyleWrite() { // 方法1 使用已有的策略 推荐 // HorizontalCellStyleStrategy 每一行的样式都一样 或者隔行一样 // AbstractVerticalCellStyleStrategy 每一列的样式都一样 需要自己回调每一页 String fileName = TestFileUtil.getPath() + \"handlerStyleWrite\" + System.currentTimeMillis() + \".xlsx\"; // 头的策略 WriteCellStyle headWriteCellStyle = new WriteCellStyle(); // 背景设置为红色 headWriteCellStyle.setFillForegroundColor(IndexedColors.RED.getIndex()); WriteFont headWriteFont = new WriteFont(); headWriteFont.setFontHeightInPoints((short)20); headWriteCellStyle.setWriteFont(headWriteFont); // 内容的策略 WriteCellStyle contentWriteCellStyle = new WriteCellStyle(); // 这里需要指定 FillPatternType 为FillPatternType.SOLID_FOREGROUND 不然无法显示背景颜色.头默认了 FillPatternType所以可以不指定 contentWriteCellStyle.setFillPatternType(FillPatternType.SOLID_FOREGROUND); // 背景绿色 contentWriteCellStyle.setFillForegroundColor(IndexedColors.GREEN.getIndex()); WriteFont contentWriteFont = new WriteFont(); // 字体大小 contentWriteFont.setFontHeightInPoints((short)20); contentWriteCellStyle.setWriteFont(contentWriteFont); // 这个策略是 头是头的样式 内容是内容的样式 其他的策略可以自己实现 HorizontalCellStyleStrategy horizontalCellStyleStrategy = new HorizontalCellStyleStrategy(headWriteCellStyle, contentWriteCellStyle); // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, DemoData.class) .registerWriteHandler(horizontalCellStyleStrategy) .sheet(\"模板\") .doWrite(data()); // 方法2: 使用easyexcel的方式完全自己写 不太推荐 尽量使用已有策略 // @since 3.0.0-beta2 fileName = TestFileUtil.getPath() + \"handlerStyleWrite\" + System.currentTimeMillis() + \".xlsx\"; EasyExcel.write(fileName, DemoData.class) .registerWriteHandler(new CellWriteHandler() { @Override public void afterCellDispose(CellWriteHandlerContext context) { // 当前事件会在 数据设置到poi的cell里面才会回调 // 判断不是头的情况 如果是fill 的情况 这里会==null 所以用not true if (BooleanUtils.isNotTrue(context.getHead())) { // 第一个单元格 // 只要不是头 一定会有数据 当然fill的情况 可能要context.getCellDataList() ,这个需要看模板，因为一个单元格会有多个 WriteCellData WriteCellData<?> cellData = context.getFirstCellData(); // 这里需要去cellData 获取样式 // 很重要的一个原因是 WriteCellStyle 和 dataFormatData绑定的 简单的说 比如你加了 DateTimeFormat // ，已经将writeCellStyle里面的dataFormatData 改了 如果你自己new了一个WriteCellStyle，可能注解的样式就失效了 // 然后 getOrCreateStyle 用于返回一个样式，如果为空，则创建一个后返回 WriteCellStyle writeCellStyle = cellData.getOrCreateStyle(); writeCellStyle.setFillForegroundColor(IndexedColors.RED.getIndex()); // 这里需要指定 FillPatternType 为FillPatternType.SOLID_FOREGROUND writeCellStyle.setFillPatternType(FillPatternType.SOLID_FOREGROUND); // 这样样式就设置好了 后面有个FillStyleCellWriteHandler 默认会将 WriteCellStyle 设置到 cell里面去 所以可以不用管了 } } }).sheet(\"模板\") .doWrite(data()); // 方法3: 使用poi的样式完全自己写 不推荐 // @since 3.0.0-beta2 // 坑1：style里面有dataformat 用来格式化数据的 所以自己设置可能导致格式化注解不生效 // 坑2：不要一直去创建style 记得缓存起来 最多创建6W个就挂了 fileName = TestFileUtil.getPath() + \"handlerStyleWrite\" + System.currentTimeMillis() + \".xlsx\"; EasyExcel.write(fileName, DemoData.class) .registerWriteHandler(new CellWriteHandler() { @Override public void afterCellDispose(CellWriteHandlerContext context) { // 当前事件会在 数据设置到poi的cell里面才会回调 // 判断不是头的情况 如果是fill 的情况 这里会==null 所以用not true if (BooleanUtils.isNotTrue(context.getHead())) { Cell cell = context.getCell(); // 拿到poi的workbook Workbook workbook = context.getWriteWorkbookHolder().getWorkbook(); // 这里千万记住 想办法能复用的地方把他缓存起来 一个表格最多创建6W个样式 // 不同单元格尽量传同一个 cellStyle CellStyle cellStyle = workbook.createCellStyle(); cellStyle.setFillForegroundColor(IndexedColors.RED.getIndex()); // 这里需要指定 FillPatternType 为FillPatternType.SOLID_FOREGROUND cellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND); cell.setCellStyle(cellStyle); // 由于这里没有指定dataformat 最后展示的数据 格式可能会不太正确 // 这里要把 WriteCellData的样式清空， 不然后面还有一个拦截器 FillStyleCellWriteHandler 默认会将 WriteCellStyle 设置到 // cell里面去 会导致自己设置的不一样 context.getFirstCellData().setWriteCellStyle(null); } } }).sheet(\"模板\") .doWrite(data()); }","s":"自定义样式","u":"/docs/3.x/quickstart/write","h":"#自定义样式","p":181},{"i":210,"t":"since​ 2.2.0-beta1 excel示例​ 对象​ 方法1 @Getter@Setter@EqualsAndHashCode// 将第6-7行的2-3列合并成一个单元格// @OnceAbsoluteMerge(firstRowIndex = 5, lastRowIndex = 6, firstColumnIndex = 1, lastColumnIndex = 2)public class DemoMergeData { // 这一列 每隔2行 合并单元格 @ContentLoopMerge(eachRow = 2) @ExcelProperty(\"字符串标题\") private String string; @ExcelProperty(\"日期标题\") private Date date; @ExcelProperty(\"数字标题\") private Double doubleData;} 方法2参照：对象 代码​ /** * 合并单元格 * <p> * 1. 创建excel对应的实体对象 参照{@link DemoData} {@link DemoMergeData} * <p> * 2. 创建一个merge策略 并注册 * <p> * 3. 直接写即可 * * @since 2.2.0-beta1 */ @Test public void mergeWrite() { // 方法1 注解 String fileName = TestFileUtil.getPath() + \"mergeWrite\" + System.currentTimeMillis() + \".xlsx\"; // 在DemoStyleData里面加上ContentLoopMerge注解 // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, DemoMergeData.class).sheet(\"模板\").doWrite(data()); // 方法2 自定义合并单元格策略 fileName = TestFileUtil.getPath() + \"mergeWrite\" + System.currentTimeMillis() + \".xlsx\"; // 每隔2行会合并 把eachColumn 设置成 3 也就是我们数据的长度，所以就第一列会合并。当然其他合并策略也可以自己写 LoopMergeStrategy loopMergeStrategy = new LoopMergeStrategy(2, 0); // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, DemoData.class).registerWriteHandler(loopMergeStrategy).sheet(\"模板\").doWrite(data()); }","s":"合并单元格","u":"/docs/3.x/quickstart/write","h":"#合并单元格","p":181},{"i":212,"t":"excel示例​ 对象​ 参照：对象 代码​ /** * 使用table去写入 * <p>1. 创建excel对应的实体对象 参照{@link DemoData} * <p>2. 然后写入table即可 */ @Test public void tableWrite() { String fileName = TestFileUtil.getPath() + \"tableWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里直接写多个table的案例了，如果只有一个 也可以直一行代码搞定，参照其他案例 // 这里 需要指定写用哪个class去写 ExcelWriter excelWriter = null; try { excelWriter = EasyExcel.write(fileName, DemoData.class).build(); // 把sheet设置为不需要头 不然会输出sheet的头 这样看起来第一个table 就有2个头了 WriteSheet writeSheet = EasyExcel.writerSheet(\"模板\").needHead(Boolean.FALSE).build(); // 这里必须指定需要头，table 会继承sheet的配置，sheet配置了不需要，table 默认也是不需要 WriteTable writeTable0 = EasyExcel.writerTable(0).needHead(Boolean.TRUE).build(); WriteTable writeTable1 = EasyExcel.writerTable(1).needHead(Boolean.TRUE).build(); // 第一次写入会创建头 excelWriter.write(data(), writeSheet, writeTable0); // 第二次写如也会创建头，然后在第一次的后面写入数据 excelWriter.write(data(), writeSheet, writeTable1); } finally { // 千万别忘记finish 会帮忙关闭流 if (excelWriter != null) { excelWriter.finish(); } } }","s":"使用table去写入","u":"/docs/3.x/quickstart/write","h":"#使用table去写入","p":181},{"i":214,"t":"excel示例​ 对象​ 参照：对象 代码​ /** * 动态头，实时生成头写入 * <p> * 思路是这样子的，先创建List<String>头格式的sheet仅仅写入头,然后通过table 不写入头的方式 去写入数据 * * <p> * 1. 创建excel对应的实体对象 参照{@link DemoData} * <p> * 2. 然后写入table即可 */ @Test public void dynamicHeadWrite() { String fileName = TestFileUtil.getPath() + \"dynamicHeadWrite\" + System.currentTimeMillis() + \".xlsx\"; EasyExcel.write(fileName) // 这里放入动态头 .head(head()).sheet(\"模板\") // 当然这里数据也可以用 List<List<String>> 去传入 .doWrite(data()); } private List<List<String>> head() { List<List<String>> list = new ArrayList<List<String>>(); List<String> head0 = new ArrayList<String>(); head0.add(\"字符串\" + System.currentTimeMillis()); List<String> head1 = new ArrayList<String>(); head1.add(\"数字\" + System.currentTimeMillis()); List<String> head2 = new ArrayList<String>(); head2.add(\"日期\" + System.currentTimeMillis()); list.add(head0); list.add(head1); list.add(head2); return list; }","s":"动态头，实时生成头写入","u":"/docs/3.x/quickstart/write","h":"#动态头实时生成头写入","p":181},{"i":216,"t":"excel示例​ 对象​ @Getter@Setter@EqualsAndHashCodepublic class LongestMatchColumnWidthData { @ExcelProperty(\"字符串标题\") private String string; @ExcelProperty(\"日期标题很长日期标题很长日期标题很长很长\") private Date date; @ExcelProperty(\"数字\") private Double doubleData;} 代码​ /** * 自动列宽(不太精确) * <p> * 这个目前不是很好用，比如有数字就会导致换行。而且长度也不是刚好和实际长度一致。 所以需要精确到刚好列宽的慎用。 当然也可以自己参照 * {@link LongestMatchColumnWidthStyleStrategy}重新实现. * <p> * poi 自带{@link SXSSFSheet#autoSizeColumn(int)} 对中文支持也不太好。目前没找到很好的算法。 有的话可以推荐下。 * * <p> * 1. 创建excel对应的实体对象 参照{@link LongestMatchColumnWidthData} * <p> * 2. 注册策略{@link LongestMatchColumnWidthStyleStrategy} * <p> * 3. 直接写即可 */ @Test public void longestMatchColumnWidthWrite() { String fileName = TestFileUtil.getPath() + \"longestMatchColumnWidthWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, LongestMatchColumnWidthData.class) .registerWriteHandler(new LongestMatchColumnWidthStyleStrategy()).sheet(\"模板\").doWrite(dataLong()); } private List<LongestMatchColumnWidthData> dataLong() { List<LongestMatchColumnWidthData> list = new ArrayList<LongestMatchColumnWidthData>(); for (int i = 0; i < 10; i++) { LongestMatchColumnWidthData data = new LongestMatchColumnWidthData(); data.setString(\"测试很长的字符串测试很长的字符串测试很长的字符串\" + i); data.setDate(new Date()); data.setDoubleData(1000000000000.0); list.add(data); } return list; }","s":"自动列宽(不太精确)","u":"/docs/3.x/quickstart/write","h":"#自动列宽不太精确","p":181},{"i":218,"t":"excel示例​ 对象​ 参照：对象 定义拦截器​ /** * 自定义拦截器。对第一行第一列的头超链接到:https://github.com/alibaba/easyexcel * * @author Jiaju Zhuang */@Slf4jpublic class CustomCellWriteHandler implements CellWriteHandler { @Override public void afterCellDispose(CellWriteHandlerContext context) { Cell cell = context.getCell(); // 这里可以对cell进行任何操作 log.info(\"第{}行，第{}列写入完成。\", cell.getRowIndex(), cell.getColumnIndex()); if (BooleanUtils.isTrue(context.getHead()) && cell.getColumnIndex() == 0) { CreationHelper createHelper = context.getWriteSheetHolder().getSheet().getWorkbook().getCreationHelper(); Hyperlink hyperlink = createHelper.createHyperlink(HyperlinkType.URL); hyperlink.setAddress(\"https://github.com/alibaba/easyexcel\"); cell.setHyperlink(hyperlink); } }} /** * 自定义拦截器.对第一列第一行和第二行的数据新增下拉框，显示 测试1 测试2 * * @author Jiaju Zhuang */@Slf4jpublic class CustomSheetWriteHandler implements SheetWriteHandler { @Override public void afterSheetCreate(SheetWriteHandlerContext context) { log.info(\"第{}个Sheet写入成功。\", context.getWriteSheetHolder().getSheetNo()); // 区间设置 第一列第一行和第二行的数据。由于第一行是头，所以第一、二行的数据实际上是第二三行 CellRangeAddressList cellRangeAddressList = new CellRangeAddressList(1, 2, 0, 0); DataValidationHelper helper = context.getWriteSheetHolder().getSheet().getDataValidationHelper(); DataValidationConstraint constraint = helper.createExplicitListConstraint(new String[] {\"测试1\", \"测试2\"}); DataValidation dataValidation = helper.createValidation(constraint, cellRangeAddressList); context.getWriteSheetHolder().getSheet().addValidationData(dataValidation); }} 代码​ /** * 下拉，超链接等自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个） * <p> * demo这里实现2点。1. 对第一行第一列的头超链接到:https://github.com/alibaba/easyexcel 2. 对第一列第一行和第二行的数据新增下拉框，显示 测试1 测试2 * <p> * 1. 创建excel对应的实体对象 参照{@link DemoData} * <p> * 2. 注册拦截器 {@link CustomCellWriteHandler} {@link CustomSheetWriteHandler} * <p> * 2. 直接写即可 */ @Test public void customHandlerWrite() { String fileName = TestFileUtil.getPath() + \"customHandlerWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, DemoData.class).registerWriteHandler(new CustomSheetWriteHandler()) .registerWriteHandler(new CustomCellWriteHandler()).sheet(\"模板\").doWrite(data()); }","s":"自定义拦截器（上面几点都不符合但是要对单元格进行操作的参照这个）","u":"/docs/3.x/quickstart/write","h":"#自定义拦截器上面几点都不符合但是要对单元格进行操作的参照这个","p":181},{"i":220,"t":"excel示例​ 对象​ 参照：对象 定义拦截器​ /** * 自定义拦截器.新增注释,第一行头加批注 * * @author Jiaju Zhuang */@Slf4jpublic class CommentWriteHandler implements RowWriteHandler { @Override public void afterRowDispose(RowWriteHandlerContext context) { if (BooleanUtils.isTrue(context.getHead())) { Sheet sheet = context.getWriteSheetHolder().getSheet(); Drawing<?> drawingPatriarch = sheet.createDrawingPatriarch(); // 在第一行 第二列创建一个批注 Comment comment = drawingPatriarch.createCellComment(new XSSFClientAnchor(0, 0, 0, 0, (short)1, 0, (short)2, 1)); // 输入批注信息 comment.setString(new XSSFRichTextString(\"创建批注!\")); // 将批注添加到单元格对象中 sheet.getRow(0).getCell(1).setCellComment(comment); } }} 代码​ /** * 插入批注 * <p> * 1. 创建excel对应的实体对象 参照{@link DemoData} * <p> * 2. 注册拦截器 {@link CommentWriteHandler} * <p> * 2. 直接写即可 */ @Test public void commentWrite() { String fileName = TestFileUtil.getPath() + \"commentWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 // 这里要注意inMemory 要设置为true，才能支持批注。目前没有好的办法解决 不在内存处理批注。这个需要自己选择。 EasyExcel.write(fileName, DemoData.class).inMemory(Boolean.TRUE).registerWriteHandler(new CommentWriteHandler()) .sheet(\"模板\").doWrite(data()); }","s":"插入批注","u":"/docs/3.x/quickstart/write","h":"#插入批注","p":181},{"i":222,"t":"excel示例​ 对象​ @Getter@Setter@EqualsAndHashCodepublic class ConverterData { /** * 我想所有的 字符串起前面加上\"自定义：\"三个字 */ @ExcelProperty(value = \"字符串标题\", converter = CustomStringStringConverter.class) private String string; /** * 我想写到excel 用年月日的格式 */ @DateTimeFormat(\"yyyy年MM月dd日HH时mm分ss秒\") @ExcelProperty(\"日期标题\") private Date date; /** * 我想写到excel 用百分比表示 */ @NumberFormat(\"#.##%\") @ExcelProperty(value = \"数字标题\") private Double doubleData;}@Datapublic class ConverterData { /** * 我想所有的 字符串起前面加上\"自定义：\"三个字 */ @ExcelProperty(value = \"字符串标题\", converter = CustomStringStringConverter.class) private String string; /** * 我想写到excel 用年月日的格式 */ @DateTimeFormat(\"yyyy年MM月dd日HH时mm分ss秒\") @ExcelProperty(\"日期标题\") private Date date; /** * 我想写到excel 用百分比表示 */ @NumberFormat(\"#.##%\") @ExcelProperty(value = \"数字标题\") private Double doubleData;} 代码​ /** * 可变标题处理(包括标题国际化等) * <p> * 简单的说用List<List<String>>的标题 但是还支持注解 * <p> * 1. 创建excel对应的实体对象 参照{@link ConverterData} * <p> * 2. 直接写即可 */ @Test public void variableTitleWrite() { // 写法1 String fileName = TestFileUtil.getPath() + \"variableTitleWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName, ConverterData.class).head(variableTitleHead()).sheet(\"模板\").doWrite(data()); } private List<List<String>> variableTitleHead() { List<List<String>> list = ListUtils.newArrayList(); List<String> head0 = ListUtils.newArrayList(); head0.add(\"string\" + System.currentTimeMillis()); List<String> head1 = ListUtils.newArrayList(); head1.add(\"number\" + System.currentTimeMillis()); List<String> head2 = ListUtils.newArrayList(); head2.add(\"date\" + System.currentTimeMillis()); list.add(head0); list.add(head1); list.add(head2); return list; } private List<List<String>> variableTitleHead() { List<List<String>> list = new ArrayList<>(); List<String> head0 = new ArrayList<>(); head0.add(\"string\" + System.currentTimeMillis()); List<String> head1 = new ArrayList<>(); head1.add(\"number\" + System.currentTimeMillis()); List<String> head2 = new ArrayList<>(); head2.add(\"date\" + System.currentTimeMillis()); list.add(head0); list.add(head1); list.add(head2); return list; }","s":"可变标题处理(包括标题国际化等)","u":"/docs/3.x/quickstart/write","h":"#可变标题处理包括标题国际化等","p":181},{"i":225,"t":"excel示例​ 代码​ /** * 不创建对象的写 */ @Test public void noModelWrite() { // 写法1 String fileName = TestFileUtil.getPath() + \"noModelWrite\" + System.currentTimeMillis() + \".xlsx\"; // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭 EasyExcel.write(fileName).head(head()).sheet(\"模板\").doWrite(dataList()); } private List<List<String>> head() { List<List<String>> list = ListUtils.newArrayList(); List<String> head0 = ListUtils.newArrayList(); head0.add(\"字符串\" + System.currentTimeMillis()); List<String> head1 = ListUtils.newArrayList(); head1.add(\"数字\" + System.currentTimeMillis()); List<String> head2 = ListUtils.newArrayList(); head2.add(\"日期\" + System.currentTimeMillis()); list.add(head0); list.add(head1); list.add(head2); return list; } private List<List<Object>> dataList() { List<List<Object>> list = ListUtils.newArrayList(); for (int i = 0; i < 10; i++) { List<Object> data = ListUtils.newArrayList(); data.add(\"字符串\" + i); data.add(new Date()); data.add(0.56); list.add(data); } return list; }","s":"不创建对象的写","u":"/docs/3.x/quickstart/write","h":"#不创建对象的写","p":181},{"i":227,"t":"示例代码​ DEMO代码地址：https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/web/WebTest.java 对象​ 参照：对象 就是名称变了下 代码​ /** * 文件下载（失败了会返回一个有部分数据的Excel） * <p> * 1. 创建excel对应的实体对象 参照{@link DownloadData} * <p> * 2. 设置返回的 参数 * <p> * 3. 直接写，这里注意，finish的时候会自动关闭OutputStream,当然你外面再关闭流问题不大 */ @GetMapping(\"download\") public void download(HttpServletResponse response) throws IOException { // 这里注意 有同学反应使用swagger 会导致各种问题，请直接用浏览器或者用postman response.setContentType(\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"); response.setCharacterEncoding(\"utf-8\"); // 这里URLEncoder.encode可以防止中文乱码 当然和easyexcel没有关系 String fileName = URLEncoder.encode(\"测试\", \"UTF-8\").replaceAll(\"\\\\+\", \"%20\"); response.setHeader(\"Content-disposition\", \"attachment;filename*=utf-8''\" + fileName + \".xlsx\"); EasyExcel.write(response.getOutputStream(), DownloadData.class).sheet(\"模板\").doWrite(data()); }","s":"web中的写","u":"/docs/3.x/quickstart/write","h":"#web中的写","p":181},{"i":229,"t":"since​ 2.1.1 对象​ 参照：对象 就是名称变了下 代码​ /** * 文件下载并且失败的时候返回json（默认失败了会返回一个有部分数据的Excel） * * @since 2.1.1 */ @GetMapping(\"downloadFailedUsingJson\") public void downloadFailedUsingJson(HttpServletResponse response) throws IOException { // 这里注意 有同学反应使用swagger 会导致各种问题，请直接用浏览器或者用postman try { response.setContentType(\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"); response.setCharacterEncoding(\"utf-8\"); // 这里URLEncoder.encode可以防止中文乱码 当然和easyexcel没有关系 String fileName = URLEncoder.encode(\"测试\", \"UTF-8\").replaceAll(\"\\\\+\", \"%20\"); response.setHeader(\"Content-disposition\", \"attachment;filename*=utf-8''\" + fileName + \".xlsx\"); // 这里需要设置不关闭流 EasyExcel.write(response.getOutputStream(), DownloadData.class).autoCloseStream(Boolean.FALSE).sheet(\"模板\") .doWrite(data()); } catch (Exception e) { // 重置response response.reset(); response.setContentType(\"application/json\"); response.setCharacterEncoding(\"utf-8\"); Map<String, String> map = MapUtils.newHashMap(); map.put(\"status\", \"failure\"); map.put(\"message\", \"下载文件失败\" + e.getMessage()); response.getWriter().println(JSON.toJSONString(map)); } }","s":"web中的写并且失败的时候返回json","u":"/docs/3.x/quickstart/write","h":"#web中的写并且失败的时候返回json","p":181}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/3",[0,6.654,1,7.146,2,6.654,3,6.654,4,6.654,5,5.516,6,5.516,7,5.516,8,5.516,9,5.516,10,5.516,11,5.516,12,5.516,13,5.516,14,5.516,15,5.516,16,5.516,17,5.516]],["t/5",[0,7.459,1,7.744,2,7.459,3,7.459,4,7.459,5,6.718,6,6.718,7,6.718,8,6.718,9,6.718,10,6.718,11,6.718,12,6.718,13,6.718,14,6.718,15,6.718,16,6.718,17,6.718,18,1.914,19,1.914,20,1.914,21,3.186,22,3.186,23,1.914,24,0.094,25,1.914,26,1.201,27,1.914,28,1.914,29,0.659,30,1.914]],["t/7",[24,0.212,31,3.674]],["t/9",[24,0.185,32,5.549,33,5.549,34,5.549,35,5.549,36,5.549,37,5.549,38,5.549,39,5.549,40,1.062,41,5.549,42,1.062,43,5.549,44,1.424,45,5.549,46,4.158,47,5.549,48,3.767,49,5.549,50,4.693,51,5.549,52,5.549,53,5.549]],["t/11",[54,6.404]],["t/13",[24,0.238,42,1.184,44,1.588,55,6.188,56,6.188]],["t/15",[24,0.267,42,1.316,44,1.497,57,5.832,58,5.832,59,5.832]],["t/17",[60,7.148,61,6.23,62,6.23,63,6.23]],["t/20",[64,6.404]],["t/22",[24,0.267,31,3.458,65,5.985,66,5.985]],["t/24",[24,0.272,31,1.705,67,0.698,68,2.496,69,2.572,70,0.892,71,1.067,72,2.572,73,1.849,74,2.004,75,2.467,76,0.447,77,0.474,78,0.462,79,2.496,80,0.474,81,0.511,82,0.447,83,0.834,84,0.795,85,1.25,86,1.402,87,1.25,88,1.59,89,0.878,90,2.496,91,2.496,92,2.952,93,2.496,94,2.496,95,0.565,96,0.754,97,2.952,98,2.496,99,2.496,100,0.757,101,2.496,102,2.952,103,2.212,104,2.496,105,2.496,106,2.496,107,2.496,108,2.212,109,2.522,110,2.964,111,2.212,112,2.212,113,2.952,114,2.212,115,3.272,116,3.272,117,2.212,118,2.212,119,2.212,120,2.952,121,2.212,122,2.496,123,2.496,124,2.496,125,2.496,126,2.496,127,2.496,128,2.212,129,2.496,130,2.496,131,2.496,132,1.402,133,2.496]],["t/26",[24,0.241,67,0.646]],["t/28",[134,6.404]],["t/30",[24,0.272,40,0.709,42,0.709,76,0.379,77,0.306,78,0.33,80,0.487,81,0.457,82,0.604,83,1.047,84,1.384,89,1.034,95,0.983,96,0.888,135,2.595,136,1.339,137,0.863,138,6.372,139,1.514,140,3.134,141,1.486,142,3.134,143,1.6,144,5.901,145,1.996,146,1.996,147,3.705,148,2.061,149,3.705,150,3.705,151,3.705,152,2.969,153,2.14,154,3.204,155,2.31,156,3.705,157,3.705,158,3.705,159,3.705]],["t/32",[24,0.274,29,1.911,40,0.661,42,0.661,44,0.886,76,0.353,77,0.285,78,0.307,80,0.404,81,0.505,82,0.632,83,0.976,84,1.317,95,1.087,96,0.981,100,0.886,132,1.64,135,2.47,145,1.86,146,1.86,148,1.962,160,6.179,161,3.453,162,3.453,163,2.921,164,1.995,165,1.64,166,3.453,167,3.453,168,1.385,169,2.47,170,2.153,171,3.119,172,2.153,173,3.321,174,1.743]],["t/34",[24,0.273,29,1.991,76,0.375,77,0.302,78,0.326,80,0.421,81,0.326,82,0.522,83,1.034,84,1.372,89,0.736,95,0.7,96,0.632,135,2.573,145,1.972,146,1.972,152,2.115,153,2.115,154,3.177,155,2.282,169,2.573,170,2.282,171,3.365,172,2.282,173,3.46,174,1.848,175,5.096,176,3.661,177,5.096,178,3.661,179,3.661,180,2.743,181,3.661,182,3.661,183,4.75,184,3.661,185,2.485,186,2.485,187,3.661,188,3.661,189,2.485]],["t/36",[24,0.273,29,2.626,67,0.346,76,0.346,77,0.279,78,0.3,80,0.397,81,0.3,82,0.493,83,0.954,84,1.296,89,1.129,94,2.856,95,0.646,96,0.583,135,2.431,145,1.819,146,2.594,152,1.951,153,1.951,154,3.002,155,2.105,169,2.431,170,2.105,171,3.394,172,2.105,173,3.269,174,1.705,185,2.292,186,2.292,189,2.292,190,0.787,191,3.377,192,4.815,193,3.377,194,2.292,195,3.377,196,2.856,197,2.292,198,3.377,199,2.856,200,3.377,201,5.611,202,3.377,203,3.377]],["t/38",[24,0.272,29,1.561,76,0.409,77,0.33,78,0.356,80,0.447,81,0.356,82,0.554,83,1.129,84,1.457,89,0.804,95,0.765,96,0.69,135,2.733,145,2.153,146,2.153,152,2.309,153,2.309,154,3.375,155,2.492,169,2.733,170,2.492,171,3.471,172,2.492,173,3.675,174,2.018,183,4.929,185,2.713,186,2.713,189,2.713,204,5.413,205,3.997,206,3.38]],["t/40",[24,0.271,29,2.247,76,0.362,77,0.292,78,0.314,80,0.41,81,0.314,82,0.509,83,0.998,84,1.339,89,0.711,95,0.676,96,0.61,145,1.904,146,1.904,152,2.041,153,2.041,154,3.1,155,2.203,165,2.361,168,2.737,169,2.51,170,2.203,171,3.673,172,2.203,174,1.784,183,4.677,185,2.399,186,2.399,189,2.399,206,2.988,207,3.1,208,4.972,209,3.533,210,3.533,211,3.533,212,6.823,213,4.972,214,4.972,215,4.972]],["t/42",[24,0.241,67,0.646]],["t/44",[68,5.417]],["t/46",[24,0.274,29,1.423,40,0.327,42,0.543,44,0.729,46,1.281,67,0.291,70,0.441,71,1.534,73,0.724,74,3.654,76,0.175,77,0.498,78,0.501,79,1.446,80,0.301,81,0.378,82,0.434,83,1.199,84,1.142,85,1.797,86,1.73,87,1.797,88,2.286,89,0.947,90,1.446,136,0.618,137,0.849,139,1.5,141,0.686,143,0.884,148,1.139,164,0.988,165,0.812,168,1.461,190,0.849,216,0.651,217,1.71,218,0.988,219,2.84,220,1.446,221,2.402,222,2.105,223,1.771,224,3.589,225,2.84,226,2.128,227,3.589,228,3.589,229,1.71,230,5.635,231,1.71,232,1.71,233,2.881,234,1.71,235,1.71,236,1.71,237,1.71,238,1.71,239,1.71,240,1.71,241,2.412,242,2.015,243,2.84,244,1.771,245,3.356,246,1.281,247,2.402,248,1.71,249,3.589,250,4.296,251,2.128,252,1.71,253,1.71,254,1.71,255,1.71,256,1.71,257,1.71,258,1.71,259,1.446,260,1.71,261,2.402,262,1.71,263,1.71,264,3.589,265,1.641,266,0.921,267,1.446,268,2.402,269,1.71,270,1.71,271,1.446]],["t/48",[24,0.272,42,0.796,67,0.569,69,1.863,70,0.647,72,1.863,73,1.762,75,1.975,76,0.426,77,0.343,78,0.37,80,0.517,81,0.37,82,0.426,83,1.175,84,1.12,85,1.762,87,1.762,89,0.837,136,1.504,137,0.969,139,1.607,140,3.519,141,1.669,143,1.731,148,1.669,216,1.583,272,5.561,273,3.519,274,4.16,275,4.16,276,2.384,277,4.16,278,4.16,279,4.16,280,4.16,281,4.16]],["t/50",[24,0.272,40,0.692,42,0.692,44,0.928,67,0.596,70,0.562,71,1.307,73,1.532,74,2.456,76,0.37,77,0.299,78,0.322,80,0.299,81,0.45,82,0.517,83,1.428,84,1.361,85,2.14,87,1.532,88,1.949,89,0.728,148,2.027,190,1.357,222,2.09,264,5.334,265,2.92,266,1.949,267,4.275,268,4.275,271,3.059,282,3.617,283,3.617,284,3.617,285,3.617,286,3.617,287,3.617,288,2.71,289,5.054,290,3.617,291,3.617,292,5.054,293,3.617,294,3.617,295,3.617,296,3.617,297,3.617]],["t/52",[24,0.273,67,0.538,69,1.348,70,0.688,72,1.348,73,1.275,75,1.429,76,0.308,77,0.533,78,0.268,80,0.551,81,0.268,82,0.308,83,0.85,84,0.81,85,1.275,86,1.429,87,1.275,89,0.891,132,3.068,136,1.088,137,1.225,139,1.349,143,0.937,148,1.207,190,0.701,216,1.145,218,1.739,233,2.043,241,2.496,242,2.752,261,2.546,276,1.145,298,2.255,299,2.546,300,2.255,301,2.255,302,3.319,303,4.43,304,3.01,305,3.01,306,3.01,307,3.01,308,3.01,309,3.01,310,3.01,311,3.01,312,2.043,313,3.01,314,3.01,315,3.01,316,3.01,317,2.546,318,4.43,319,3.01,320,3.01,321,3.01,322,3.01,323,2.043,324,3.01]],["t/54",[24,0.27,40,0.885,67,0.675,69,2.071,70,0.718,71,1.671,72,2.071,73,1.958,74,3.139,75,2.195,76,0.473,77,0.382,78,0.411,80,0.382,81,0.411,82,0.473,83,1.306,84,1.245,85,1.958,86,2.195,87,1.958,88,2.491,89,0.93,325,5.96,326,4.623,327,4.623,328,4.623,329,4.623,330,4.623,331,4.623,332,4.623]],["t/56",[24,0.272,29,2.276,67,0.596,71,1.614,76,0.457,77,0.369,78,0.397,80,0.535,81,0.397,82,0.457,83,1.262,84,1.202,85,1.891,86,2.12,168,2.337,226,3.346,246,4.366,333,4.465,334,3.633,335,4.465,336,5.827,337,4.465,338,3.777,339,5.827,340,4.465,341,4.465]],["t/58",[24,0.272,40,1.018,42,1.018,44,0.999,67,0.62,70,0.605,71,1.408,73,1.649,76,0.399,77,0.439,78,0.473,80,0.321,81,0.347,82,0.399,83,1.1,84,1.049,85,1.649,86,1.849,87,1.649,88,2.098,89,0.783,190,1.411,218,2.25,233,3.611,241,2.876,242,1.849,244,2.428,245,2.428,342,3.294,343,5.319,344,3.895,345,3.895,346,3.895,347,3.895,348,3.895,349,3.294,350,3.895,351,3.895,352,3.294,353,3.895,354,3.895]],["t/60",[24,0.271,26,2.128,40,0.572,42,0.572,44,0.767,67,0.451,70,0.465,73,1.266,76,0.306,77,0.477,78,0.514,80,0.432,81,0.266,82,0.306,83,0.845,84,0.805,86,1.42,87,1.266,89,0.601,136,1.081,137,1.027,139,1.131,165,1.42,168,1.199,190,1.346,207,1.864,218,1.727,241,2.486,242,2.486,244,2.748,245,3.264,251,2.241,355,2.99,356,4.408,357,2.99,358,2.99,359,4.408,360,2.03,361,5.236,362,2.99,363,2.99,364,2.99,365,2.99,366,2.99,367,2.99,368,5.236,369,2.99,370,4.408,371,4.408,372,5.236,373,5.236,374,3.303,375,2.99,376,2.99,377,2.99,378,4.408,379,4.408,380,4.408,381,4.408,382,4.408,383,2.99,384,2.529,385,2.99,386,2.529,387,2.99,388,2.99,389,2.99,390,2.99,391,2.99,392,2.99]],["t/62",[24,0.272,40,0.775,42,0.775,44,1.039,67,0.633,70,0.629,73,1.715,76,0.415,77,0.334,78,0.36,80,0.451,81,0.36,82,0.415,83,1.144,84,1.09,86,1.923,87,1.715,89,0.815,136,1.464,137,0.944,139,1.697,142,4.619,143,1.261,190,1.44,207,2.525,216,1.541,352,3.425,386,3.425,393,5.462,394,5.462,395,4.05,396,4.05,397,4.05,398,4.05,399,4.05,400,4.05,401,4.05]],["t/64",[24,0.273,40,0.692,42,0.692,44,0.928,67,0.596,70,0.562,73,1.532,76,0.37,77,0.417,78,0.45,80,0.299,81,0.322,82,0.37,83,1.022,84,0.974,85,1.532,86,1.718,87,1.532,89,0.728,109,2.09,136,1.307,137,0.843,139,0.928,143,1.573,190,1.357,233,3.431,241,2.4,242,1.718,244,2.255,342,3.059,402,5.054,403,3.617,404,4.725,405,3.617,406,5.054,407,3.617,408,3.617,409,5.825,410,3.617,411,3.617,412,3.617,413,3.617,414,3.617,415,3.617,416,3.617,417,3.617]],["t/66",[24,0.271,48,2.578,67,0.535,76,0.389,77,0.493,78,0.573,80,0.532,81,0.338,82,0.389,83,1.073,84,1.022,85,1.608,87,1.608,89,0.764,137,0.885,139,1.534,148,1.523,168,1.523,220,3.212,221,3.212,222,2.194,223,2.368,224,4.421,227,4.421,228,4.421,241,2.482,242,2.482,244,2.368,245,4.015,246,2.845,247,3.212,249,4.421,250,5.056,251,2.845,334,2.368,338,3.212,349,3.212,360,2.578,418,3.798,419,3.798,420,3.798,421,3.798,422,3.798]],["t/68",[24,0.27,40,0.917,42,0.917,44,1.23,67,0.687,70,0.745,73,2.03,77,0.396,80,0.396,89,0.964,103,3.591,109,2.769,110,3.254,123,4.054,124,4.054,125,4.054,126,4.054,127,4.054,128,3.591,129,4.054,130,4.054,131,4.054,132,2.276,133,4.054,190,1.563]],["t/70",[24,0.241,67,0.646]],["t/72",[91,5.417]],["t/74",[24,0.273,40,0.869,42,0.869,44,0.799,67,0.465,70,0.484,71,1.641,76,0.319,77,0.257,78,0.277,80,0.486,81,0.477,82,0.549,88,1.677,93,4.982,95,1.025,96,0.926,98,3.839,99,3.839,100,1.375,101,2.632,132,1.478,136,1.125,137,1.058,139,1.511,141,1.248,143,1.413,148,1.248,163,2.632,164,1.798,165,1.478,168,1.248,169,2.974,171,2.705,174,1.571,190,1.058,216,1.184,222,1.798,265,2.623,266,1.677,276,2.039,334,1.94,423,3.112,424,3.112,425,3.112,426,1.56,427,3.112,428,2.332,429,2.632,430,2.332]],["t/76",[24,0.273,40,0.755,42,0.755,44,1.012,67,0.549,70,0.613,71,1.426,76,0.404,77,0.326,78,0.351,80,0.326,81,0.477,82,0.549,89,1.079,95,1.027,96,0.927,100,1.377,135,1.992,143,1.67,190,1.421,426,1.844,431,6.097,432,3.945,433,5.365,434,3.945,435,5.365,436,3.945,437,3.945,438,3.643,439,3.945,440,3.945,441,3.945]],["t/78",[24,0.272,40,0.8,44,1.431,67,0.571,69,1.872,70,0.867,72,1.872,75,1.985,76,0.428,77,0.345,78,0.372,80,0.518,81,0.372,82,0.428,95,0.8,96,0.722,100,1.072,136,1.511,137,0.974,139,1.611,141,1.676,143,1.737,216,1.59,273,5.31,276,1.59,426,1.436,442,4.718,443,4.705,444,2.11,445,5.578,446,4.179]],["t/80",[24,0.27,67,0.602,69,2.03,70,0.914,72,2.03,75,2.152,76,0.464,77,0.374,78,0.403,80,0.539,81,0.403,82,0.464,95,0.867,96,0.783,100,1.163,136,1.638,137,1.056,139,1.676,141,1.818,143,1.832,216,1.724,276,2.631,426,1.557,447,4.976,448,5.883,449,4.532]],["t/82",[24,0.274,40,0.734,42,0.734,44,0.984,48,3.178,67,0.393,70,0.596,76,0.254,77,0.205,78,0.221,80,0.205,81,0.417,82,0.479,95,0.896,96,0.809,100,0.984,137,0.894,148,2.111,168,2.41,169,3.265,171,3.482,174,2.364,190,1.091,222,2.705,223,2.919,226,3.508,265,3.04,266,2.522,276,0.946,334,2.919,428,2.874,429,2.103,430,3.508,444,2.364,447,2.103,450,5.263,451,3.835,452,3.835,453,2.486,454,3.835,455,2.486,456,2.486,457,2.486,458,2.486]],["t/84",[24,0.272,67,0.678,69,1.822,70,0.851,72,1.822,75,1.932,76,0.416,77,0.336,78,0.362,80,0.511,81,0.362,82,0.416,95,0.778,96,0.703,100,1.044,136,1.47,137,0.948,139,1.589,141,1.632,143,1.705,216,1.548,276,1.548,298,4.105,300,3.048,301,3.048,302,4.105,317,3.44,323,2.762,426,1.398,443,4.105,459,4.068,460,5.478,461,4.068]],["t/86",[24,0.274,29,0.95,40,0.466,42,0.884,44,0.624,67,0.386,70,0.378,76,0.249,77,0.201,78,0.217,80,0.465,81,0.217,82,0.386,84,0.655,89,1.132,95,0.466,96,0.42,100,0.624,109,1.406,128,2.826,135,1.228,137,0.567,139,1.528,164,1.406,165,1.155,190,0.879,266,1.311,299,2.058,312,2.561,323,1.652,404,1.823,444,1.228,462,2.433,463,2.433,464,5.63,465,5.203,466,2.433,467,2.433,468,2.433,469,2.433,470,5.203,471,3.772,472,2.433,473,3.772,474,2.433,475,2.433,476,2.433,477,5.63,478,2.433,479,1.823,480,2.433,481,2.433,482,2.433,483,2.433,484,2.433,485,2.433,486,2.433,487,2.433,488,2.433,489,2.433,490,2.433,491,2.433,492,2.433,493,1.823,494,5.63,495,3.772,496,3.772,497,3.772,498,3.772,499,2.433,500,2.433,501,3.772,502,2.433,503,3.772,504,2.433,505,2.433,506,2.433,507,2.433,508,2.433,509,2.433,510,2.433,511,2.433]],["t/88",[24,0.273,26,1.691,40,0.455,42,1.065,46,2.775,67,0.379,70,0.369,76,0.243,77,0.196,78,0.211,80,0.196,81,0.211,82,0.243,89,1.428,95,0.455,96,0.41,100,0.61,136,0.859,137,0.554,139,1.429,164,3.408,165,2.801,168,0.953,190,0.863,312,3.78,374,2.775,493,1.781,512,5.569,513,6.692,514,5.137,515,5.137,516,4.345,517,2.376,518,3.703,519,2.376,520,4.55,521,2.376,522,2.376,523,2.376,524,2.376,525,2.376,526,2.376,527,1.613,528,2.376,529,5.137,530,2.376,531,2.376,532,2.376,533,2.376,534,2.376,535,2.376,536,2.376,537,2.376,538,2.376,539,2.376,540,2.376,541,2.01,542,1.781,543,2.376,544,2.376,545,2.376,546,2.376,547,2.376,548,2.376,549,2.376,550,5.21,551,2.376,552,2.376,553,2.376,554,2.376,555,2.376,556,2.376,557,2.376]],["t/90",[24,0.271,67,0.674,69,2.06,70,0.923,72,2.06,75,2.184,76,0.471,77,0.38,78,0.409,80,0.49,81,0.409,82,0.608,83,1.3,84,1.238,85,1.948,95,0.88,96,0.795,100,1.18,145,2.478,276,1.75,426,1.581,442,3.891,558,4.6,559,4.6,560,5.941,561,4.6]],["t/92",[24,0.27,67,0.595,69,1.99,70,0.903,72,1.99,75,2.11,76,0.455,77,0.367,78,0.395,80,0.534,81,0.395,82,0.455,95,0.85,96,0.768,100,1.14,137,1.035,139,1.66,141,1.782,143,1.808,216,1.691,276,2.463,426,1.527,562,4.443,563,5.809,564,4.443,565,4.443,566,4.443,567,4.443,568,4.443,569,5.809,570,4.443]],["t/94",[24,0.272,40,0.54,44,0.725,67,0.432,70,0.439,76,0.289,77,0.233,78,0.251,80,0.497,81,0.251,82,0.289,95,0.54,96,0.488,100,0.725,137,0.984,139,1.62,141,1.695,143,1.749,165,2.006,168,1.133,190,0.984,207,2.634,216,1.608,276,2.402,426,0.97,527,1.917,542,4.21,571,2.388,572,4.225,573,5.619,574,6.728,575,3.166,576,4.225,577,4.73,578,4.225,579,4.225,580,4.225,581,4.225,582,5.062,583,4.225,584,4.225,585,4.225,586,4.225,587,5.619,588,4.225,589,4.225,590,4.225,591,4.225,592,2.116,593,2.116,594,4.225,595,2.824]],["t/96",[24,0.274,31,1.185,40,0.631,42,0.631,44,0.846,67,0.337,70,0.319,71,0.741,76,0.21,77,0.341,78,0.368,80,0.169,81,0.368,82,0.423,88,2.226,89,1.043,95,0.791,96,0.714,100,1.06,146,2.226,148,1.657,164,1.904,180,2.47,190,0.963,241,1.565,242,1.565,265,1.904,312,2.805,426,0.705,438,2.805,516,5.28,541,4.002,542,3.096,550,4.002,596,2.051,597,4.732,598,4.132,599,2.051,600,2.051,601,2.051,602,2.051,603,2.051,604,2.051,605,3.296,606,2.051,607,2.051,608,2.051,609,2.051,610,2.051,611,2.051,612,2.051,613,3.296,614,2.47,615,2.788,616,2.788,617,3.296,618,3.296,619,2.051,620,3.296,621,2.051,622,2.051,623,2.051,624,2.051,625,2.051,626,2.051,627,2.051,628,2.051,629,2.051,630,3.296,631,4.002,632,1.735,633,2.051,634,2.051,635,3.296,636,1.735,637,2.051,638,3.296,639,2.051,640,4.132,641,2.051,642,2.051,643,2.051,644,2.051,645,2.051,646,2.051]],["t/98",[24,0.272,40,1.168,42,1.285,44,1.437,48,2.284,50,4.061,67,0.492,70,0.746,71,1.216,76,0.344,77,0.278,78,0.299,80,0.462,81,0.427,82,0.492,89,0.677,95,0.919,96,0.83,100,1.232,137,0.784,139,1.437,141,1.35,143,1.495,165,2.28,190,1.305,207,2.994,216,1.28,276,2.131,384,2.845,426,1.65,444,1.698,571,2.845,647,3.364,648,3.364,649,3.364,650,3.364,651,3.364,652,3.364,653,4.802,654,3.364,655,5.599,656,3.364,657,3.364,658,3.364,659,4.802,660,3.364,661,3.364]],["t/100",[24,0.272,42,0.748,67,0.546,69,1.752,70,0.608,71,1.414,72,1.752,76,0.4,77,0.323,78,0.348,80,0.323,81,0.348,82,0.4,95,0.748,96,0.676,100,1.004,137,0.911,148,2.14,169,3.292,171,3.292,174,1.975,222,2.26,265,3.082,266,2.107,334,2.438,428,2.931,430,3.997,662,5.771,663,5.334,664,3.911,665,3.911,666,5.334,667,5.334,668,3.911,669,5.334,670,3.911]],["t/102",[24,0.271,29,2.09,40,0.752,42,0.752,67,0.548,70,0.61,71,1.42,76,0.402,77,0.324,78,0.35,80,0.324,81,0.35,82,0.402,89,1.314,95,1.25,96,0.679,100,1.008,132,1.865,139,1.008,190,1.417,194,4.13,196,3.322,197,4.13,199,5.145,288,2.943,438,2.667,662,3.322,671,3.928,672,5.35,673,3.928,674,2.943,675,3.322,676,2.943,677,3.322,678,2.943,679,3.322,680,2.943,681,2.943,682,2.943]],["t/104",[24,0.271,29,1.963,40,0.687,42,0.687,44,0.921,67,0.514,70,0.977,76,0.367,77,0.296,78,0.319,80,0.479,81,0.319,82,0.367,89,1.011,95,0.687,96,0.62,100,0.921,132,1.704,136,1.297,137,0.836,139,1.613,141,1.44,143,1.806,168,1.44,190,1.541,216,1.366,223,2.237,276,2.207,426,1.233,444,1.812,575,2.689,614,2.689,632,3.035,683,6.285,684,5.026,685,3.589,686,5.026,687,3.589,688,3.589,689,5.026,690,3.589,691,3.589,692,3.589,693,3.589,694,3.589,695,3.035]],["t/106",[24,0.271,40,1.106,42,1.276,67,0.451,70,0.814,71,1.081,76,0.306,77,0.432,78,0.466,80,0.364,81,0.266,82,0.306,89,0.601,95,0.572,96,0.517,100,0.767,137,1.027,190,1.346,218,2.547,241,2.093,242,2.093,245,1.864,360,2.993,374,3.303,426,1.028,444,2.643,527,2.993,592,3.303,593,3.303,614,2.241,615,2.529,616,2.529,631,4.428,636,2.529,696,4.408,697,4.408,698,2.99,699,4.408,700,2.529,701,2.99,702,2.99,703,2.99,704,2.99,705,2.99,706,2.99,707,5.236,708,2.99,709,2.99,710,2.99,711,2.99,712,5.236,713,2.99,714,2.99,715,2.99,716,2.99,717,2.99,718,2.99,719,2.99,720,4.408,721,2.99,722,2.99,723,2.99,724,4.408,725,2.99,726,2.99]],["t/108",[24,0.272,26,3.607,40,0.97,42,0.97,67,0.519,70,0.788,71,1.313,76,0.372,77,0.418,78,0.451,80,0.3,81,0.323,82,0.372,95,0.695,96,0.627,100,0.932,137,0.846,148,2.033,180,2.721,190,1.36,218,2.098,241,1.724,242,1.724,360,2.465,426,1.248,444,3.189,527,2.465,592,2.721,593,2.721,700,3.072,727,5.838,728,3.632,729,3.632,730,3.632,731,3.632,732,3.632,733,3.632,734,3.632,735,3.632,736,3.632,737,3.632,738,3.632,739,3.632,740,3.632,741,5.068,742,3.632,743,3.632,744,3.632]],["t/110",[24,0.273,29,2.133,40,0.774,42,0.51,67,0.632,70,0.415,76,0.273,77,0.22,78,0.237,80,0.484,81,0.237,82,0.273,89,1.098,95,1.228,96,0.461,100,0.684,132,1.922,136,0.964,137,0.943,139,1.697,141,1.623,143,1.7,190,1.139,194,3.984,197,4.194,216,1.015,276,1.54,298,3.664,300,3.033,301,3.033,302,3.033,323,2.748,426,0.917,443,4.091,479,4.091,493,4.091,674,3.033,676,3.033,678,3.033,680,3.033,681,3.033,682,3.033,745,2.667,746,4.047,747,2.667,748,4.047,749,4.047,750,4.047,751,4.047]],["t/113",[24,0.271,29,2.547,40,0.748,67,0.4,76,0.4,77,0.323,78,0.348,80,0.323,81,0.348,82,0.4,95,1.248,96,0.676,132,2.533,139,1.369,143,1.218,168,1.569,194,3.621,197,4.121,223,2.438,259,3.308,288,2.931,426,1.344,444,1.975,479,5.277,575,2.931,674,2.931,675,3.308,676,2.931,677,3.308,678,2.931,679,3.308,680,2.931,681,2.931,682,2.931,695,3.308,752,5.334,753,3.911,754,5.334,755,3.911,756,3.911,757,3.911,758,3.911]],["t/115",[24,0.27,31,2.555,40,0.846,42,0.846,44,1.135,67,0.593,70,0.687,77,0.365,78,0.393,80,0.365,81,0.515,96,0.764,103,3.313,104,3.74,105,3.74,106,3.74,107,3.74,108,3.313,109,2.555,110,3.002,111,3.313,112,3.313,114,3.313,115,4.338,116,4.338,117,3.313,118,3.313,119,3.313,121,3.313,122,3.74,190,1.504,577,3.313,759,3.74,760,3.74,761,3.74,762,3.74]],["t/117",[24,0.27,31,2.403,77,0.343,78,0.37,80,0.459,81,0.495,96,0.719,108,4.167,109,2.403,110,2.824,111,3.117,112,3.117,114,4.167,115,4.694,116,4.167,117,3.117,118,3.117,119,3.117,121,3.117,135,2.808,152,2.403,153,2.403,266,2.241,404,3.117,438,2.824,577,3.117,759,3.519,760,3.519,761,3.519,762,3.519,763,4.16,764,4.16,765,4.16,766,4.16,767,4.16,768,4.16,769,4.16,770,4.16,771,4.16,772,4.16,773,4.16,774,4.16,775,4.16,776,4.16]],["t/119",[24,0.212,31,3.674]],["t/121",[24,0.185,32,5.549,33,5.549,34,5.549,35,5.549,36,5.549,37,5.549,38,5.549,39,5.549,40,1.062,41,5.549,42,1.062,43,5.549,44,1.424,45,5.549,46,4.158,47,5.549,48,3.767,49,5.549,50,4.693,51,5.549,52,5.549,53,5.549]],["t/123",[54,6.404]],["t/125",[24,0.238,42,1.184,44,1.588,55,6.188,56,6.188]],["t/127",[24,0.267,42,1.316,44,1.497,57,5.832,58,5.832,59,5.832]],["t/129",[60,7.148,61,6.23,62,6.23,63,6.23]],["t/132",[64,6.404]],["t/134",[24,0.267,31,3.458,65,5.985,66,5.985]],["t/136",[24,0.272,31,1.705,67,0.698,68,2.496,69,2.572,70,0.892,71,1.067,72,2.572,73,1.849,74,2.004,75,2.467,76,0.447,77,0.474,78,0.462,79,2.496,80,0.474,81,0.511,82,0.447,83,0.834,84,0.795,85,1.25,86,1.402,87,1.25,88,1.59,89,0.878,90,2.496,91,2.496,92,2.952,93,2.496,94,2.496,95,0.565,96,0.754,97,2.952,98,2.496,99,2.496,100,0.757,101,2.496,102,2.952,103,2.212,104,2.496,105,2.496,106,2.496,107,2.496,108,2.212,109,2.522,110,2.964,111,2.212,112,2.212,113,2.952,114,2.212,115,3.272,116,3.272,117,2.212,118,2.212,119,2.212,120,2.952,121,2.212,122,2.496,123,2.496,124,2.496,125,2.496,126,2.496,127,2.496,128,2.212,129,2.496,130,2.496,131,2.496,132,1.402,133,2.496]],["t/138",[24,0.241,67,0.646]],["t/140",[134,6.404]],["t/142",[24,0.272,40,0.709,42,0.709,76,0.379,77,0.306,78,0.33,80,0.487,81,0.457,82,0.604,83,1.047,84,1.384,89,1.034,95,0.983,96,0.888,135,2.595,136,1.339,137,0.863,138,6.372,139,1.514,140,3.134,141,1.486,142,3.134,143,1.6,144,5.901,145,1.996,146,1.996,147,3.705,148,2.061,149,3.705,150,3.705,151,3.705,152,2.969,153,2.14,154,3.204,155,2.31,156,3.705,157,3.705,158,3.705,159,3.705]],["t/144",[24,0.274,29,1.911,40,0.661,42,0.661,44,0.886,76,0.353,77,0.285,78,0.307,80,0.404,81,0.505,82,0.632,83,0.976,84,1.317,95,1.087,96,0.981,100,0.886,132,1.64,135,2.47,145,1.86,146,1.86,148,1.962,160,6.179,161,3.453,162,3.453,163,2.921,164,1.995,165,1.64,166,3.453,167,3.453,168,1.385,169,2.47,170,2.153,171,3.119,172,2.153,173,3.321,174,1.743]],["t/146",[24,0.273,29,1.991,76,0.375,77,0.302,78,0.326,80,0.421,81,0.326,82,0.522,83,1.034,84,1.372,89,0.736,95,0.7,96,0.632,135,2.573,145,1.972,146,1.972,152,2.115,153,2.115,154,3.177,155,2.282,169,2.573,170,2.282,171,3.365,172,2.282,173,3.46,174,1.848,175,5.096,176,3.661,177,5.096,178,3.661,179,3.661,180,2.743,181,3.661,182,3.661,183,4.75,184,3.661,185,2.485,186,2.485,187,3.661,188,3.661,189,2.485]],["t/148",[24,0.273,29,2.626,67,0.346,76,0.346,77,0.279,78,0.3,80,0.397,81,0.3,82,0.493,83,0.954,84,1.296,89,1.129,94,2.856,95,0.646,96,0.583,135,2.431,145,1.819,146,2.594,152,1.951,153,1.951,154,3.002,155,2.105,169,2.431,170,2.105,171,3.394,172,2.105,173,3.269,174,1.705,185,2.292,186,2.292,189,2.292,190,0.787,191,3.377,192,4.815,193,3.377,194,2.292,195,3.377,196,2.856,197,2.292,198,3.377,199,2.856,200,3.377,201,5.611,202,3.377,203,3.377]],["t/150",[24,0.272,29,1.561,76,0.409,77,0.33,78,0.356,80,0.447,81,0.356,82,0.554,83,1.129,84,1.457,89,0.804,95,0.765,96,0.69,135,2.733,145,2.153,146,2.153,152,2.309,153,2.309,154,3.375,155,2.492,169,2.733,170,2.492,171,3.471,172,2.492,173,3.675,174,2.018,183,4.929,185,2.713,186,2.713,189,2.713,204,5.413,205,3.997,206,3.38]],["t/152",[24,0.271,29,2.247,76,0.362,77,0.292,78,0.314,80,0.41,81,0.314,82,0.509,83,0.998,84,1.339,89,0.711,95,0.676,96,0.61,145,1.904,146,1.904,152,2.041,153,2.041,154,3.1,155,2.203,165,2.361,168,2.737,169,2.51,170,2.203,171,3.673,172,2.203,174,1.784,183,4.677,185,2.399,186,2.399,189,2.399,206,2.988,207,3.1,208,4.972,209,3.533,210,3.533,211,3.533,212,6.823,213,4.972,214,4.972,215,4.972]],["t/154",[24,0.241,67,0.646]],["t/156",[68,5.417]],["t/158",[24,0.274,29,1.423,40,0.327,42,0.543,44,0.729,46,1.281,67,0.291,70,0.441,71,1.534,73,0.724,74,3.654,76,0.175,77,0.498,78,0.501,79,1.446,80,0.301,81,0.378,82,0.434,83,1.199,84,1.142,85,1.797,86,1.73,87,1.797,88,2.286,89,0.947,90,1.446,136,0.618,137,0.849,139,1.5,141,0.686,143,0.884,148,1.139,164,0.988,165,0.812,168,1.461,190,0.849,216,0.651,217,1.71,218,0.988,219,2.84,220,1.446,221,2.402,222,2.105,223,1.771,224,3.589,225,2.84,226,2.128,227,3.589,228,3.589,229,1.71,230,5.635,231,1.71,232,1.71,233,2.881,234,1.71,235,1.71,236,1.71,237,1.71,238,1.71,239,1.71,240,1.71,241,2.412,242,2.015,243,2.84,244,1.771,245,3.356,246,1.281,247,2.402,248,1.71,249,3.589,250,4.296,251,2.128,252,1.71,253,1.71,254,1.71,255,1.71,256,1.71,257,1.71,258,1.71,259,1.446,260,1.71,261,2.402,262,1.71,263,1.71,264,3.589,265,1.641,266,0.921,267,1.446,268,2.402,269,1.71,270,1.71,271,1.446]],["t/160",[24,0.272,42,0.796,67,0.569,69,1.863,70,0.647,72,1.863,73,1.762,75,1.975,76,0.426,77,0.343,78,0.37,80,0.517,81,0.37,82,0.426,83,1.175,84,1.12,85,1.762,87,1.762,89,0.837,136,1.504,137,0.969,139,1.607,140,3.519,141,1.669,143,1.731,148,1.669,216,1.583,272,5.561,273,3.519,274,4.16,275,4.16,276,2.384,277,4.16,278,4.16,279,4.16,280,4.16,281,4.16]],["t/162",[24,0.272,40,0.692,42,0.692,44,0.928,67,0.596,70,0.562,71,1.307,73,1.532,74,2.456,76,0.37,77,0.299,78,0.322,80,0.299,81,0.45,82,0.517,83,1.428,84,1.361,85,2.14,87,1.532,88,1.949,89,0.728,148,2.027,190,1.357,222,2.09,264,5.334,265,2.92,266,1.949,267,4.275,268,4.275,271,3.059,282,3.617,283,3.617,284,3.617,285,3.617,286,3.617,287,3.617,288,2.71,289,5.054,290,3.617,291,3.617,292,5.054,293,3.617,294,3.617,295,3.617,296,3.617,297,3.617]],["t/164",[24,0.273,67,0.538,69,1.348,70,0.688,72,1.348,73,1.275,75,1.429,76,0.308,77,0.533,78,0.268,80,0.551,81,0.268,82,0.308,83,0.85,84,0.81,85,1.275,86,1.429,87,1.275,89,0.891,132,3.068,136,1.088,137,1.225,139,1.349,143,0.937,148,1.207,190,0.701,216,1.145,218,1.739,233,2.043,241,2.496,242,2.752,261,2.546,276,1.145,298,2.255,299,2.546,300,2.255,301,2.255,302,3.319,303,4.43,304,3.01,305,3.01,306,3.01,307,3.01,308,3.01,309,3.01,310,3.01,311,3.01,312,2.043,313,3.01,314,3.01,315,3.01,316,3.01,317,2.546,318,4.43,319,3.01,320,3.01,321,3.01,322,3.01,323,2.043,324,3.01]],["t/166",[24,0.27,40,0.885,67,0.675,69,2.071,70,0.718,71,1.671,72,2.071,73,1.958,74,3.139,75,2.195,76,0.473,77,0.382,78,0.411,80,0.382,81,0.411,82,0.473,83,1.306,84,1.245,85,1.958,86,2.195,87,1.958,88,2.491,89,0.93,325,5.96,326,4.623,327,4.623,328,4.623,329,4.623,330,4.623,331,4.623,332,4.623]],["t/168",[24,0.272,29,2.276,67,0.596,71,1.614,76,0.457,77,0.369,78,0.397,80,0.535,81,0.397,82,0.457,83,1.262,84,1.202,85,1.891,86,2.12,168,2.337,226,3.346,246,4.366,333,4.465,334,3.633,335,4.465,336,5.827,337,4.465,338,3.777,339,5.827,340,4.465,341,4.465]],["t/170",[24,0.272,40,1.018,42,1.018,44,0.999,67,0.62,70,0.605,71,1.408,73,1.649,76,0.399,77,0.439,78,0.473,80,0.321,81,0.347,82,0.399,83,1.1,84,1.049,85,1.649,86,1.849,87,1.649,88,2.098,89,0.783,190,1.411,218,2.25,233,3.611,241,2.876,242,1.849,244,2.428,245,2.428,342,3.294,343,5.319,344,3.895,345,3.895,346,3.895,347,3.895,348,3.895,349,3.294,350,3.895,351,3.895,352,3.294,353,3.895,354,3.895]],["t/172",[24,0.271,26,2.128,40,0.572,42,0.572,44,0.767,67,0.451,70,0.465,73,1.266,76,0.306,77,0.477,78,0.514,80,0.432,81,0.266,82,0.306,83,0.845,84,0.805,86,1.42,87,1.266,89,0.601,136,1.081,137,1.027,139,1.131,165,1.42,168,1.199,190,1.346,207,1.864,218,1.727,241,2.486,242,2.486,244,2.748,245,3.264,251,2.241,355,2.99,356,4.408,357,2.99,358,2.99,359,4.408,360,2.03,361,5.236,362,2.99,363,2.99,364,2.99,365,2.99,366,2.99,367,2.99,368,5.236,369,2.99,370,4.408,371,4.408,372,5.236,373,5.236,374,3.303,375,2.99,376,2.99,377,2.99,378,4.408,379,4.408,380,4.408,381,4.408,382,4.408,383,2.99,384,2.529,385,2.99,386,2.529,387,2.99,388,2.99,389,2.99,390,2.99,391,2.99,392,2.99]],["t/174",[24,0.272,40,0.775,42,0.775,44,1.039,67,0.633,70,0.629,73,1.715,76,0.415,77,0.334,78,0.36,80,0.451,81,0.36,82,0.415,83,1.144,84,1.09,86,1.923,87,1.715,89,0.815,136,1.464,137,0.944,139,1.697,142,4.619,143,1.261,190,1.44,207,2.525,216,1.541,352,3.425,386,3.425,393,5.462,394,5.462,395,4.05,396,4.05,397,4.05,398,4.05,399,4.05,400,4.05,401,4.05]],["t/176",[24,0.273,40,0.692,42,0.692,44,0.928,67,0.596,70,0.562,73,1.532,76,0.37,77,0.417,78,0.45,80,0.299,81,0.322,82,0.37,83,1.022,84,0.974,85,1.532,86,1.718,87,1.532,89,0.728,109,2.09,136,1.307,137,0.843,139,0.928,143,1.573,190,1.357,233,3.431,241,2.4,242,1.718,244,2.255,342,3.059,402,5.054,403,3.617,404,4.725,405,3.617,406,5.054,407,3.617,408,3.617,409,5.825,410,3.617,411,3.617,412,3.617,413,3.617,414,3.617,415,3.617,416,3.617,417,3.617]],["t/178",[24,0.271,48,2.578,67,0.535,76,0.389,77,0.493,78,0.573,80,0.532,81,0.338,82,0.389,83,1.073,84,1.022,85,1.608,87,1.608,89,0.764,137,0.885,139,1.534,148,1.523,168,1.523,220,3.212,221,3.212,222,2.194,223,2.368,224,4.421,227,4.421,228,4.421,241,2.482,242,2.482,244,2.368,245,4.015,246,2.845,247,3.212,249,4.421,250,5.056,251,2.845,334,2.368,338,3.212,349,3.212,360,2.578,418,3.798,419,3.798,420,3.798,421,3.798,422,3.798]],["t/180",[24,0.27,40,0.917,42,0.917,44,1.23,67,0.687,70,0.745,73,2.03,77,0.396,80,0.396,89,0.964,103,3.591,109,2.769,110,3.254,123,4.054,124,4.054,125,4.054,126,4.054,127,4.054,128,3.591,129,4.054,130,4.054,131,4.054,132,2.276,133,4.054,190,1.563]],["t/182",[24,0.241,67,0.646]],["t/184",[91,5.417]],["t/186",[24,0.273,40,0.869,42,0.869,44,0.799,67,0.465,70,0.484,71,1.641,76,0.319,77,0.257,78,0.277,80,0.486,81,0.477,82,0.549,88,1.677,93,4.982,95,1.025,96,0.926,98,3.839,99,3.839,100,1.375,101,2.632,132,1.478,136,1.125,137,1.058,139,1.511,141,1.248,143,1.413,148,1.248,163,2.632,164,1.798,165,1.478,168,1.248,169,2.974,171,2.705,174,1.571,190,1.058,216,1.184,222,1.798,265,2.623,266,1.677,276,2.039,334,1.94,423,3.112,424,3.112,425,3.112,426,1.56,427,3.112,428,2.332,429,2.632,430,2.332]],["t/188",[24,0.273,40,0.755,42,0.755,44,1.012,67,0.549,70,0.613,71,1.426,76,0.404,77,0.326,78,0.351,80,0.326,81,0.477,82,0.549,89,1.079,95,1.027,96,0.927,100,1.377,135,1.992,143,1.67,190,1.421,426,1.844,431,6.097,432,3.945,433,5.365,434,3.945,435,5.365,436,3.945,437,3.945,438,3.643,439,3.945,440,3.945,441,3.945]],["t/190",[24,0.272,40,0.8,44,1.431,67,0.571,69,1.872,70,0.867,72,1.872,75,1.985,76,0.428,77,0.345,78,0.372,80,0.518,81,0.372,82,0.428,95,0.8,96,0.722,100,1.072,136,1.511,137,0.974,139,1.611,141,1.676,143,1.737,216,1.59,273,5.31,276,1.59,426,1.436,442,4.718,443,4.705,444,2.11,445,5.578,446,4.179]],["t/192",[24,0.27,67,0.602,69,2.03,70,0.914,72,2.03,75,2.152,76,0.464,77,0.374,78,0.403,80,0.539,81,0.403,82,0.464,95,0.867,96,0.783,100,1.163,136,1.638,137,1.056,139,1.676,141,1.818,143,1.832,216,1.724,276,2.631,426,1.557,447,4.976,448,5.883,449,4.532]],["t/194",[24,0.274,40,0.734,42,0.734,44,0.984,48,3.178,67,0.393,70,0.596,76,0.254,77,0.205,78,0.221,80,0.205,81,0.417,82,0.479,95,0.896,96,0.809,100,0.984,137,0.894,148,2.111,168,2.41,169,3.265,171,3.482,174,2.364,190,1.091,222,2.705,223,2.919,226,3.508,265,3.04,266,2.522,276,0.946,334,2.919,428,2.874,429,2.103,430,3.508,444,2.364,447,2.103,450,5.263,451,3.835,452,3.835,453,2.486,454,3.835,455,2.486,456,2.486,457,2.486,458,2.486]],["t/196",[24,0.272,67,0.678,69,1.822,70,0.851,72,1.822,75,1.932,76,0.416,77,0.336,78,0.362,80,0.511,81,0.362,82,0.416,95,0.778,96,0.703,100,1.044,136,1.47,137,0.948,139,1.589,141,1.632,143,1.705,216,1.548,276,1.548,298,4.105,300,3.048,301,3.048,302,4.105,317,3.44,323,2.762,426,1.398,443,4.105,459,4.068,460,5.478,461,4.068]],["t/198",[24,0.274,29,0.95,40,0.466,42,0.884,44,0.624,67,0.386,70,0.378,76,0.249,77,0.201,78,0.217,80,0.465,81,0.217,82,0.386,84,0.655,89,1.132,95,0.466,96,0.42,100,0.624,109,1.406,128,2.826,135,1.228,137,0.567,139,1.528,164,1.406,165,1.155,190,0.879,266,1.311,299,2.058,312,2.561,323,1.652,404,1.823,444,1.228,462,2.433,463,2.433,464,5.63,465,5.203,466,2.433,467,2.433,468,2.433,469,2.433,470,5.203,471,3.772,472,2.433,473,3.772,474,2.433,475,2.433,476,2.433,477,5.63,478,2.433,479,1.823,480,2.433,481,2.433,482,2.433,483,2.433,484,2.433,485,2.433,486,2.433,487,2.433,488,2.433,489,2.433,490,2.433,491,2.433,492,2.433,493,1.823,494,5.63,495,3.772,496,3.772,497,3.772,498,3.772,499,2.433,500,2.433,501,3.772,502,2.433,503,3.772,504,2.433,505,2.433,506,2.433,507,2.433,508,2.433,509,2.433,510,2.433,511,2.433]],["t/200",[24,0.273,26,1.691,40,0.455,42,1.065,46,2.775,67,0.379,70,0.369,76,0.243,77,0.196,78,0.211,80,0.196,81,0.211,82,0.243,89,1.428,95,0.455,96,0.41,100,0.61,136,0.859,137,0.554,139,1.429,164,3.408,165,2.801,168,0.953,190,0.863,312,3.78,374,2.775,493,1.781,512,5.569,513,6.692,514,5.137,515,5.137,516,4.345,517,2.376,518,3.703,519,2.376,520,4.55,521,2.376,522,2.376,523,2.376,524,2.376,525,2.376,526,2.376,527,1.613,528,2.376,529,5.137,530,2.376,531,2.376,532,2.376,533,2.376,534,2.376,535,2.376,536,2.376,537,2.376,538,2.376,539,2.376,540,2.376,541,2.01,542,1.781,543,2.376,544,2.376,545,2.376,546,2.376,547,2.376,548,2.376,549,2.376,550,5.21,551,2.376,552,2.376,553,2.376,554,2.376,555,2.376,556,2.376,557,2.376]],["t/202",[24,0.271,67,0.674,69,2.06,70,0.923,72,2.06,75,2.184,76,0.471,77,0.38,78,0.409,80,0.49,81,0.409,82,0.608,83,1.3,84,1.238,85,1.948,95,0.88,96,0.795,100,1.18,145,2.478,276,1.75,426,1.581,442,3.891,558,4.6,559,4.6,560,5.941,561,4.6]],["t/204",[24,0.27,67,0.595,69,1.99,70,0.903,72,1.99,75,2.11,76,0.455,77,0.367,78,0.395,80,0.534,81,0.395,82,0.455,95,0.85,96,0.768,100,1.14,137,1.035,139,1.66,141,1.782,143,1.808,216,1.691,276,2.463,426,1.527,562,4.443,563,5.809,564,4.443,565,4.443,566,4.443,567,4.443,568,4.443,569,5.809,570,4.443]],["t/206",[24,0.272,40,0.54,44,0.725,67,0.432,70,0.439,76,0.289,77,0.233,78,0.251,80,0.497,81,0.251,82,0.289,95,0.54,96,0.488,100,0.725,137,0.984,139,1.62,141,1.695,143,1.749,165,2.006,168,1.133,190,0.984,207,2.634,216,1.608,276,2.402,426,0.97,527,1.917,542,4.21,571,2.388,572,4.225,573,5.619,574,6.728,575,3.166,576,4.225,577,4.73,578,4.225,579,4.225,580,4.225,581,4.225,582,5.062,583,4.225,584,4.225,585,4.225,586,4.225,587,5.619,588,4.225,589,4.225,590,4.225,591,4.225,592,2.116,593,2.116,594,4.225,595,2.824]],["t/208",[24,0.274,31,1.185,40,0.631,42,0.631,44,0.846,67,0.337,70,0.319,71,0.741,76,0.21,77,0.341,78,0.368,80,0.169,81,0.368,82,0.423,88,2.226,89,1.043,95,0.791,96,0.714,100,1.06,146,2.226,148,1.657,164,1.904,180,2.47,190,0.963,241,1.565,242,1.565,265,1.904,312,2.805,426,0.705,438,2.805,516,5.28,541,4.002,542,3.096,550,4.002,596,2.051,597,4.732,598,4.132,599,2.051,600,2.051,601,2.051,602,2.051,603,2.051,604,2.051,605,3.296,606,2.051,607,2.051,608,2.051,609,2.051,610,2.051,611,2.051,612,2.051,613,3.296,614,2.47,615,2.788,616,2.788,617,3.296,618,3.296,619,2.051,620,3.296,621,2.051,622,2.051,623,2.051,624,2.051,625,2.051,626,2.051,627,2.051,628,2.051,629,2.051,630,3.296,631,4.002,632,1.735,633,2.051,634,2.051,635,3.296,636,1.735,637,2.051,638,3.296,639,2.051,640,4.132,641,2.051,642,2.051,643,2.051,644,2.051,645,2.051,646,2.051]],["t/210",[24,0.272,40,1.168,42,1.285,44,1.437,48,2.284,50,4.061,67,0.492,70,0.746,71,1.216,76,0.344,77,0.278,78,0.299,80,0.462,81,0.427,82,0.492,89,0.677,95,0.919,96,0.83,100,1.232,137,0.784,139,1.437,141,1.35,143,1.495,165,2.28,190,1.305,207,2.994,216,1.28,276,2.131,384,2.845,426,1.65,444,1.698,571,2.845,647,3.364,648,3.364,649,3.364,650,3.364,651,3.364,652,3.364,653,4.802,654,3.364,655,5.599,656,3.364,657,3.364,658,3.364,659,4.802,660,3.364,661,3.364]],["t/212",[24,0.272,42,0.748,67,0.546,69,1.752,70,0.608,71,1.414,72,1.752,76,0.4,77,0.323,78,0.348,80,0.323,81,0.348,82,0.4,95,0.748,96,0.676,100,1.004,137,0.911,148,2.14,169,3.292,171,3.292,174,1.975,222,2.26,265,3.082,266,2.107,334,2.438,428,2.931,430,3.997,662,5.771,663,5.334,664,3.911,665,3.911,666,5.334,667,5.334,668,3.911,669,5.334,670,3.911]],["t/214",[24,0.271,29,2.09,40,0.752,42,0.752,67,0.548,70,0.61,71,1.42,76,0.402,77,0.324,78,0.35,80,0.324,81,0.35,82,0.402,89,1.314,95,1.25,96,0.679,100,1.008,132,1.865,139,1.008,190,1.417,194,4.13,196,3.322,197,4.13,199,5.145,288,2.943,438,2.667,662,3.322,671,3.928,672,5.35,673,3.928,674,2.943,675,3.322,676,2.943,677,3.322,678,2.943,679,3.322,680,2.943,681,2.943,682,2.943]],["t/216",[24,0.271,29,1.963,40,0.687,42,0.687,44,0.921,67,0.514,70,0.977,76,0.367,77,0.296,78,0.319,80,0.479,81,0.319,82,0.367,89,1.011,95,0.687,96,0.62,100,0.921,132,1.704,136,1.297,137,0.836,139,1.613,141,1.44,143,1.806,168,1.44,190,1.541,216,1.366,223,2.237,276,2.207,426,1.233,444,1.812,575,2.689,614,2.689,632,3.035,683,6.285,684,5.026,685,3.589,686,5.026,687,3.589,688,3.589,689,5.026,690,3.589,691,3.589,692,3.589,693,3.589,694,3.589,695,3.035]],["t/218",[24,0.271,40,1.106,42,1.276,67,0.451,70,0.814,71,1.081,76,0.306,77,0.432,78,0.466,80,0.364,81,0.266,82,0.306,89,0.601,95,0.572,96,0.517,100,0.767,137,1.027,190,1.346,218,2.547,241,2.093,242,2.093,245,1.864,360,2.993,374,3.303,426,1.028,444,2.643,527,2.993,592,3.303,593,3.303,614,2.241,615,2.529,616,2.529,631,4.428,636,2.529,696,4.408,697,4.408,698,2.99,699,4.408,700,2.529,701,2.99,702,2.99,703,2.99,704,2.99,705,2.99,706,2.99,707,5.236,708,2.99,709,2.99,710,2.99,711,2.99,712,5.236,713,2.99,714,2.99,715,2.99,716,2.99,717,2.99,718,2.99,719,2.99,720,4.408,721,2.99,722,2.99,723,2.99,724,4.408,725,2.99,726,2.99]],["t/220",[24,0.272,26,3.607,40,0.97,42,0.97,67,0.519,70,0.788,71,1.313,76,0.372,77,0.418,78,0.451,80,0.3,81,0.323,82,0.372,95,0.695,96,0.627,100,0.932,137,0.846,148,2.033,180,2.721,190,1.36,218,2.098,241,1.724,242,1.724,360,2.465,426,1.248,444,3.189,527,2.465,592,2.721,593,2.721,700,3.072,727,5.838,728,3.632,729,3.632,730,3.632,731,3.632,732,3.632,733,3.632,734,3.632,735,3.632,736,3.632,737,3.632,738,3.632,739,3.632,740,3.632,741,5.068,742,3.632,743,3.632,744,3.632]],["t/222",[24,0.273,29,2.133,40,0.774,42,0.51,67,0.632,70,0.415,76,0.273,77,0.22,78,0.237,80,0.484,81,0.237,82,0.273,89,1.098,95,1.228,96,0.461,100,0.684,132,1.922,136,0.964,137,0.943,139,1.697,141,1.623,143,1.7,190,1.139,194,3.984,197,4.194,216,1.015,276,1.54,298,3.664,300,3.033,301,3.033,302,3.033,323,2.748,426,0.917,443,4.091,479,4.091,493,4.091,674,3.033,676,3.033,678,3.033,680,3.033,681,3.033,682,3.033,745,2.667,746,4.047,747,2.667,748,4.047,749,4.047,750,4.047,751,4.047]],["t/225",[24,0.271,29,2.547,40,0.748,67,0.4,76,0.4,77,0.323,78,0.348,80,0.323,81,0.348,82,0.4,95,1.248,96,0.676,132,2.533,139,1.369,143,1.218,168,1.569,194,3.621,197,4.121,223,2.438,259,3.308,288,2.931,426,1.344,444,1.975,479,5.277,575,2.931,674,2.931,675,3.308,676,2.931,677,3.308,678,2.931,679,3.308,680,2.931,681,2.931,682,2.931,695,3.308,752,5.334,753,3.911,754,5.334,755,3.911,756,3.911,757,3.911,758,3.911]],["t/227",[24,0.27,31,2.555,40,0.846,42,0.846,44,1.135,67,0.593,70,0.687,77,0.365,78,0.393,80,0.365,81,0.515,96,0.764,103,3.313,104,3.74,105,3.74,106,3.74,107,3.74,108,3.313,109,2.555,110,3.002,111,3.313,112,3.313,114,3.313,115,4.338,116,4.338,117,3.313,118,3.313,119,3.313,121,3.313,122,3.74,190,1.504,577,3.313,759,3.74,760,3.74,761,3.74,762,3.74]],["t/229",[24,0.27,31,2.403,77,0.343,78,0.37,80,0.459,81,0.495,96,0.719,108,4.167,109,2.403,110,2.824,111,3.117,112,3.117,114,4.167,115,4.694,116,4.167,117,3.117,118,3.117,119,3.117,121,3.117,135,2.808,152,2.403,153,2.403,266,2.241,404,3.117,438,2.824,577,3.117,759,3.519,760,3.519,761,3.519,762,3.519,763,4.16,764,4.16,765,4.16,766,4.16,767,4.16,768,4.16,769,4.16,770,4.16,771,4.16,772,4.16,773,4.16,774,4.16,775,4.16,776,4.16]]],"invertedIndex":[["",{"_index":24,"t":{"5":{"position":[[52,2],[68,1]]},"7":{"position":[[0,2]]},"9":{"position":[[187,5]]},"13":{"position":[[3,4],[23,4]]},"15":{"position":[[0,9],[22,3],[29,8],[38,27],[124,8],[144,4],[149,2],[152,22],[175,17]]},"22":{"position":[[50,55],[106,5],[124,1],[126,7],[146,6],[153,6],[160,8],[169,8]]},"24":{"position":[[0,26],[158,3],[162,1],[164,5],[170,1],[212,1],[285,1],[293,5],[299,2],[333,1],[351,1],[376,1],[385,1],[402,1],[417,2],[420,2],[452,8],[544,1],[679,3],[683,1],[685,5],[691,1],[771,1],[779,5],[785,2],[820,1],[838,1],[863,1],[873,1],[902,1],[913,2],[916,2],[954,10],[965,2],[978,1],[1067,1],[1200,3],[1204,1],[1232,1],[1278,1],[1286,5],[1292,2],[1295,1],[1353,2],[1450,1],[1452,2],[1455,4],[1594,2],[1658,1],[1759,1],[1770,1],[1875,1],[1877,3],[1881,1],[1883,4],[1888,1],[1932,1],[2007,1],[2015,5],[2021,2],[2121,1],[2250,1]]},"26":{"position":[[0,2],[3,4]]},"30":{"position":[[13,3],[17,5],[23,3],[81,1],[147,3],[151,3],[155,1],[157,6],[164,1],[166,1],[181,2],[215,1],[217,2],[220,4],[225,3],[229,9],[239,13],[253,4],[258,12],[295,1],[320,1],[329,1],[346,1],[355,1],[372,1],[389,2],[396,6],[419,1],[444,1],[459,1],[488,1],[499,2],[502,2],[519,10],[548,1],[698,2],[722,1],[747,1],[762,1],[791,1],[802,2],[805,2],[822,10],[857,1],[906,6],[1015,1]]},"32":{"position":[[13,3],[17,5],[23,3],[27,5],[33,3],[37,3],[41,1],[43,4],[48,1],[50,1],[65,2],[97,1],[99,2],[102,4],[107,3],[111,9],[121,13],[135,4],[140,12],[153,2],[163,7],[171,6],[178,4],[214,1],[239,1],[248,1],[265,1],[274,1],[291,1],[306,2],[313,11],[325,3],[345,1],[370,1],[383,1],[412,1],[423,2],[426,2],[443,10],[535,2],[542,3],[546,2],[549,12],[567,2],[598,1],[623,1],[636,1],[665,1],[755,1],[757,1],[759,2],[762,6],[784,3],[788,2],[795,3],[799,2],[802,12],[824,1],[849,1],[862,1],[891,1],[926,1],[1016,1],[1127,2],[1130,8],[1161,1]]},"34":{"position":[[13,3],[17,5],[23,3],[27,5],[33,3],[37,3],[41,1],[43,5],[49,1],[51,1],[66,2],[101,1],[103,2],[106,4],[111,3],[115,9],[125,13],[139,4],[144,12],[157,2],[160,2],[163,6],[170,3],[209,1],[234,1],[243,1],[260,1],[269,1],[286,1],[320,1],[345,1],[361,1],[390,1],[425,1],[515,1],[550,2],[553,4],[600,21],[647,2],[677,21],[699,2],[702,4],[742,5],[765,15],[781,5],[787,2],[790,6],[808,5],[836,1],[1018,1],[1171,1]]},"36":{"position":[[13,3],[17,5],[23,3],[27,5],[33,3],[37,3],[41,1],[43,9],[53,1],[59,1],[61,8],[113,1],[115,1],[130,2],[174,1],[176,2],[179,4],[184,3],[188,9],[198,13],[212,4],[217,12],[230,2],[233,2],[236,6],[243,3],[258,2],[261,4],[313,1],[338,1],[347,1],[364,1],[373,1],[390,1],[437,1],[462,1],[487,1],[516,1],[551,1],[641,1],[676,2],[679,6],[762,2],[801,1],[908,2],[916,7],[924,7],[932,2],[947,6],[987,1],[1043,1],[1163,2],[1166,3],[1196,2],[1215,3],[1287,2],[1290,9],[1300,11],[1324,31],[1356,2],[1359,4],[1418,1]]},"38":{"position":[[13,3],[17,5],[23,3],[27,5],[33,3],[37,3],[41,1],[43,5],[49,1],[51,1],[66,2],[104,1],[106,2],[109,4],[114,3],[118,9],[128,13],[142,4],[147,12],[160,2],[163,2],[166,6],[173,3],[212,1],[237,1],[246,1],[263,1],[272,1],[289,1],[326,1],[351,1],[370,1],[399,1],[434,1],[524,1],[581,1],[778,1],[885,2],[888,6],[917,1]]},"40":{"position":[[19,3],[23,5],[29,3],[33,5],[39,3],[43,3],[47,1],[49,9],[59,1],[61,1],[82,2],[119,1],[121,2],[124,4],[129,3],[133,9],[143,13],[157,4],[162,12],[175,2],[178,2],[181,6],[188,3],[203,5],[247,1],[272,1],[281,1],[298,1],[307,1],[324,1],[360,1],[385,1],[403,1],[432,1],[467,1],[557,1],[614,1],[687,2],[700,11],[712,7],[1184,1],[1291,2],[1294,6],[1323,1]]},"42":{"position":[[0,2],[3,4]]},"46":{"position":[[9,3],[67,1],[139,4],[144,2],[147,7],[291,1],[293,3],[297,1],[330,7],[338,2],[378,1],[385,3],[389,1],[391,5],[397,2],[438,1],[493,3],[497,1],[549,2],[603,1],[605,2],[662,1],[679,1],[681,3],[685,1],[741,1],[743,1],[760,2],[804,1],[819,1],[830,1],[832,3],[836,1],[838,14],[853,1],[855,1],[938,1],[955,2],[1027,1],[1104,2],[1178,2],[1194,1],[1208,2],[1211,6],[1238,1],[1293,1],[1295,1],[1297,3],[1301,1],[1303,9],[1313,5],[1319,1],[1321,1],[1338,2],[1407,1],[1409,2],[1412,25],[1473,1],[1475,3],[1479,1],[1481,7],[1489,2],[1516,1],[1621,2],[1624,4],[1629,3],[1633,1],[1708,1],[1748,1],[1750,2],[1821,2],[1824,3],[1828,3],[1832,1],[1834,5],[1840,1],[1846,1],[1885,1],[1891,1],[1961,1],[1967,1],[1972,5],[1978,2],[2012,1],[2014,2],[2052,2],[2090,1],[2115,1],[2124,1],[2141,1],[2156,2],[2159,2],[2191,8],[2200,2],[2218,6],[2225,10],[2318,1],[2320,1],[2345,1],[2357,1],[2411,1],[2435,2],[2443,2],[2446,5],[2485,1],[2510,1],[2519,1],[2536,1],[2551,2],[2554,2],[2586,8],[2665,1],[2667,3],[2671,1],[2673,8],[2682,2],[2721,1],[2728,3],[2732,5],[2738,2],[2779,1],[2903,1],[2957,2],[2973,1],[2987,2],[2990,6],[3017,1],[3072,1],[3074,1],[3142,1],[3156,1],[3158,3],[3162,1],[3164,7],[3172,2],[3199,1],[3274,1],[3297,2],[3300,7],[3375,2],[3392,1],[3417,1],[3426,1],[3443,1],[3458,2],[3461,2],[3493,8],[3585,2],[3602,1],[3627,1],[3636,1],[3653,1],[3668,2],[3708,1],[3720,1],[3734,1],[3810,2],[3856,1],[3890,2],[3932,1],[3942,1],[3960,2],[3969,1],[3971,2],[3974,29],[4026,1],[4028,1],[4030,1]]},"48":{"position":[[20,3],[85,1],[87,3],[91,1],[93,7],[101,5],[113,1],[154,2],[178,1],[210,3],[214,1],[216,35],[252,2],[345,4],[350,6],[357,8],[366,3],[370,3],[374,1],[376,10],[387,1],[389,1],[466,1],[546,1],[554,5],[560,2],[599,1],[617,1],[642,1],[651,1],[668,1],[683,2],[798,1]]},"50":{"position":[[20,3],[24,5],[30,4],[35,6],[42,3],[46,3],[50,1],[96,1],[102,1],[141,1],[147,1],[217,1],[223,1],[228,5],[234,2],[270,1],[288,1],[313,1],[322,1],[339,1],[354,2],[367,2],[370,6],[545,2],[567,1],[592,1],[601,1],[618,1],[657,1],[669,1],[683,1],[719,2],[722,6],[729,5],[794,1],[915,1],[1015,2],[1018,4],[1065,10],[1118,1],[1128,1],[1146,2],[1155,1],[1157,2],[1160,29],[1212,1],[1214,1],[1216,1]]},"52":{"position":[[20,3],[83,1],[85,3],[89,1],[91,4],[96,14],[111,12],[124,2],[152,1],[212,3],[216,1],[228,19],[248,2],[312,3],[316,1],[318,10],[329,2],[383,4],[388,6],[395,6],[402,7],[480,1],[529,1],[552,1],[610,1],[644,1],[646,3],[650,1],[652,9],[662,1],[664,1],[681,1],[691,2],[769,1],[778,6],[785,1],[831,1],[833,3],[837,1],[839,10],[850,3],[854,1],[856,1],[866,2],[961,1],[1011,2],[1014,3],[1018,3],[1022,1],[1024,14],[1039,1],[1045,1],[1112,1],[1218,1],[1296,1],[1304,5],[1310,2],[1347,1],[1365,1],[1390,1],[1399,1],[1416,1],[1431,2],[1434,2],[1541,2],[1544,4],[1582,12],[1632,2],[1675,2],[1732,2],[1762,1]]},"54":{"position":[[20,3],[24,5],[30,4],[35,6],[42,3],[46,3],[50,1],[52,3],[56,1],[58,1],[100,1],[173,1],[286,1],[345,2],[386,1],[404,1],[429,1],[438,1],[455,1],[470,2],[473,2],[578,2],[681,1]]},"56":{"position":[[20,3],[24,5],[30,3],[34,3],[38,1],[40,28],[69,2],[108,1],[126,1],[151,1],[160,1],[177,1],[192,2],[195,2],[261,1],[350,1],[358,1],[410,1],[412,2],[415,2],[501,1],[581,1],[592,1],[594,2],[597,10],[608,6],[615,6],[672,1],[674,1]]},"58":{"position":[[20,3],[24,5],[30,4],[35,6],[73,3],[77,1],[79,10],[90,1],[92,1],[109,1],[126,2],[226,1],[281,2],[284,6],[311,2],[345,2],[378,2],[386,2],[441,5],[447,1],[449,3],[453,3],[457,1],[459,6],[466,1],[468,1],[474,1],[513,1],[519,1],[593,1],[599,1],[604,5],[610,2],[644,1],[662,1],[687,1],[696,1],[713,1],[728,2],[731,2],[850,1]]},"60":{"position":[[28,3],[91,1],[136,4],[141,6],[148,6],[161,2],[240,1],[316,2],[385,2],[458,1],[538,1],[736,1],[857,1],[905,1],[1012,1],[1014,9],[1150,1],[1157,1],[1194,1],[1445,1],[1447,2],[1450,3],[1454,3],[1458,1],[1460,22],[1483,1],[1489,1],[1491,52],[1544,1],[1546,1],[1552,1],[1596,1],[1602,1],[1671,1],[1677,1],[1682,5],[1688,1],[1690,1],[1711,2],[1744,1],[1762,1],[1787,1],[1796,1],[1813,1],[1829,2],[1832,2],[1935,2],[1938,6],[1945,5],[1989,2],[1992,7],[2000,5],[2046,2],[2049,11],[2061,5],[2121,1]]},"62":{"position":[[9,3],[79,1],[114,2],[117,4],[122,5],[128,2],[131,2],[231,2],[234,12],[247,9],[257,6],[264,9],[314,4],[319,6],[326,2],[329,3],[333,1],[335,10],[346,1],[348,1],[354,1],[405,1],[411,1],[485,1],[491,1],[496,5],[502,1],[504,1],[525,2],[561,1],[579,1],[604,1],[613,1],[630,1],[653,2],[656,2],[795,1]]},"64":{"position":[[20,3],[87,1],[89,3],[93,1],[95,8],[104,4],[109,2],[132,4],[137,6],[173,3],[177,1],[179,5],[185,34],[220,8],[229,1],[231,1],[250,1],[267,1],[287,2],[370,1],[428,2],[431,14],[446,8],[455,2],[458,9],[538,1],[592,1],[793,1],[795,1],[797,3],[801,3],[805,1],[807,9],[817,1],[819,1],[825,1],[873,1],[879,1],[954,1],[960,1],[965,5],[971,2],[1008,1],[1026,1],[1051,1],[1060,1],[1077,1],[1092,2],[1095,2],[1224,1]]},"66":{"position":[[20,4],[116,1],[118,3],[122,1],[155,7],[163,2],[203,1],[258,1],[394,1],[497,2],[513,1],[542,1],[597,1],[599,1],[667,1],[704,1],[706,3],[710,1],[712,7],[720,2],[747,1],[822,2],[825,3],[829,3],[833,1],[835,7],[843,2],[878,1],[896,1],[921,1],[930,1],[947,1],[962,2],[965,2],[1068,1]]},"68":{"position":[[0,5],[147,3],[151,5],[157,6],[164,4],[169,6],[176,6],[183,3],[187,3],[191,1],[193,4],[198,1],[204,1],[245,1],[251,1],[323,1],[329,1],[334,5],[340,2],[440,1],[569,1]]},"70":{"position":[[0,2],[3,4]]},"74":{"position":[[9,3],[67,1],[208,3],[212,1],[214,6],[221,2],[261,3],[265,3],[269,1],[271,5],[277,1],[283,1],[322,1],[328,1],[333,5],[339,2],[374,1],[376,2],[379,2],[433,6],[440,2],[453,2],[491,1],[516,1],[532,1],[561,1],[572,2],[575,2],[613,10],[624,2],[637,1],[723,1],[725,1],[727,2],[730,6],[752,3],[756,2],[772,1],[797,1],[813,1],[842,1],[853,2],[856,2],[894,10],[905,2],[918,1],[1007,2],[1023,1],[1048,1],[1064,1],[1093,1],[1104,2],[1107,2],[1150,1],[1162,1],[1176,1],[1251,1],[1329,1],[1339,1],[1341,2],[1356,6],[1379,2],[1388,1],[1412,1],[1414,1],[1416,1]]},"76":{"position":[[9,3],[13,5],[19,3],[23,3],[27,1],[29,10],[40,1],[46,1],[85,1],[91,1],[96,14],[111,1],[117,1],[122,5],[128,1],[130,1],[145,2],[190,1],[208,1],[233,1],[259,1],[288,1],[299,2],[302,6],[402,2],[405,8],[414,7],[463,1],[525,2],[528,2],[566,10],[707,1],[732,1],[758,1],[787,1],[798,2],[801,8],[810,8],[860,1],[922,2],[925,2],[963,10],[1095,1]]},"78":{"position":[[9,3],[68,1],[91,1],[93,8],[108,1],[157,1],[159,7],[173,1],[197,3],[201,1],[209,8],[218,2],[242,1],[244,7],[258,1],[291,3],[295,3],[299,1],[301,6],[308,1],[351,1],[391,1],[399,5],[405,2],[439,1],[457,1],[482,1],[497,1],[526,1],[537,2],[540,2],[578,10],[661,1]]},"80":{"position":[[9,3],[74,1],[99,9],[155,8],[206,8],[243,3],[247,3],[251,1],[253,5],[259,1],[308,1],[348,1],[356,5],[362,2],[402,1],[420,1],[445,1],[466,1],[495,1],[506,2],[509,2],[547,10],[636,1]]},"82":{"position":[[9,3],[13,5],[19,3],[23,3],[27,1],[29,6],[36,1],[42,1],[88,1],[94,1],[131,1],[137,1],[142,10],[153,2],[190,1],[192,2],[228,1],[253,1],[271,1],[300,1],[335,1],[347,1],[349,2],[352,2],[383,1],[436,2],[439,4],[483,1],[522,2],[525,33],[570,1],[577,1],[587,1],[589,2],[592,10],[603,16],[640,1],[687,1],[689,1],[699,1],[701,2],[716,6],[739,2],[748,1],[772,1],[774,1],[776,2],[796,5],[811,1],[836,1],[854,1],[883,1],[898,1],[900,2],[903,2],[906,4],[923,1],[976,2],[1041,1],[1048,1],[1058,1],[1060,2],[1135,1],[1162,4],[1167,1],[1181,2],[1184,10],[1195,16],[1232,1],[1279,1],[1281,1],[1291,1],[1293,2],[1308,6],[1331,2],[1340,1],[1364,1],[1366,1],[1368,2],[1388,5],[1403,1],[1428,1],[1446,1],[1475,1],[1490,1],[1492,2],[1495,2],[1498,4],[1515,1],[1552,2],[1617,1],[1624,1],[1634,1],[1636,2],[1708,14],[1736,8],[1767,1],[1794,4],[1799,1],[1834,2],[1837,10],[1848,16],[1885,1],[1932,1],[1934,1],[1944,1],[1946,2],[1961,6],[1984,2],[1993,1],[2017,1],[2019,1],[2021,1]]},"84":{"position":[[9,3],[72,1],[74,3],[78,1],[80,5],[86,17],[104,2],[128,1],[130,8],[149,1],[209,3],[213,1],[225,7],[233,2],[318,3],[322,1],[334,6],[341,2],[388,1],[390,7],[426,3],[430,3],[434,1],[436,14],[451,1],[498,1],[586,1],[594,5],[600,2],[638,1],[656,1],[681,1],[700,1],[729,1],[740,2],[743,2],[781,10],[868,1]]},"86":{"position":[[9,3],[84,1],[115,1],[169,3],[173,1],[212,2],[240,1],[319,3],[323,1],[333,1],[335,1],[350,2],[370,3],[374,1],[376,6],[383,9],[393,1],[395,1],[416,2],[467,3],[471,3],[475,1],[477,4],[482,1],[488,1],[532,1],[538,1],[543,5],[549,2],[600,1],[618,1],[643,1],[658,1],[687,1],[715,1],[740,1],[754,1],[771,1],[813,1],[863,1],[890,1],[946,1],[994,2],[997,9],[1007,11],[1353,2],[1356,4],[1361,2],[1364,8],[1373,2],[1387,2],[1390,7],[1398,2],[1401,5],[1407,15],[1457,1],[1533,2],[1536,7],[1550,11],[1652,2],[1655,8],[1694,1],[1735,1],[1831,2],[1914,2],[1917,4],[1974,2],[1977,1],[1979,1],[1981,1],[1983,1],[1985,4],[1990,2],[1993,5],[2003,1],[2012,2],[2015,4],[2020,6],[2027,10],[2038,19],[2149,2],[2152,7],[2170,1],[2481,2],[2484,7],[2492,2],[2495,4],[2500,1],[2502,2],[2505,5],[2511,12],[2524,2],[2540,6],[2666,2],[2678,7],[2686,3],[2690,2],[2693,9],[2703,6],[2710,2],[2713,4],[2718,13],[2732,6],[2780,2],[2783,4],[2858,1],[2860,1]]},"88":{"position":[[9,3],[76,1],[78,3],[82,1],[84,3],[88,1],[90,1],[111,2],[155,3],[159,1],[161,2],[164,1],[166,1],[187,2],[233,3],[237,1],[239,2],[242,1],[244,1],[265,2],[311,3],[315,1],[317,13],[331,10],[342,1],[344,1],[365,2],[414,3],[418,1],[420,12],[433,1],[435,1],[456,2],[500,3],[504,3],[508,1],[510,30],[541,1],[547,1],[595,1],[601,1],[606,5],[612,1],[614,1],[635,2],[677,1],[695,1],[720,1],[743,1],[772,1],[819,1],[846,2],[849,5],[887,1],[989,1],[1172,2],[1175,4],[1210,1],[1312,1],[1478,2],[1481,16],[1513,4],[1518,2],[1521,11],[1616,2],[1619,4],[1654,1],[1746,1],[1804,2],[1807,1],[1819,10],[1832,2],[1835,6],[1842,9],[1852,11],[1864,9],[1931,2],[1934,10],[1945,4],[1950,4],[1955,10],[2003,1],[2171,1],[2249,2],[2252,6],[2309,11],[2394,2],[2397,4],[2477,2],[2480,11],[2523,1],[2680,1],[2809,2],[2839,1],[2955,2],[2977,1],[3124,1],[3267,1]]},"90":{"position":[[20,3],[24,5],[30,3],[34,3],[38,1],[40,6],[47,1],[90,1],[130,1],[153,4],[158,1],[166,5],[172,2],[209,1],[235,1],[260,1],[269,1],[286,1],[317,1],[342,1],[360,1],[389,1],[400,2],[403,2],[441,10],[550,1]]},"92":{"position":[[9,3],[132,1],[223,3],[227,1],[235,2],[306,3],[310,3],[314,1],[316,5],[322,1],[374,1],[460,1],[468,5],[474,2],[517,1],[535,1],[560,1],[584,1],[613,1],[624,2],[627,2],[665,10],[757,1]]},"94":{"position":[[28,3],[67,8],[131,1],[191,1],[241,1],[249,10],[320,1],[380,1],[434,1],[466,1],[468,2],[471,12],[541,1],[601,1],[607,2],[657,1],[663,2],[666,14],[745,1],[805,1],[811,2],[865,1],[1014,1],[1016,6],[1023,1],[1025,1],[1059,8],[1123,1],[1179,1],[1229,1],[1237,10],[1308,1],[1364,1],[1418,1],[1450,1],[1452,2],[1455,12],[1525,1],[1581,1],[1587,2],[1637,1],[1643,2],[1646,14],[1725,1],[1781,1],[1787,2],[1841,1],[1987,3],[1991,3],[1995,1],[1997,9],[2007,1],[2013,1],[2057,1],[2063,1],[2068,5],[2074,1],[2076,1],[2097,2],[2141,1],[2159,1],[2184,1],[2209,1],[2238,1],[2249,2],[2252,2],[2290,10],[2377,1]]},"96":{"position":[[9,3],[13,5],[19,3],[23,3],[27,1],[29,10],[40,1],[46,1],[85,1],[91,1],[108,3],[112,1],[118,1],[123,5],[129,2],[170,1],[172,2],[179,7],[187,2],[190,2],[221,9],[231,6],[238,2],[275,9],[285,9],[311,1],[336,1],[358,1],[387,1],[398,2],[401,4],[440,1],[464,2],[467,7],[572,1],[687,2],[690,5],[733,1],[757,2],[760,6],[817,15],[932,2],[935,4],[1045,1],[1064,2],[1067,4],[1177,2],[1180,5],[1186,6],[1193,8],[1202,11],[1270,1],[1348,2],[1351,2],[1389,10],[1524,2],[1552,4],[1557,8],[1566,2],[1597,1],[1622,1],[1644,1],[1673,1],[1771,1],[1845,1],[1847,2],[1850,6],[1877,2],[1880,8],[1897,3],[1970,1],[1972,2],[1975,6],[1982,2],[1985,5],[1991,6],[2037,20],[2098,1],[2128,2],[2145,4],[2150,2],[2153,9],[2178,1],[2198,4],[2203,5],[2224,2],[2263,2],[2304,2],[2307,2],[2327,22],[2380,1],[2480,2],[2483,6],[2609,2],[2612,9],[2652,4],[2672,3],[2684,8],[2693,1],[2695,1],[2730,2],[2752,3],[2756,2],[2778,2],[2803,8],[2812,18],[2831,2],[2850,6],[2877,1],[2902,1],[2924,1],[2953,1],[3051,1],[3125,1],[3127,2],[3130,6],[3157,2],[3160,8],[3177,3],[3250,1],[3262,1],[3283,2],[3319,1],[3369,2],[3372,6],[3379,15],[3409,2],[3412,11],[3454,1],[3548,2],[3551,6],[3698,2],[3720,7],[3728,9],[3738,2],[3741,4],[3766,11],[3804,4],[3824,3],[3828,2],[3839,11],[3903,1],[3905,1],[3940,1]]},"98":{"position":[[28,3],[126,1],[144,1],[166,1],[187,1],[218,1],[220,2],[223,3],[232,5],[264,1],[418,3],[422,3],[426,1],[428,5],[434,1],[440,1],[501,1],[507,1],[524,3],[528,1],[534,1],[539,5],[545,1],[547,1],[568,2],[602,1],[604,2],[611,2],[630,1],[655,1],[670,1],[699,1],[710,2],[750,2],[753,2],[791,10],[878,2],[885,10],[905,1],[930,1],[945,1],[974,1],[985,2],[1008,3],[1014,35],[1086,1],[1117,2],[1120,2],[1158,10],[1280,1]]},"100":{"position":[[9,3],[13,5],[19,3],[23,3],[27,1],[40,1],[82,1],[102,2],[136,1],[154,1],[179,1],[194,1],[223,1],[234,2],[261,17],[279,2],[282,2],[325,1],[337,1],[351,1],[404,2],[477,1],[540,2],[589,7],[620,1],[702,1],[761,2],[764,9],[826,2],[829,24],[906,1],[916,1],[918,2],[933,6],[956,2],[965,1],[989,1],[991,1],[993,1]]},"102":{"position":[[9,3],[13,5],[19,3],[23,3],[27,1],[29,11],[41,1],[47,1],[97,7],[105,5],[111,1],[113,1],[119,1],[158,1],[164,1],[181,2],[221,1],[239,1],[264,1],[285,1],[314,1],[351,2],[354,7],[388,2],[391,10],[421,3],[443,1],[479,1],[505,1],[557,1],[600,1],[650,1],[692,1],[742,1],[784,1],[879,1]]},"104":{"position":[[9,3],[86,1],[242,3],[246,3],[250,1],[252,10],[263,1],[269,1],[271,39],[311,15],[327,9],[337,1],[389,1],[395,1],[442,21],[464,9],[474,1],[476,1],[482,1],[540,1],[546,1],[600,1],[606,1],[611,5],[617,2],[669,1],[687,1],[712,1],[745,1],[774,1],[785,2],[788,2],[826,10],[997,1],[1052,1],[1093,1],[1152,1],[1159,1],[1170,1],[1205,1],[1284,1],[1369,1],[1384,1]]},"106":{"position":[[9,3],[13,5],[19,6],[26,3],[30,1],[90,1],[92,1],[187,1],[261,1],[273,1],[294,2],[427,2],[452,2],[458,1],[488,1],[586,1],[729,1],[731,2],[734,3],[738,1],[740,29],[778,1],[780,1],[877,1],[952,1],[1026,2],[1029,4],[1034,40],[1117,1],[1185,1],[1291,1],[1389,1],[1526,2],[1529,3],[1533,3],[1537,1],[1539,39],[1579,1],[1585,1],[1655,22],[1686,1],[1692,1],[1731,1],[1737,1],[1742,5],[1811,1],[1817,1],[1822,5],[1828,2],[1870,1],[1888,1],[1913,1],[1936,1],[1965,1],[1976,2],[1979,2],[2017,10],[2203,1]]},"108":{"position":[[9,3],[13,5],[19,6],[26,3],[30,1],[32,19],[52,1],[54,1],[145,1],[217,1],[263,1],[277,1],[349,1],[383,2],[386,4],[391,9],[417,1],[515,2],[518,6],[577,2],[580,12],[645,1],[647,2],[650,3],[654,3],[658,1],[660,4],[665,1],[671,1],[710,1],[716,1],[721,5],[755,1],[761,1],[766,5],[772,2],[808,1],[826,1],[851,1],[868,1],[897,1],[908,2],[911,2],[949,10],[960,2],[1004,18],[1166,1]]},"110":{"position":[[9,3],[72,1],[74,3],[78,1],[80,5],[86,17],[104,2],[128,1],[130,8],[149,1],[209,3],[213,1],[225,7],[233,2],[318,3],[322,1],[334,6],[341,2],[388,1],[390,7],[457,1],[459,3],[463,1],[465,5],[471,17],[489,2],[513,1],[515,8],[534,1],[594,3],[598,1],[610,7],[618,2],[703,3],[707,1],[719,6],[726,2],[773,1],[775,7],[811,3],[815,3],[819,1],[821,16],[838,1],[844,1],[873,7],[881,1],[887,1],[931,1],[937,1],[942,5],[948,2],[990,1],[992,2],[1015,1],[1040,1],[1063,1],[1092,1],[1103,2],[1106,2],[1144,10],[1257,1],[1306,1],[1332,1],[1379,1],[1426,1],[1476,1],[1523,1],[1573,1],[1618,1],[1713,1],[1762,1],[1788,1],[1828,1],[1868,1],[1918,1],[1958,1],[2008,1],[2046,1],[2141,1]]},"113":{"position":[[9,3],[13,3],[17,1],[19,7],[27,2],[63,1],[65,2],[88,1],[113,1],[130,1],[159,1],[170,2],[173,2],[211,10],[294,1],[330,1],[356,1],[403,1],[447,1],[497,1],[540,1],[590,1],[633,1],[728,1],[768,1],[794,1],[833,1],[840,1],[851,1],[871,1],[914,1],[974,1],[989,1]]},"115":{"position":[[0,5],[127,3],[131,5],[137,7],[145,3],[149,3],[153,1],[181,1],[187,1],[230,1],[236,1],[241,5],[247,2],[250,1],[256,1],[311,2],[408,1],[410,2],[413,4],[593,2],[657,1],[791,1],[802,1],[907,1]]},"117":{"position":[[13,3],[17,5],[23,7],[31,3],[35,3],[39,1],[82,1],[84,1],[99,2],[226,1],[228,2],[231,4],[281,1],[417,2],[481,1],[615,1],[626,1],[638,2],[641,10],[777,1],[799,1],[801,2],[942,1],[1016,8],[1025,1],[1098,1],[1100,1]]},"119":{"position":[[0,2]]},"121":{"position":[[187,5]]},"125":{"position":[[3,4],[23,4]]},"127":{"position":[[0,9],[22,3],[29,8],[38,27],[124,8],[144,4],[149,2],[152,22],[175,17]]},"134":{"position":[[50,55],[106,5],[124,1],[126,7],[146,6],[153,6],[160,8],[169,8]]},"136":{"position":[[0,26],[158,3],[162,1],[164,5],[170,1],[212,1],[285,1],[293,5],[299,2],[333,1],[351,1],[376,1],[385,1],[402,1],[417,2],[420,2],[452,8],[544,1],[679,3],[683,1],[685,5],[691,1],[771,1],[779,5],[785,2],[820,1],[838,1],[863,1],[873,1],[902,1],[913,2],[916,2],[954,10],[965,2],[978,1],[1067,1],[1200,3],[1204,1],[1232,1],[1278,1],[1286,5],[1292,2],[1295,1],[1353,2],[1450,1],[1452,2],[1455,4],[1594,2],[1658,1],[1759,1],[1770,1],[1875,1],[1877,3],[1881,1],[1883,4],[1888,1],[1932,1],[2007,1],[2015,5],[2021,2],[2121,1],[2250,1]]},"138":{"position":[[0,2],[3,4]]},"142":{"position":[[13,3],[17,5],[23,3],[81,1],[147,3],[151,3],[155,1],[157,6],[164,1],[166,1],[181,2],[215,1],[217,2],[220,4],[225,3],[229,9],[239,13],[253,4],[258,12],[295,1],[320,1],[329,1],[346,1],[355,1],[372,1],[389,2],[396,6],[419,1],[444,1],[459,1],[488,1],[499,2],[502,2],[519,10],[548,1],[698,2],[722,1],[747,1],[762,1],[791,1],[802,2],[805,2],[822,10],[857,1],[906,6],[1015,1]]},"144":{"position":[[13,3],[17,5],[23,3],[27,5],[33,3],[37,3],[41,1],[43,4],[48,1],[50,1],[65,2],[97,1],[99,2],[102,4],[107,3],[111,9],[121,13],[135,4],[140,12],[153,2],[163,7],[171,6],[178,4],[214,1],[239,1],[248,1],[265,1],[274,1],[291,1],[306,2],[313,11],[325,3],[345,1],[370,1],[383,1],[412,1],[423,2],[426,2],[443,10],[535,2],[542,3],[546,2],[549,12],[567,2],[598,1],[623,1],[636,1],[665,1],[755,1],[757,1],[759,2],[762,6],[784,3],[788,2],[795,3],[799,2],[802,12],[824,1],[849,1],[862,1],[891,1],[926,1],[1016,1],[1127,2],[1130,8],[1161,1]]},"146":{"position":[[13,3],[17,5],[23,3],[27,5],[33,3],[37,3],[41,1],[43,5],[49,1],[51,1],[66,2],[101,1],[103,2],[106,4],[111,3],[115,9],[125,13],[139,4],[144,12],[157,2],[160,2],[163,6],[170,3],[209,1],[234,1],[243,1],[260,1],[269,1],[286,1],[320,1],[345,1],[361,1],[390,1],[425,1],[515,1],[550,2],[553,4],[600,21],[647,2],[677,21],[699,2],[702,4],[742,5],[765,15],[781,5],[787,2],[790,6],[808,5],[836,1],[1018,1],[1171,1]]},"148":{"position":[[13,3],[17,5],[23,3],[27,5],[33,3],[37,3],[41,1],[43,9],[53,1],[59,1],[61,8],[113,1],[115,1],[130,2],[174,1],[176,2],[179,4],[184,3],[188,9],[198,13],[212,4],[217,12],[230,2],[233,2],[236,6],[243,3],[258,2],[261,4],[313,1],[338,1],[347,1],[364,1],[373,1],[390,1],[437,1],[462,1],[487,1],[516,1],[551,1],[641,1],[676,2],[679,6],[762,2],[801,1],[908,2],[916,7],[924,7],[932,2],[947,6],[987,1],[1043,1],[1163,2],[1166,3],[1196,2],[1215,3],[1287,2],[1290,9],[1300,11],[1324,31],[1356,2],[1359,4],[1418,1]]},"150":{"position":[[13,3],[17,5],[23,3],[27,5],[33,3],[37,3],[41,1],[43,5],[49,1],[51,1],[66,2],[104,1],[106,2],[109,4],[114,3],[118,9],[128,13],[142,4],[147,12],[160,2],[163,2],[166,6],[173,3],[212,1],[237,1],[246,1],[263,1],[272,1],[289,1],[326,1],[351,1],[370,1],[399,1],[434,1],[524,1],[581,1],[778,1],[885,2],[888,6],[917,1]]},"152":{"position":[[19,3],[23,5],[29,3],[33,5],[39,3],[43,3],[47,1],[49,9],[59,1],[61,1],[82,2],[119,1],[121,2],[124,4],[129,3],[133,9],[143,13],[157,4],[162,12],[175,2],[178,2],[181,6],[188,3],[203,5],[247,1],[272,1],[281,1],[298,1],[307,1],[324,1],[360,1],[385,1],[403,1],[432,1],[467,1],[557,1],[614,1],[687,2],[700,11],[712,7],[1184,1],[1291,2],[1294,6],[1323,1]]},"154":{"position":[[0,2],[3,4]]},"158":{"position":[[9,3],[67,1],[139,4],[144,2],[147,7],[291,1],[293,3],[297,1],[330,7],[338,2],[378,1],[385,3],[389,1],[391,5],[397,2],[438,1],[493,3],[497,1],[549,2],[603,1],[605,2],[662,1],[679,1],[681,3],[685,1],[741,1],[743,1],[760,2],[804,1],[819,1],[830,1],[832,3],[836,1],[838,14],[853,1],[855,1],[938,1],[955,2],[1027,1],[1104,2],[1178,2],[1194,1],[1208,2],[1211,6],[1238,1],[1293,1],[1295,1],[1297,3],[1301,1],[1303,9],[1313,5],[1319,1],[1321,1],[1338,2],[1407,1],[1409,2],[1412,25],[1473,1],[1475,3],[1479,1],[1481,7],[1489,2],[1516,1],[1621,2],[1624,4],[1629,3],[1633,1],[1708,1],[1748,1],[1750,2],[1821,2],[1824,3],[1828,3],[1832,1],[1834,5],[1840,1],[1846,1],[1885,1],[1891,1],[1961,1],[1967,1],[1972,5],[1978,2],[2012,1],[2014,2],[2052,2],[2090,1],[2115,1],[2124,1],[2141,1],[2156,2],[2159,2],[2191,8],[2200,2],[2218,6],[2225,10],[2318,1],[2320,1],[2345,1],[2357,1],[2411,1],[2435,2],[2443,2],[2446,5],[2485,1],[2510,1],[2519,1],[2536,1],[2551,2],[2554,2],[2586,8],[2665,1],[2667,3],[2671,1],[2673,8],[2682,2],[2721,1],[2728,3],[2732,5],[2738,2],[2779,1],[2903,1],[2957,2],[2973,1],[2987,2],[2990,6],[3017,1],[3072,1],[3074,1],[3142,1],[3156,1],[3158,3],[3162,1],[3164,7],[3172,2],[3199,1],[3274,1],[3297,2],[3300,7],[3375,2],[3392,1],[3417,1],[3426,1],[3443,1],[3458,2],[3461,2],[3493,8],[3585,2],[3602,1],[3627,1],[3636,1],[3653,1],[3668,2],[3708,1],[3720,1],[3734,1],[3810,2],[3856,1],[3890,2],[3932,1],[3942,1],[3960,2],[3969,1],[3971,2],[3974,29],[4026,1],[4028,1],[4030,1]]},"160":{"position":[[20,3],[85,1],[87,3],[91,1],[93,7],[101,5],[113,1],[154,2],[178,1],[210,3],[214,1],[216,35],[252,2],[345,4],[350,6],[357,8],[366,3],[370,3],[374,1],[376,10],[387,1],[389,1],[466,1],[546,1],[554,5],[560,2],[599,1],[617,1],[642,1],[651,1],[668,1],[683,2],[798,1]]},"162":{"position":[[20,3],[24,5],[30,4],[35,6],[42,3],[46,3],[50,1],[96,1],[102,1],[141,1],[147,1],[217,1],[223,1],[228,5],[234,2],[270,1],[288,1],[313,1],[322,1],[339,1],[354,2],[367,2],[370,6],[545,2],[567,1],[592,1],[601,1],[618,1],[657,1],[669,1],[683,1],[719,2],[722,6],[729,5],[794,1],[915,1],[1015,2],[1018,4],[1065,10],[1118,1],[1128,1],[1146,2],[1155,1],[1157,2],[1160,29],[1212,1],[1214,1],[1216,1]]},"164":{"position":[[20,3],[83,1],[85,3],[89,1],[91,4],[96,14],[111,12],[124,2],[152,1],[212,3],[216,1],[228,19],[248,2],[312,3],[316,1],[318,10],[329,2],[383,4],[388,6],[395,6],[402,7],[480,1],[529,1],[552,1],[610,1],[644,1],[646,3],[650,1],[652,9],[662,1],[664,1],[681,1],[691,2],[769,1],[778,6],[785,1],[831,1],[833,3],[837,1],[839,10],[850,3],[854,1],[856,1],[866,2],[961,1],[1011,2],[1014,3],[1018,3],[1022,1],[1024,14],[1039,1],[1045,1],[1112,1],[1218,1],[1296,1],[1304,5],[1310,2],[1347,1],[1365,1],[1390,1],[1399,1],[1416,1],[1431,2],[1434,2],[1541,2],[1544,4],[1582,12],[1632,2],[1675,2],[1732,2],[1762,1]]},"166":{"position":[[20,3],[24,5],[30,4],[35,6],[42,3],[46,3],[50,1],[52,3],[56,1],[58,1],[100,1],[173,1],[286,1],[345,2],[386,1],[404,1],[429,1],[438,1],[455,1],[470,2],[473,2],[578,2],[681,1]]},"168":{"position":[[20,3],[24,5],[30,3],[34,3],[38,1],[40,28],[69,2],[108,1],[126,1],[151,1],[160,1],[177,1],[192,2],[195,2],[261,1],[350,1],[358,1],[410,1],[412,2],[415,2],[501,1],[581,1],[592,1],[594,2],[597,10],[608,6],[615,6],[672,1],[674,1]]},"170":{"position":[[20,3],[24,5],[30,4],[35,6],[73,3],[77,1],[79,10],[90,1],[92,1],[109,1],[126,2],[226,1],[281,2],[284,6],[311,2],[345,2],[378,2],[386,2],[441,5],[447,1],[449,3],[453,3],[457,1],[459,6],[466,1],[468,1],[474,1],[513,1],[519,1],[593,1],[599,1],[604,5],[610,2],[644,1],[662,1],[687,1],[696,1],[713,1],[728,2],[731,2],[850,1]]},"172":{"position":[[28,3],[91,1],[136,4],[141,6],[148,6],[161,2],[240,1],[316,2],[385,2],[458,1],[538,1],[736,1],[857,1],[905,1],[1012,1],[1014,9],[1150,1],[1157,1],[1194,1],[1445,1],[1447,2],[1450,3],[1454,3],[1458,1],[1460,22],[1483,1],[1489,1],[1491,52],[1544,1],[1546,1],[1552,1],[1596,1],[1602,1],[1671,1],[1677,1],[1682,5],[1688,1],[1690,1],[1711,2],[1744,1],[1762,1],[1787,1],[1796,1],[1813,1],[1829,2],[1832,2],[1935,2],[1938,6],[1945,5],[1989,2],[1992,7],[2000,5],[2046,2],[2049,11],[2061,5],[2121,1]]},"174":{"position":[[9,3],[79,1],[114,2],[117,4],[122,5],[128,2],[131,2],[231,2],[234,12],[247,9],[257,6],[264,9],[314,4],[319,6],[326,2],[329,3],[333,1],[335,10],[346,1],[348,1],[354,1],[405,1],[411,1],[485,1],[491,1],[496,5],[502,1],[504,1],[525,2],[561,1],[579,1],[604,1],[613,1],[630,1],[653,2],[656,2],[795,1]]},"176":{"position":[[20,3],[87,1],[89,3],[93,1],[95,8],[104,4],[109,2],[132,4],[137,6],[173,3],[177,1],[179,5],[185,34],[220,8],[229,1],[231,1],[250,1],[267,1],[287,2],[370,1],[428,2],[431,14],[446,8],[455,2],[458,9],[538,1],[592,1],[793,1],[795,1],[797,3],[801,3],[805,1],[807,9],[817,1],[819,1],[825,1],[873,1],[879,1],[954,1],[960,1],[965,5],[971,2],[1008,1],[1026,1],[1051,1],[1060,1],[1077,1],[1092,2],[1095,2],[1224,1]]},"178":{"position":[[20,4],[116,1],[118,3],[122,1],[155,7],[163,2],[203,1],[258,1],[394,1],[497,2],[513,1],[542,1],[597,1],[599,1],[667,1],[704,1],[706,3],[710,1],[712,7],[720,2],[747,1],[822,2],[825,3],[829,3],[833,1],[835,7],[843,2],[878,1],[896,1],[921,1],[930,1],[947,1],[962,2],[965,2],[1068,1]]},"180":{"position":[[0,5],[147,3],[151,5],[157,6],[164,4],[169,6],[176,6],[183,3],[187,3],[191,1],[193,4],[198,1],[204,1],[245,1],[251,1],[323,1],[329,1],[334,5],[340,2],[440,1],[569,1]]},"182":{"position":[[0,2],[3,4]]},"186":{"position":[[9,3],[67,1],[208,3],[212,1],[214,6],[221,2],[261,3],[265,3],[269,1],[271,5],[277,1],[283,1],[322,1],[328,1],[333,5],[339,2],[374,1],[376,2],[379,2],[433,6],[440,2],[453,2],[491,1],[516,1],[532,1],[561,1],[572,2],[575,2],[613,10],[624,2],[637,1],[723,1],[725,1],[727,2],[730,6],[752,3],[756,2],[772,1],[797,1],[813,1],[842,1],[853,2],[856,2],[894,10],[905,2],[918,1],[1007,2],[1023,1],[1048,1],[1064,1],[1093,1],[1104,2],[1107,2],[1150,1],[1162,1],[1176,1],[1251,1],[1329,1],[1339,1],[1341,2],[1356,6],[1379,2],[1388,1],[1412,1],[1414,1],[1416,1]]},"188":{"position":[[9,3],[13,5],[19,3],[23,3],[27,1],[29,10],[40,1],[46,1],[85,1],[91,1],[96,14],[111,1],[117,1],[122,5],[128,1],[130,1],[145,2],[190,1],[208,1],[233,1],[259,1],[288,1],[299,2],[302,6],[402,2],[405,8],[414,7],[463,1],[525,2],[528,2],[566,10],[707,1],[732,1],[758,1],[787,1],[798,2],[801,8],[810,8],[860,1],[922,2],[925,2],[963,10],[1095,1]]},"190":{"position":[[9,3],[68,1],[91,1],[93,8],[108,1],[157,1],[159,7],[173,1],[197,3],[201,1],[209,8],[218,2],[242,1],[244,7],[258,1],[291,3],[295,3],[299,1],[301,6],[308,1],[351,1],[391,1],[399,5],[405,2],[439,1],[457,1],[482,1],[497,1],[526,1],[537,2],[540,2],[578,10],[661,1]]},"192":{"position":[[9,3],[74,1],[99,9],[155,8],[206,8],[243,3],[247,3],[251,1],[253,5],[259,1],[308,1],[348,1],[356,5],[362,2],[402,1],[420,1],[445,1],[466,1],[495,1],[506,2],[509,2],[547,10],[636,1]]},"194":{"position":[[9,3],[13,5],[19,3],[23,3],[27,1],[29,6],[36,1],[42,1],[88,1],[94,1],[131,1],[137,1],[142,10],[153,2],[190,1],[192,2],[228,1],[253,1],[271,1],[300,1],[335,1],[347,1],[349,2],[352,2],[383,1],[436,2],[439,4],[483,1],[522,2],[525,33],[570,1],[577,1],[587,1],[589,2],[592,10],[603,16],[640,1],[687,1],[689,1],[699,1],[701,2],[716,6],[739,2],[748,1],[772,1],[774,1],[776,2],[796,5],[811,1],[836,1],[854,1],[883,1],[898,1],[900,2],[903,2],[906,4],[923,1],[976,2],[1041,1],[1048,1],[1058,1],[1060,2],[1135,1],[1162,4],[1167,1],[1181,2],[1184,10],[1195,16],[1232,1],[1279,1],[1281,1],[1291,1],[1293,2],[1308,6],[1331,2],[1340,1],[1364,1],[1366,1],[1368,2],[1388,5],[1403,1],[1428,1],[1446,1],[1475,1],[1490,1],[1492,2],[1495,2],[1498,4],[1515,1],[1552,2],[1617,1],[1624,1],[1634,1],[1636,2],[1708,14],[1736,8],[1767,1],[1794,4],[1799,1],[1834,2],[1837,10],[1848,16],[1885,1],[1932,1],[1934,1],[1944,1],[1946,2],[1961,6],[1984,2],[1993,1],[2017,1],[2019,1],[2021,1]]},"196":{"position":[[9,3],[72,1],[74,3],[78,1],[80,5],[86,17],[104,2],[128,1],[130,8],[149,1],[209,3],[213,1],[225,7],[233,2],[318,3],[322,1],[334,6],[341,2],[388,1],[390,7],[426,3],[430,3],[434,1],[436,14],[451,1],[498,1],[586,1],[594,5],[600,2],[638,1],[656,1],[681,1],[700,1],[729,1],[740,2],[743,2],[781,10],[868,1]]},"198":{"position":[[9,3],[84,1],[115,1],[169,3],[173,1],[212,2],[240,1],[319,3],[323,1],[333,1],[335,1],[350,2],[370,3],[374,1],[376,6],[383,9],[393,1],[395,1],[416,2],[467,3],[471,3],[475,1],[477,4],[482,1],[488,1],[532,1],[538,1],[543,5],[549,2],[600,1],[618,1],[643,1],[658,1],[687,1],[715,1],[740,1],[754,1],[771,1],[813,1],[863,1],[890,1],[946,1],[994,2],[997,9],[1007,11],[1353,2],[1356,4],[1361,2],[1364,8],[1373,2],[1387,2],[1390,7],[1398,2],[1401,5],[1407,15],[1457,1],[1533,2],[1536,7],[1550,11],[1652,2],[1655,8],[1694,1],[1735,1],[1831,2],[1914,2],[1917,4],[1974,2],[1977,1],[1979,1],[1981,1],[1983,1],[1985,4],[1990,2],[1993,5],[2003,1],[2012,2],[2015,4],[2020,6],[2027,10],[2038,19],[2149,2],[2152,7],[2170,1],[2481,2],[2484,7],[2492,2],[2495,4],[2500,1],[2502,2],[2505,5],[2511,12],[2524,2],[2540,6],[2666,2],[2678,7],[2686,3],[2690,2],[2693,9],[2703,6],[2710,2],[2713,4],[2718,13],[2732,6],[2780,2],[2783,4],[2858,1],[2860,1]]},"200":{"position":[[9,3],[76,1],[78,3],[82,1],[84,3],[88,1],[90,1],[111,2],[155,3],[159,1],[161,2],[164,1],[166,1],[187,2],[233,3],[237,1],[239,2],[242,1],[244,1],[265,2],[311,3],[315,1],[317,13],[331,10],[342,1],[344,1],[365,2],[414,3],[418,1],[420,12],[433,1],[435,1],[456,2],[500,3],[504,3],[508,1],[510,30],[541,1],[547,1],[595,1],[601,1],[606,5],[612,1],[614,1],[635,2],[677,1],[695,1],[720,1],[743,1],[772,1],[819,1],[846,2],[849,5],[887,1],[989,1],[1172,2],[1175,4],[1210,1],[1312,1],[1478,2],[1481,16],[1513,4],[1518,2],[1521,11],[1616,2],[1619,4],[1654,1],[1746,1],[1804,2],[1807,1],[1819,10],[1832,2],[1835,6],[1842,9],[1852,11],[1864,9],[1931,2],[1934,10],[1945,4],[1950,4],[1955,10],[2003,1],[2171,1],[2249,2],[2252,6],[2309,11],[2394,2],[2397,4],[2477,2],[2480,11],[2523,1],[2680,1],[2809,2],[2839,1],[2955,2],[2977,1],[3124,1],[3267,1]]},"202":{"position":[[20,3],[24,5],[30,3],[34,3],[38,1],[40,6],[47,1],[90,1],[130,1],[153,4],[158,1],[166,5],[172,2],[209,1],[235,1],[260,1],[269,1],[286,1],[317,1],[342,1],[360,1],[389,1],[400,2],[403,2],[441,10],[550,1]]},"204":{"position":[[9,3],[132,1],[223,3],[227,1],[235,2],[306,3],[310,3],[314,1],[316,5],[322,1],[374,1],[460,1],[468,5],[474,2],[517,1],[535,1],[560,1],[584,1],[613,1],[624,2],[627,2],[665,10],[757,1]]},"206":{"position":[[28,3],[67,8],[131,1],[191,1],[241,1],[249,10],[320,1],[380,1],[434,1],[466,1],[468,2],[471,12],[541,1],[601,1],[607,2],[657,1],[663,2],[666,14],[745,1],[805,1],[811,2],[865,1],[1014,1],[1016,6],[1023,1],[1025,1],[1059,8],[1123,1],[1179,1],[1229,1],[1237,10],[1308,1],[1364,1],[1418,1],[1450,1],[1452,2],[1455,12],[1525,1],[1581,1],[1587,2],[1637,1],[1643,2],[1646,14],[1725,1],[1781,1],[1787,2],[1841,1],[1987,3],[1991,3],[1995,1],[1997,9],[2007,1],[2013,1],[2057,1],[2063,1],[2068,5],[2074,1],[2076,1],[2097,2],[2141,1],[2159,1],[2184,1],[2209,1],[2238,1],[2249,2],[2252,2],[2290,10],[2377,1]]},"208":{"position":[[9,3],[13,5],[19,3],[23,3],[27,1],[29,10],[40,1],[46,1],[85,1],[91,1],[108,3],[112,1],[118,1],[123,5],[129,2],[170,1],[172,2],[179,7],[187,2],[190,2],[221,9],[231,6],[238,2],[275,9],[285,9],[311,1],[336,1],[358,1],[387,1],[398,2],[401,4],[440,1],[464,2],[467,7],[572,1],[687,2],[690,5],[733,1],[757,2],[760,6],[817,15],[932,2],[935,4],[1045,1],[1064,2],[1067,4],[1177,2],[1180,5],[1186,6],[1193,8],[1202,11],[1270,1],[1348,2],[1351,2],[1389,10],[1524,2],[1552,4],[1557,8],[1566,2],[1597,1],[1622,1],[1644,1],[1673,1],[1771,1],[1845,1],[1847,2],[1850,6],[1877,2],[1880,8],[1897,3],[1970,1],[1972,2],[1975,6],[1982,2],[1985,5],[1991,6],[2037,20],[2098,1],[2128,2],[2145,4],[2150,2],[2153,9],[2178,1],[2198,4],[2203,5],[2224,2],[2263,2],[2304,2],[2307,2],[2327,22],[2380,1],[2480,2],[2483,6],[2609,2],[2612,9],[2652,4],[2672,3],[2684,8],[2693,1],[2695,1],[2730,2],[2752,3],[2756,2],[2778,2],[2803,8],[2812,18],[2831,2],[2850,6],[2877,1],[2902,1],[2924,1],[2953,1],[3051,1],[3125,1],[3127,2],[3130,6],[3157,2],[3160,8],[3177,3],[3250,1],[3262,1],[3283,2],[3319,1],[3369,2],[3372,6],[3379,15],[3409,2],[3412,11],[3454,1],[3548,2],[3551,6],[3698,2],[3720,7],[3728,9],[3738,2],[3741,4],[3766,11],[3804,4],[3824,3],[3828,2],[3839,11],[3903,1],[3905,1],[3940,1]]},"210":{"position":[[28,3],[126,1],[144,1],[166,1],[187,1],[218,1],[220,2],[223,3],[232,5],[264,1],[418,3],[422,3],[426,1],[428,5],[434,1],[440,1],[501,1],[507,1],[524,3],[528,1],[534,1],[539,5],[545,1],[547,1],[568,2],[602,1],[604,2],[611,2],[630,1],[655,1],[670,1],[699,1],[710,2],[750,2],[753,2],[791,10],[878,2],[885,10],[905,1],[930,1],[945,1],[974,1],[985,2],[1008,3],[1014,35],[1086,1],[1117,2],[1120,2],[1158,10],[1280,1]]},"212":{"position":[[9,3],[13,5],[19,3],[23,3],[27,1],[40,1],[82,1],[102,2],[136,1],[154,1],[179,1],[194,1],[223,1],[234,2],[261,17],[279,2],[282,2],[325,1],[337,1],[351,1],[404,2],[477,1],[540,2],[589,7],[620,1],[702,1],[761,2],[764,9],[826,2],[829,24],[906,1],[916,1],[918,2],[933,6],[956,2],[965,1],[989,1],[991,1],[993,1]]},"214":{"position":[[9,3],[13,5],[19,3],[23,3],[27,1],[29,11],[41,1],[47,1],[97,7],[105,5],[111,1],[113,1],[119,1],[158,1],[164,1],[181,2],[221,1],[239,1],[264,1],[285,1],[314,1],[351,2],[354,7],[388,2],[391,10],[421,3],[443,1],[479,1],[505,1],[557,1],[600,1],[650,1],[692,1],[742,1],[784,1],[879,1]]},"216":{"position":[[9,3],[86,1],[242,3],[246,3],[250,1],[252,10],[263,1],[269,1],[271,39],[311,15],[327,9],[337,1],[389,1],[395,1],[442,21],[464,9],[474,1],[476,1],[482,1],[540,1],[546,1],[600,1],[606,1],[611,5],[617,2],[669,1],[687,1],[712,1],[745,1],[774,1],[785,2],[788,2],[826,10],[997,1],[1052,1],[1093,1],[1152,1],[1159,1],[1170,1],[1205,1],[1284,1],[1369,1],[1384,1]]},"218":{"position":[[9,3],[13,5],[19,6],[26,3],[30,1],[90,1],[92,1],[187,1],[261,1],[273,1],[294,2],[427,2],[452,2],[458,1],[488,1],[586,1],[729,1],[731,2],[734,3],[738,1],[740,29],[778,1],[780,1],[877,1],[952,1],[1026,2],[1029,4],[1034,40],[1117,1],[1185,1],[1291,1],[1389,1],[1526,2],[1529,3],[1533,3],[1537,1],[1539,39],[1579,1],[1585,1],[1655,22],[1686,1],[1692,1],[1731,1],[1737,1],[1742,5],[1811,1],[1817,1],[1822,5],[1828,2],[1870,1],[1888,1],[1913,1],[1936,1],[1965,1],[1976,2],[1979,2],[2017,10],[2203,1]]},"220":{"position":[[9,3],[13,5],[19,6],[26,3],[30,1],[32,19],[52,1],[54,1],[145,1],[217,1],[263,1],[277,1],[349,1],[383,2],[386,4],[391,9],[417,1],[515,2],[518,6],[577,2],[580,12],[645,1],[647,2],[650,3],[654,3],[658,1],[660,4],[665,1],[671,1],[710,1],[716,1],[721,5],[755,1],[761,1],[766,5],[772,2],[808,1],[826,1],[851,1],[868,1],[897,1],[908,2],[911,2],[949,10],[960,2],[1004,18],[1166,1]]},"222":{"position":[[9,3],[72,1],[74,3],[78,1],[80,5],[86,17],[104,2],[128,1],[130,8],[149,1],[209,3],[213,1],[225,7],[233,2],[318,3],[322,1],[334,6],[341,2],[388,1],[390,7],[457,1],[459,3],[463,1],[465,5],[471,17],[489,2],[513,1],[515,8],[534,1],[594,3],[598,1],[610,7],[618,2],[703,3],[707,1],[719,6],[726,2],[773,1],[775,7],[811,3],[815,3],[819,1],[821,16],[838,1],[844,1],[873,7],[881,1],[887,1],[931,1],[937,1],[942,5],[948,2],[990,1],[992,2],[1015,1],[1040,1],[1063,1],[1092,1],[1103,2],[1106,2],[1144,10],[1257,1],[1306,1],[1332,1],[1379,1],[1426,1],[1476,1],[1523,1],[1573,1],[1618,1],[1713,1],[1762,1],[1788,1],[1828,1],[1868,1],[1918,1],[1958,1],[2008,1],[2046,1],[2141,1]]},"225":{"position":[[9,3],[13,3],[17,1],[19,7],[27,2],[63,1],[65,2],[88,1],[113,1],[130,1],[159,1],[170,2],[173,2],[211,10],[294,1],[330,1],[356,1],[403,1],[447,1],[497,1],[540,1],[590,1],[633,1],[728,1],[768,1],[794,1],[833,1],[840,1],[851,1],[871,1],[914,1],[974,1],[989,1]]},"227":{"position":[[0,5],[127,3],[131,5],[137,7],[145,3],[149,3],[153,1],[181,1],[187,1],[230,1],[236,1],[241,5],[247,2],[250,1],[256,1],[311,2],[408,1],[410,2],[413,4],[593,2],[657,1],[791,1],[802,1],[907,1]]},"229":{"position":[[13,3],[17,5],[23,7],[31,3],[35,3],[39,1],[82,1],[84,1],[99,2],[226,1],[228,2],[231,4],[281,1],[417,2],[481,1],[615,1],[626,1],[638,2],[641,10],[777,1],[799,1],[801,2],[942,1],[1016,8],[1025,1],[1098,1],[1100,1]]}}}],["0",{"_index":444,"t":{"78":{"position":[[110,2]]},"82":{"position":[[572,2],[1043,2],[1619,2]]},"86":{"position":[[2527,12]]},"98":{"position":[[1113,3]]},"104":{"position":[[1154,2]]},"106":{"position":[[455,2],[1150,2],[1153,3]]},"108":{"position":[[478,2],[481,2],[484,2],[497,2]]},"113":{"position":[[835,2]]},"190":{"position":[[110,2]]},"194":{"position":[[572,2],[1043,2],[1619,2]]},"198":{"position":[[2527,12]]},"210":{"position":[[1113,3]]},"216":{"position":[[1154,2]]},"218":{"position":[[455,2],[1150,2],[1153,3]]},"220":{"position":[[478,2],[481,2],[484,2],[497,2]]},"225":{"position":[[835,2]]}}}],["03",{"_index":98,"t":{"24":{"position":[[968,9]]},"74":{"position":[[627,9],[908,9]]},"136":{"position":[[968,9]]},"186":{"position":[[627,9],[908,9]]}}}],["03版的excel",{"_index":296,"t":{"50":{"position":[[1041,23]]},"162":{"position":[[1041,23]]}}}],["1",{"_index":40,"t":{"9":{"position":[[77,9]]},"30":{"position":[[392,3]]},"32":{"position":[[309,3]]},"46":{"position":[[1848,2]]},"50":{"position":[[104,2]]},"54":{"position":[[634,18]]},"58":{"position":[[314,4],[476,2]]},"60":{"position":[[1554,2]]},"62":{"position":[[356,2]]},"64":{"position":[[827,2]]},"68":{"position":[[206,2]]},"74":{"position":[[285,2],[443,3]]},"76":{"position":[[48,2]]},"78":{"position":[[175,2]]},"82":{"position":[[44,2],[195,3]]},"86":{"position":[[490,2]]},"88":{"position":[[549,2]]},"94":{"position":[[2015,2]]},"96":{"position":[[48,2],[175,3]]},"98":{"position":[[32,3],[168,2],[442,2],[607,3]]},"102":{"position":[[121,2]]},"104":{"position":[[484,2]]},"106":{"position":[[770,3],[1342,7],[1678,3],[1694,2]]},"108":{"position":[[510,4],[673,2]]},"110":{"position":[[889,2],[995,3]]},"113":{"position":[[68,3]]},"115":{"position":[[189,2]]},"121":{"position":[[77,9]]},"142":{"position":[[392,3]]},"144":{"position":[[309,3]]},"158":{"position":[[1848,2]]},"162":{"position":[[104,2]]},"166":{"position":[[634,18]]},"170":{"position":[[314,4],[476,2]]},"172":{"position":[[1554,2]]},"174":{"position":[[356,2]]},"176":{"position":[[827,2]]},"180":{"position":[[206,2]]},"186":{"position":[[285,2],[443,3]]},"188":{"position":[[48,2]]},"190":{"position":[[175,2]]},"194":{"position":[[44,2],[195,3]]},"198":{"position":[[490,2]]},"200":{"position":[[549,2]]},"206":{"position":[[2015,2]]},"208":{"position":[[48,2],[175,3]]},"210":{"position":[[32,3],[168,2],[442,2],[607,3]]},"214":{"position":[[121,2]]},"216":{"position":[[484,2]]},"218":{"position":[[770,3],[1342,7],[1678,3],[1694,2]]},"220":{"position":[[510,4],[673,2]]},"222":{"position":[[889,2],[995,3]]},"225":{"position":[[68,3]]},"227":{"position":[[189,2]]}}}],["10",{"_index":575,"t":{"94":{"position":[[193,5],[1181,5]]},"104":{"position":[[1161,3]]},"113":{"position":[[842,3]]},"206":{"position":[[193,5],[1181,5]]},"216":{"position":[[1161,3]]},"225":{"position":[[842,3]]}}}],["100",{"_index":225,"t":{"46":{"position":[[380,4],[2723,4]]},"158":{"position":[[380,4],[2723,4]]}}}],["1000",{"_index":188,"t":{"34":{"position":[[1107,6]]},"146":{"position":[[1107,6]]}}}],["100m",{"_index":54,"t":{"11":{"position":[[0,27]]},"123":{"position":[[0,27]]}}}],["1097936804",{"_index":35,"t":{"9":{"position":[[30,10]]},"121":{"position":[[30,10]]}}}],["123456789",{"_index":535,"t":{"88":{"position":[[1809,9]]},"200":{"position":[[1809,9]]}}}],["14",{"_index":585,"t":{"94":{"position":[[603,3],[1583,3]]},"206":{"position":[[603,3],[1583,3]]}}}],["17",{"_index":579,"t":{"94":{"position":[[382,5],[1366,5]]},"206":{"position":[[382,5],[1366,5]]}}}],["1，因为头就是一行。如果多行头，可以设置其他值。不传入也可以，因为默认会根据demodata",{"_index":331,"t":{"54":{"position":[[581,52]]},"166":{"position":[[581,52]]}}}],["1：jdk8",{"_index":256,"t":{"46":{"position":[[2017,9]]},"158":{"position":[[2017,9]]}}}],["1：style里面有dataformat",{"_index":633,"t":{"96":{"position":[[2781,21]]},"208":{"position":[[2781,21]]}}}],["2",{"_index":42,"t":{"9":{"position":[[96,9]]},"13":{"position":[[0,2]]},"15":{"position":[[10,8],[19,2]]},"30":{"position":[[701,3]]},"32":{"position":[[538,3]]},"46":{"position":[[1893,2],[2438,4]]},"48":{"position":[[180,2]]},"50":{"position":[[149,2]]},"58":{"position":[[381,4],[521,2]]},"60":{"position":[[1604,2]]},"62":{"position":[[413,2]]},"64":{"position":[[881,2]]},"68":{"position":[[253,2]]},"74":{"position":[[330,2],[759,3]]},"76":{"position":[[93,2]]},"82":{"position":[[96,2],[779,3]]},"86":{"position":[[540,2],[1376,10],[1834,7]]},"88":{"position":[[603,2],[1830,1],[2812,6],[2940,2],[2958,8]]},"96":{"position":[[93,2],[1527,4]]},"98":{"position":[[227,4],[266,2],[409,8],[509,2],[881,3],[988,7]]},"100":{"position":[[448,6]]},"102":{"position":[[166,2]]},"104":{"position":[[548,2]]},"106":{"position":[[774,3],[1147,2],[1350,8],[1652,2],[1682,3],[1739,2],[1819,2]]},"108":{"position":[[718,2],[763,2]]},"110":{"position":[[939,2]]},"115":{"position":[[238,2]]},"121":{"position":[[96,9]]},"125":{"position":[[0,2]]},"127":{"position":[[10,8],[19,2]]},"142":{"position":[[701,3]]},"144":{"position":[[538,3]]},"158":{"position":[[1893,2],[2438,4]]},"160":{"position":[[180,2]]},"162":{"position":[[149,2]]},"170":{"position":[[381,4],[521,2]]},"172":{"position":[[1604,2]]},"174":{"position":[[413,2]]},"176":{"position":[[881,2]]},"180":{"position":[[253,2]]},"186":{"position":[[330,2],[759,3]]},"188":{"position":[[93,2]]},"194":{"position":[[96,2],[779,3]]},"198":{"position":[[540,2],[1376,10],[1834,7]]},"200":{"position":[[603,2],[1830,1],[2812,6],[2940,2],[2958,8]]},"208":{"position":[[93,2],[1527,4]]},"210":{"position":[[227,4],[266,2],[409,8],[509,2],[881,3],[988,7]]},"212":{"position":[[448,6]]},"214":{"position":[[166,2]]},"216":{"position":[[548,2]]},"218":{"position":[[774,3],[1147,2],[1350,8],[1652,2],[1682,3],[1739,2],[1819,2]]},"220":{"position":[[718,2],[763,2]]},"222":{"position":[[939,2]]},"227":{"position":[[238,2]]}}}],["2)public",{"_index":652,"t":{"98":{"position":[[189,8]]},"210":{"position":[[189,8]]}}}],["2.0.0",{"_index":355,"t":{"60":{"position":[[7,5]]},"172":{"position":[[7,5]]}}}],["2.1.1",{"_index":135,"t":{"30":{"position":[[7,5],[175,5]]},"32":{"position":[[7,5],[59,5]]},"34":{"position":[[7,5],[60,5]]},"36":{"position":[[7,5],[124,5]]},"38":{"position":[[7,5],[60,5]]},"76":{"position":[[139,5]]},"86":{"position":[[344,5]]},"117":{"position":[[7,5],[93,5]]},"142":{"position":[[7,5],[175,5]]},"144":{"position":[[7,5],[59,5]]},"146":{"position":[[7,5],[60,5]]},"148":{"position":[[7,5],[124,5]]},"150":{"position":[[7,5],[60,5]]},"188":{"position":[[139,5]]},"198":{"position":[[344,5]]},"229":{"position":[[7,5],[93,5]]}}}],["2.2.0",{"_index":207,"t":{"40":{"position":[[7,5],[70,5]]},"60":{"position":[[1699,5]]},"62":{"position":[[513,5]]},"94":{"position":[[7,5],[2085,5]]},"98":{"position":[[7,5],[556,5]]},"152":{"position":[[7,5],[70,5]]},"172":{"position":[[1699,5]]},"174":{"position":[[513,5]]},"206":{"position":[[7,5],[2085,5]]},"210":{"position":[[7,5],[556,5]]}}}],["20",{"_index":577,"t":{"94":{"position":[[243,5],[610,12],[814,13],[1231,5],[1590,12],[1790,13]]},"115":{"position":[[710,7]]},"117":{"position":[[534,7]]},"206":{"position":[[243,5],[610,12],[814,13],[1231,5],[1590,12],[1790,13]]},"227":{"position":[[710,7]]},"229":{"position":[[534,7]]}}}],["20)public",{"_index":581,"t":{"94":{"position":[[436,9],[1420,9]]},"206":{"position":[[436,9],[1420,9]]}}}],["2019年10月9日13:28:28",{"_index":186,"t":{"34":{"position":[[1067,22]]},"36":{"position":[[850,22]]},"38":{"position":[[827,22]]},"40":{"position":[[1233,22]]},"146":{"position":[[1067,22]]},"148":{"position":[[850,22]]},"150":{"position":[[827,22]]},"152":{"position":[[1233,22]]}}}],["20@contentfontstyle(fontheightinpoint",{"_index":580,"t":{"94":{"position":[[388,45],[1372,45]]},"206":{"position":[[388,45],[1372,45]]}}}],["20@headfontstyle(fontheightinpoint",{"_index":576,"t":{"94":{"position":[[199,41],[1187,41]]},"206":{"position":[[199,41],[1187,41]]}}}],["21960511",{"_index":41,"t":{"9":{"position":[[87,8]]},"121":{"position":[[87,8]]}}}],["2：不要一直去创建style",{"_index":634,"t":{"96":{"position":[[2834,15]]},"208":{"position":[[2834,15]]}}}],["3",{"_index":44,"t":{"9":{"position":[[115,9]]},"13":{"position":[[20,2]]},"15":{"position":[[26,2]]},"32":{"position":[[791,3]]},"46":{"position":[[1969,2],[3378,4]]},"50":{"position":[[225,2]]},"58":{"position":[[601,2]]},"60":{"position":[[1679,2]]},"62":{"position":[[493,2]]},"64":{"position":[[962,2]]},"68":{"position":[[331,2]]},"74":{"position":[[1010,3]]},"76":{"position":[[119,2]]},"78":{"position":[[203,5],[260,2]]},"82":{"position":[[139,2],[1371,3]]},"86":{"position":[[2669,8]]},"94":{"position":[[2065,2]]},"96":{"position":[[120,2],[2733,4]]},"98":{"position":[[80,12],[536,2],[1012,1]]},"104":{"position":[[608,2]]},"115":{"position":[[258,2]]},"121":{"position":[[115,9]]},"125":{"position":[[20,2]]},"127":{"position":[[26,2]]},"144":{"position":[[791,3]]},"158":{"position":[[1969,2],[3378,4]]},"162":{"position":[[225,2]]},"170":{"position":[[601,2]]},"172":{"position":[[1679,2]]},"174":{"position":[[493,2]]},"176":{"position":[[962,2]]},"180":{"position":[[331,2]]},"186":{"position":[[1010,3]]},"188":{"position":[[119,2]]},"190":{"position":[[203,5],[260,2]]},"194":{"position":[[139,2],[1371,3]]},"198":{"position":[[2669,8]]},"206":{"position":[[2065,2]]},"208":{"position":[[120,2],[2733,4]]},"210":{"position":[[80,12],[536,2],[1012,1]]},"216":{"position":[[608,2]]},"227":{"position":[[258,2]]}}}],["3.0.0",{"_index":164,"t":{"32":{"position":[[577,5]]},"46":{"position":[[2062,5]]},"74":{"position":[[463,5]]},"86":{"position":[[404,5]]},"88":{"position":[[99,5],[175,5],[253,5],[353,5],[444,5],[623,5]]},"96":{"position":[[1576,5],[2766,5]]},"144":{"position":[[577,5]]},"158":{"position":[[2062,5]]},"186":{"position":[[463,5]]},"198":{"position":[[404,5]]},"200":{"position":[[99,5],[175,5],[253,5],[353,5],[444,5],[623,5]]},"208":{"position":[[1576,5],[2766,5]]}}}],["30",{"_index":587,"t":{"94":{"position":[[659,3],[867,3],[1639,3],[1843,3]]},"206":{"position":[[659,3],[867,3],[1639,3],[1843,3]]}}}],["3000",{"_index":257,"t":{"46":{"position":[[2203,14]]},"158":{"position":[[2203,14]]}}}],["32134498",{"_index":49,"t":{"9":{"position":[[163,8]]},"121":{"position":[[163,8]]}}}],["32796397",{"_index":43,"t":{"9":{"position":[[106,8]]},"121":{"position":[[106,8]]}}}],["33491624",{"_index":47,"t":{"9":{"position":[[144,8]]},"121":{"position":[[144,8]]}}}],["33797247",{"_index":45,"t":{"9":{"position":[[125,8]]},"121":{"position":[[125,8]]}}}],["34707941",{"_index":51,"t":{"9":{"position":[[178,8]]},"121":{"position":[[178,8]]}}}],["4",{"_index":46,"t":{"9":{"position":[[134,9]]},"46":{"position":[[3588,4]]},"88":{"position":[[1498,14],[3080,2]]},"121":{"position":[[134,9]]},"158":{"position":[[3588,4]]},"200":{"position":[[1498,14],[3080,2]]}}}],["40",{"_index":590,"t":{"94":{"position":[[807,3],[1783,3]]},"206":{"position":[[807,3],[1783,3]]}}}],["453928496",{"_index":37,"t":{"9":{"position":[[51,9]]},"121":{"position":[[51,9]]}}}],["496594404",{"_index":39,"t":{"9":{"position":[[67,9]]},"121":{"position":[[67,9]]}}}],["5",{"_index":48,"t":{"9":{"position":[[153,9]]},"66":{"position":[[205,2]]},"82":{"position":[[579,2],[1050,2],[1626,2]]},"98":{"position":[[128,2]]},"121":{"position":[[153,9]]},"178":{"position":[[205,2]]},"194":{"position":[[579,2],[1050,2],[1626,2]]},"210":{"position":[[128,2]]}}}],["5.2",{"_index":158,"t":{"30":{"position":[[931,5]]},"142":{"position":[[931,5]]}}}],["50",{"_index":564,"t":{"92":{"position":[[229,5]]},"204":{"position":[[229,5]]}}}],["5个sheet",{"_index":451,"t":{"82":{"position":[[979,50],[1555,50]]},"194":{"position":[[979,50],[1555,50]]}}}],["5条存储数据库，实际使用中可以100条，然后清理list",{"_index":220,"t":{"46":{"position":[[299,30]]},"66":{"position":[[124,30]]},"158":{"position":[[299,30]]},"178":{"position":[[124,30]]}}}],["6",{"_index":50,"t":{"9":{"position":[[172,5]]},"98":{"position":[[71,3],[146,2]]},"121":{"position":[[172,5]]},"210":{"position":[[71,3],[146,2]]}}}],["662022184",{"_index":33,"t":{"9":{"position":[[10,9]]},"121":{"position":[[10,9]]}}}],["6w",{"_index":635,"t":{"96":{"position":[[2857,10],[3395,13]]},"208":{"position":[[2857,10],[3395,13]]}}}],["7行的2",{"_index":647,"t":{"98":{"position":[[75,4]]},"210":{"position":[[75,4]]}}}],["8",{"_index":115,"t":{"24":{"position":[[1589,4],[1689,4]]},"115":{"position":[[588,4],[786,4]]},"117":{"position":[[412,4],[610,4],[913,4]]},"136":{"position":[[1589,4],[1689,4]]},"227":{"position":[[588,4],[786,4]]},"229":{"position":[[412,4],[610,4],[913,4]]}}}],["8\").replaceal",{"_index":761,"t":{"115":{"position":[[688,21]]},"117":{"position":[[512,21]]},"227":{"position":[[688,21]]},"229":{"position":[[512,21]]}}}],["8)public",{"_index":463,"t":{"86":{"position":[[86,8]]},"198":{"position":[[86,8]]}}}],["abstractverticalcellstylestrategi",{"_index":599,"t":{"96":{"position":[[241,33]]},"208":{"position":[[241,33]]}}}],["adipisc",{"_index":6,"t":{"3":{"position":[[40,10]]},"5":{"position":[[160,10],[339,10],[518,10],[697,10],[876,10],[1055,10],[1234,10],[1413,10],[1592,10],[1771,10],[1950,10],[2129,10],[2308,10],[2487,10],[2666,10],[2845,10]]}}}],["aftercelldispose(cellwritehandlercontext",{"_index":616,"t":{"96":{"position":[[1795,40],[3075,40]]},"106":{"position":[[211,40]]},"208":{"position":[[1795,40],[3075,40]]},"218":{"position":[[211,40]]}}}],["afterrowdispose(rowwritehandlercontext",{"_index":729,"t":{"108":{"position":[[169,38]]},"220":{"position":[[169,38]]}}}],["aftersheetcreate(sheetwritehandlercontext",{"_index":709,"t":{"106":{"position":[[901,41]]},"218":{"position":[[901,41]]}}}],["aliquam",{"_index":16,"t":{"3":{"position":[[133,7]]},"5":{"position":[[253,7],[432,7],[611,7],[790,7],[969,7],[1148,7],[1327,7],[1506,7],[1685,7],[1864,7],[2043,7],[2222,7],[2401,7],[2580,7],[2759,7],[2938,7]]}}}],["amet",{"_index":4,"t":{"3":{"position":[[22,5],[174,4]]},"5":{"position":[[142,5],[294,4],[321,5],[473,4],[500,5],[652,4],[679,5],[831,4],[858,5],[1010,4],[1037,5],[1189,4],[1216,5],[1368,4],[1395,5],[1547,4],[1574,5],[1726,4],[1753,5],[1905,4],[1932,5],[2084,4],[2111,5],[2263,4],[2290,5],[2442,4],[2469,5],[2621,4],[2648,5],[2800,4],[2827,5],[2979,4]]}}}],["analysiscontext",{"_index":244,"t":{"46":{"position":[[1002,15],[2878,15]]},"58":{"position":[[201,15]]},"60":{"position":[[291,15],[433,15]]},"64":{"position":[[345,15]]},"66":{"position":[[369,15]]},"158":{"position":[[1002,15],[2878,15]]},"170":{"position":[[201,15]]},"172":{"position":[[291,15],[433,15]]},"176":{"position":[[345,15]]},"178":{"position":[[369,15]]}}}],["analysiscontext#readrowhold",{"_index":240,"t":{"46":{"position":[[905,32]]},"158":{"position":[[905,32]]}}}],["analysiseventlisten",{"_index":350,"t":{"58":{"position":[[356,21]]},"170":{"position":[[356,21]]}}}],["analysiseventlistener<map<integ",{"_index":419,"t":{"66":{"position":[[72,34]]},"178":{"position":[[72,34]]}}}],["annotationstylewrit",{"_index":594,"t":{"94":{"position":[[2118,22],[2186,22]]},"206":{"position":[[2118,22],[2186,22]]}}}],["arraylist",{"_index":493,"t":{"86":{"position":[[1700,14]]},"88":{"position":[[3130,14]]},"110":{"position":[[1794,14],[1834,14],[1924,14],[2014,14]]},"198":{"position":[[1700,14]]},"200":{"position":[[3130,14]]},"222":{"position":[[1794,14],[1834,14],[1924,14],[2014,14]]}}}],["arraylist<list<str",{"_index":196,"t":{"36":{"position":[[993,26]]},"102":{"position":[[511,26]]},"148":{"position":[[993,26]]},"214":{"position":[[511,26]]}}}],["arraylist<longestmatchcolumnwidthdata",{"_index":691,"t":{"104":{"position":[[1099,41]]},"216":{"position":[[1099,41]]}}}],["arraylist<str",{"_index":199,"t":{"36":{"position":[[1049,20]]},"102":{"position":[[563,20],[656,20],[748,20]]},"148":{"position":[[1049,20]]},"214":{"position":[[563,20],[656,20],[748,20]]}}}],["artifactid>easyexcel</artifactid",{"_index":62,"t":{"17":{"position":[[44,34]]},"129":{"position":[[44,34]]}}}],["assert.fail(\"unknown",{"_index":383,"t":{"60":{"position":[[1159,20]]},"172":{"position":[[1159,20]]}}}],["attachment;filenam",{"_index":120,"t":{"24":{"position":[[1736,22]]},"136":{"position":[[1736,22]]}}}],["attachment;filename*=utf",{"_index":762,"t":{"115":{"position":[[760,25]]},"117":{"position":[[584,25]]},"227":{"position":[[760,25]]},"229":{"position":[[584,25]]}}}],["author",{"_index":592,"t":{"94":{"position":[[1027,7]]},"106":{"position":[[94,7],[782,7]]},"108":{"position":[[56,7]]},"206":{"position":[[1027,7]]},"218":{"position":[[94,7],[782,7]]},"220":{"position":[[56,7]]}}}],["batch_count",{"_index":224,"t":{"46":{"position":[[366,11],[1181,12],[2709,11],[2960,12]]},"66":{"position":[[191,11],[500,12]]},"158":{"position":[[366,11],[1181,12],[2709,11],[2960,12]]},"178":{"position":[[191,11],[500,12]]}}}],["batch_count了，需要去存储一次数据库，防止数据几万条数据在内存，容易oom",{"_index":248,"t":{"46":{"position":[[1107,44]]},"158":{"position":[[1107,44]]}}}],["beat1",{"_index":386,"t":{"60":{"position":[[1705,5]]},"62":{"position":[[519,5]]},"172":{"position":[[1705,5]]},"174":{"position":[[519,5]]}}}],["beta1",{"_index":165,"t":{"32":{"position":[[583,5]]},"40":{"position":[[13,5],[76,5]]},"46":{"position":[[2068,5]]},"60":{"position":[[13,5]]},"74":{"position":[[469,5]]},"86":{"position":[[410,5]]},"88":{"position":[[105,5],[181,5],[259,5],[359,5],[450,5],[629,5]]},"94":{"position":[[13,5],[2091,5]]},"98":{"position":[[13,5],[562,5]]},"144":{"position":[[583,5]]},"152":{"position":[[13,5],[76,5]]},"158":{"position":[[2068,5]]},"172":{"position":[[13,5]]},"186":{"position":[[469,5]]},"198":{"position":[[410,5]]},"200":{"position":[[105,5],[181,5],[259,5],[359,5],[450,5],[629,5]]},"206":{"position":[[13,5],[2091,5]]},"210":{"position":[[13,5],[562,5]]}}}],["beta2",{"_index":613,"t":{"96":{"position":[[1582,5],[2772,5]]},"208":{"position":[[1582,5],[2772,5]]}}}],["blog",{"_index":21,"t":{"5":{"position":[[35,4],[87,4]]}}}],["boolean",{"_index":59,"t":{"15":{"position":[[133,7]]},"127":{"position":[[133,7]]}}}],["booleanutils.isnottrue(context.gethead",{"_index":618,"t":{"96":{"position":[[1926,43],[3206,43]]},"208":{"position":[[1926,43],[3206,43]]}}}],["booleanutils.istrue(context.gethead",{"_index":700,"t":{"106":{"position":[[387,39]]},"108":{"position":[[222,40]]},"218":{"position":[[387,39]]},"220":{"position":[[222,40]]}}}],["break",{"_index":373,"t":{"60":{"position":[[672,6],[1196,6],[1429,6]]},"172":{"position":[[672,6],[1196,6],[1429,6]]}}}],["byte",{"_index":468,"t":{"86":{"position":[[301,6]]},"198":{"position":[[301,6]]}}}],["bytearray",{"_index":469,"t":{"86":{"position":[[308,10]]},"198":{"position":[[308,10]]}}}],["cacheddatalist",{"_index":227,"t":{"46":{"position":[[423,14],[1223,14],[2764,14],[3002,14]]},"66":{"position":[[243,14],[527,14]]},"158":{"position":[[423,14],[1223,14],[2764,14],[3002,14]]},"178":{"position":[[243,14],[527,14]]}}}],["cacheddatalist.add(data",{"_index":247,"t":{"46":{"position":[[1078,25],[2905,25]]},"66":{"position":[[445,25]]},"158":{"position":[[1078,25],[2905,25]]},"178":{"position":[[445,25]]}}}],["cacheddatalist.s",{"_index":249,"t":{"46":{"position":[[1155,22],[1545,23],[2934,22],[3228,23]]},"66":{"position":[[474,22],[776,23]]},"158":{"position":[[1155,22],[1545,23],[2934,22],[3228,23]]},"178":{"position":[[474,22],[776,23]]}}}],["case",{"_index":368,"t":{"60":{"position":[[540,4],[679,4],[1203,4]]},"172":{"position":[[540,4],[679,4],[1203,4]]}}}],["catch",{"_index":767,"t":{"117":{"position":[[779,5]]},"229":{"position":[[779,5]]}}}],["cell",{"_index":631,"t":{"96":{"position":[[2676,7],[3252,4],[3257,4],[3831,7]]},"106":{"position":[[263,4],[268,4],[297,15]]},"208":{"position":[[2676,7],[3252,4],[3257,4],[3831,7]]},"218":{"position":[[263,4],[268,4],[297,15]]}}}],["cell.getcolumnindex",{"_index":699,"t":{"106":{"position":[[360,23],[430,21]]},"218":{"position":[[360,23],[430,21]]}}}],["cell.getrowindex",{"_index":698,"t":{"106":{"position":[[340,19]]},"218":{"position":[[340,19]]}}}],["cell.setcellstyle(cellstyl",{"_index":644,"t":{"96":{"position":[[3668,29]]},"208":{"position":[[3668,29]]}}}],["cell.sethyperlink(hyperlink",{"_index":706,"t":{"106":{"position":[[699,29]]},"218":{"position":[[699,29]]}}}],["celldata",{"_index":620,"t":{"96":{"position":[[2089,8],[2131,13]]},"208":{"position":[[2089,8],[2131,13]]}}}],["celldata.getorcreatestyl",{"_index":627,"t":{"96":{"position":[[2382,28]]},"208":{"position":[[2382,28]]}}}],["celldata<d",{"_index":395,"t":{"62":{"position":[[173,14]]},"174":{"position":[[173,14]]}}}],["celldata<doubl",{"_index":396,"t":{"62":{"position":[[202,16]]},"174":{"position":[[202,16]]}}}],["celldata<str",{"_index":394,"t":{"62":{"position":[[89,16],[282,16]]},"174":{"position":[[89,16],[282,16]]}}}],["celldatademo.xlsx",{"_index":399,"t":{"62":{"position":[[632,20]]},"174":{"position":[[632,20]]}}}],["celldatademoheaddatalistener()).sheet().doread",{"_index":401,"t":{"62":{"position":[[745,49]]},"174":{"position":[[745,49]]}}}],["celldataread",{"_index":398,"t":{"62":{"position":[[546,14]]},"174":{"position":[[546,14]]}}}],["celldatareaddemodata",{"_index":393,"t":{"62":{"position":[[58,20],[383,21]]},"174":{"position":[[58,20],[383,21]]}}}],["celldatareaddemodata.class",{"_index":400,"t":{"62":{"position":[[713,27]]},"174":{"position":[[713,27]]}}}],["celldatatypeenum",{"_index":307,"t":{"52":{"position":[[571,16]]},"164":{"position":[[571,16]]}}}],["celldatatypeenum.str",{"_index":309,"t":{"52":{"position":[[619,24]]},"164":{"position":[[619,24]]}}}],["cellrangeaddresslist",{"_index":712,"t":{"106":{"position":[[1075,20],[1096,20],[1427,22]]},"218":{"position":[[1075,20],[1096,20],[1427,22]]}}}],["cellrangeaddresslist(1",{"_index":713,"t":{"106":{"position":[[1123,23]]},"218":{"position":[[1123,23]]}}}],["cellstyl",{"_index":640,"t":{"96":{"position":[[3424,9],[3434,9],[3444,9]]},"208":{"position":[[3424,9],[3434,9],[3444,9]]}}}],["cellstyle.setfillforegroundcolor(indexedcolors.red.getindex",{"_index":642,"t":{"96":{"position":[[3484,63]]},"208":{"position":[[3484,63]]}}}],["cellstyle.setfillpattern(fillpatterntype.solid_foreground",{"_index":643,"t":{"96":{"position":[[3608,59]]},"208":{"position":[[3608,59]]}}}],["cellwritehandl",{"_index":615,"t":{"96":{"position":[[1752,18],[3032,18]]},"106":{"position":[[170,16]]},"208":{"position":[[1752,18],[3032,18]]},"218":{"position":[[170,16]]}}}],["class",{"_index":137,"t":{"30":{"position":[[66,5]]},"46":{"position":[[52,5],[234,5],[1694,5]]},"48":{"position":[[63,5]]},"52":{"position":[[63,5],[417,5],[499,8]]},"60":{"position":[[71,5],[177,5]]},"62":{"position":[[52,5]]},"64":{"position":[[63,5]]},"66":{"position":[[38,5]]},"74":{"position":[[52,5],[1110,15]]},"78":{"position":[[52,5]]},"80":{"position":[[52,5]]},"82":{"position":[[355,15],[1723,12]]},"84":{"position":[[52,5]]},"86":{"position":[[95,5]]},"88":{"position":[[52,5]]},"92":{"position":[[107,5]]},"94":{"position":[[446,5],[1430,5]]},"98":{"position":[[198,5]]},"100":{"position":[[285,15]]},"104":{"position":[[52,5]]},"106":{"position":[[130,5],[818,5]]},"108":{"position":[[92,5]]},"110":{"position":[[52,5],[437,5]]},"142":{"position":[[66,5]]},"158":{"position":[[52,5],[234,5],[1694,5]]},"160":{"position":[[63,5]]},"164":{"position":[[63,5],[417,5],[499,8]]},"172":{"position":[[71,5],[177,5]]},"174":{"position":[[52,5]]},"176":{"position":[[63,5]]},"178":{"position":[[38,5]]},"186":{"position":[[52,5],[1110,15]]},"190":{"position":[[52,5]]},"192":{"position":[[52,5]]},"194":{"position":[[355,15],[1723,12]]},"196":{"position":[[52,5]]},"198":{"position":[[95,5]]},"200":{"position":[[52,5]]},"204":{"position":[[107,5]]},"206":{"position":[[446,5],[1430,5]]},"210":{"position":[[198,5]]},"212":{"position":[[285,15]]},"216":{"position":[[52,5]]},"218":{"position":[[130,5],[818,5]]},"220":{"position":[[92,5]]},"222":{"position":[[52,5],[437,5]]}}}],["class则默认为1.当然你指定了headrownumber不管是否传入class",{"_index":328,"t":{"54":{"position":[[288,56]]},"166":{"position":[[288,56]]}}}],["class去写，然后写到第一个sheet",{"_index":426,"t":{"74":{"position":[[578,34],[859,34]]},"76":{"position":[[531,34],[928,34]]},"78":{"position":[[543,34]]},"80":{"position":[[512,34]]},"84":{"position":[[746,34]]},"90":{"position":[[406,34]]},"92":{"position":[[630,34]]},"94":{"position":[[2255,34]]},"96":{"position":[[1354,34]]},"98":{"position":[[756,34],[1123,34]]},"104":{"position":[[791,34]]},"106":{"position":[[1982,34]]},"108":{"position":[[914,34]]},"110":{"position":[[1109,34]]},"113":{"position":[[176,34]]},"186":{"position":[[578,34],[859,34]]},"188":{"position":[[531,34],[928,34]]},"190":{"position":[[543,34]]},"192":{"position":[[512,34]]},"196":{"position":[[746,34]]},"202":{"position":[[406,34]]},"204":{"position":[[630,34]]},"206":{"position":[[2255,34]]},"208":{"position":[[1354,34]]},"210":{"position":[[756,34],[1123,34]]},"216":{"position":[[791,34]]},"218":{"position":[[1982,34]]},"220":{"position":[[914,34]]},"222":{"position":[[1109,34]]},"225":{"position":[[176,34]]}}}],["class去读，然后写到第一个sheet",{"_index":97,"t":{"24":{"position":[[919,34]]},"136":{"position":[[919,34]]}}}],["class去读，然后读取第一个sheet",{"_index":86,"t":{"24":{"position":[[423,28]]},"46":{"position":[[2162,28],[2557,28],[3464,28]]},"52":{"position":[[1437,28]]},"54":{"position":[[476,28]]},"56":{"position":[[198,28]]},"58":{"position":[[734,28]]},"60":{"position":[[1835,28]]},"62":{"position":[[659,28]]},"64":{"position":[[1098,28]]},"136":{"position":[[423,28]]},"158":{"position":[[2162,28],[2557,28],[3464,28]]},"164":{"position":[[1437,28]]},"166":{"position":[[476,28]]},"168":{"position":[[198,28]]},"170":{"position":[[734,28]]},"172":{"position":[[1835,28]]},"174":{"position":[[659,28]]},"176":{"position":[[1098,28]]}}}],["class的{@link",{"_index":326,"t":{"54":{"position":[[229,19]]},"166":{"position":[[229,19]]}}}],["class，返回一个list，然后读取第一个sheet",{"_index":337,"t":{"56":{"position":[[418,33]]},"168":{"position":[[418,33]]}}}],["columnwidth(50",{"_index":565,"t":{"92":{"position":[[238,16]]},"204":{"position":[[238,16]]}}}],["columnwidth}、{@link",{"_index":566,"t":{"92":{"position":[[393,19]]},"204":{"position":[[393,19]]}}}],["com.alibaba.easyexcel.test.demo.write.demodata",{"_index":92,"t":{"24":{"position":[[723,47]]},"136":{"position":[[723,47]]}}}],["comment",{"_index":26,"t":{"5":{"position":[[70,7]]},"60":{"position":[[545,8]]},"88":{"position":[[1202,7]]},"108":{"position":[[401,7],[409,7]]},"172":{"position":[[545,8]]},"200":{"position":[[1202,7]]},"220":{"position":[[401,7],[409,7]]}}}],["comment.setcommentdata(commentdata",{"_index":525,"t":{"88":{"position":[[1333,36]]},"200":{"position":[[1333,36]]}}}],["comment.setstring(new",{"_index":738,"t":{"108":{"position":[[525,21]]},"220":{"position":[[525,21]]}}}],["commentdata",{"_index":514,"t":{"88":{"position":[[220,12],[1288,11],[1300,11],[1318,14]]},"200":{"position":[[220,12],[1288,11],[1300,11],[1318,14]]}}}],["commentdata.setauthor(\"jiaju",{"_index":526,"t":{"88":{"position":[[1370,28]]},"200":{"position":[[1370,28]]}}}],["commentdata.setrelativelastcolumnindex(1",{"_index":530,"t":{"88":{"position":[[1533,42]]},"200":{"position":[[1533,42]]}}}],["commentdata.setrelativelastrowindex(1",{"_index":531,"t":{"88":{"position":[[1576,39]]},"200":{"position":[[1576,39]]}}}],["commentdata.setrichtextstringdata(new",{"_index":528,"t":{"88":{"position":[[1409,37]]},"200":{"position":[[1409,37]]}}}],["commentwrit",{"_index":741,"t":{"108":{"position":[[793,14],[853,14]]},"220":{"position":[[793,14],[853,14]]}}}],["commentwritehandl",{"_index":727,"t":{"108":{"position":[[98,19],[734,20],[1113,22]]},"220":{"position":[[98,19],[734,20],[1113,22]]}}}],["complex.xlsx",{"_index":176,"t":{"34":{"position":[[288,15]]},"146":{"position":[[288,15]]}}}],["complexfil",{"_index":175,"t":{"34":{"position":[[87,13],[347,13]]},"146":{"position":[[87,13],[347,13]]}}}],["complexfillwitht",{"_index":192,"t":{"36":{"position":[[151,22],[464,22]]},"148":{"position":[[151,22],[464,22]]}}}],["complexfillwithtable.xlsx",{"_index":193,"t":{"36":{"position":[[392,28]]},"148":{"position":[[392,28]]}}}],["complexheaddata",{"_index":447,"t":{"80":{"position":[[58,15],[291,16]]},"82":{"position":[[71,16]]},"192":{"position":[[58,15],[291,16]]},"194":{"position":[[71,16]]}}}],["complexheaddata.class).sheet(\"模板\").dowrite(data",{"_index":449,"t":{"80":{"position":[[584,51]]},"192":{"position":[[584,51]]}}}],["complexheaderread",{"_index":329,"t":{"54":{"position":[[366,19]]},"166":{"position":[[366,19]]}}}],["complexheadwrit",{"_index":448,"t":{"80":{"position":[[383,18],[447,18]]},"192":{"position":[[383,18],[447,18]]}}}],["composite.xlsx",{"_index":209,"t":{"40":{"position":[[326,17]]},"152":{"position":[[326,17]]}}}],["compositefil",{"_index":208,"t":{"40":{"position":[[103,15],[387,15]]},"152":{"position":[[103,15],[387,15]]}}}],["consectetur",{"_index":5,"t":{"3":{"position":[[28,11]]},"5":{"position":[[148,11],[327,11],[506,11],[685,11],[864,11],[1043,11],[1222,11],[1401,11],[1580,11],[1759,11],[1938,11],[2117,11],[2296,11],[2475,11],[2654,11],[2833,11]]}}}],["consequat",{"_index":17,"t":{"3":{"position":[[141,10]]},"5":{"position":[[261,10],[440,10],[619,10],[798,10],[977,10],[1156,10],[1335,10],[1514,10],[1693,10],[1872,10],[2051,10],[2230,10],[2409,10],[2588,10],[2767,10],[2946,10]]}}}],["constraint",{"_index":718,"t":{"106":{"position":[[1280,10]]},"218":{"position":[[1280,10]]}}}],["contentfontstyle(fontheightinpoint",{"_index":591,"t":{"94":{"position":[[828,36],[1804,36]]},"206":{"position":[[828,36],[1804,36]]}}}],["contentloopmerge(eachrow",{"_index":654,"t":{"98":{"position":[[238,25]]},"210":{"position":[[238,25]]}}}],["contentrowheight",{"_index":568,"t":{"92":{"position":[[435,24]]},"204":{"position":[[435,24]]}}}],["contentstyle(fillpatterntyp",{"_index":589,"t":{"94":{"position":[[715,29],[1695,29]]},"206":{"position":[[715,29],[1695,29]]}}}],["contentwritecellstyl",{"_index":605,"t":{"96":{"position":[[711,21],[1324,23]]},"208":{"position":[[711,21],[1324,23]]}}}],["contentwritecellstyle.setfillforegroundcolor(indexedcolors.green.getindex",{"_index":607,"t":{"96":{"position":[[940,77]]},"208":{"position":[[940,77]]}}}],["contentwritecellstyle.setfillpatterntype(fillpatterntype.solid_foreground",{"_index":606,"t":{"96":{"position":[[856,75]]},"208":{"position":[[856,75]]}}}],["contentwritecellstyle.setwritefont(contentwritefont",{"_index":610,"t":{"96":{"position":[[1123,53]]},"208":{"position":[[1123,53]]}}}],["contentwritefont",{"_index":608,"t":{"96":{"position":[[1028,16]]},"208":{"position":[[1028,16]]}}}],["contentwritefont.setfontheightinpoints((short)20",{"_index":609,"t":{"96":{"position":[[1072,50]]},"208":{"position":[[1072,50]]}}}],["context",{"_index":241,"t":{"46":{"position":[[947,7],[1018,8],[1330,7],[1398,8],[2894,8],[3133,8]]},"52":{"position":[[673,7],[760,8],[952,8]]},"58":{"position":[[118,7],[217,8],[432,8]]},"60":{"position":[[307,8],[376,8],[449,8]]},"64":{"position":[[259,7],[361,8]]},"66":{"position":[[385,8],[658,8]]},"96":{"position":[[1836,8],[3116,8]]},"106":{"position":[[252,8],[943,8]]},"108":{"position":[[208,8]]},"158":{"position":[[947,7],[1018,8],[1330,7],[1398,8],[2894,8],[3133,8]]},"164":{"position":[[673,7],[760,8],[952,8]]},"170":{"position":[[118,7],[217,8],[432,8]]},"172":{"position":[[307,8],[376,8],[449,8]]},"176":{"position":[[259,7],[361,8]]},"178":{"position":[[385,8],[658,8]]},"208":{"position":[[1836,8],[3116,8]]},"218":{"position":[[252,8],[943,8]]},"220":{"position":[[208,8]]}}}],["context.getcel",{"_index":636,"t":{"96":{"position":[[3264,18]]},"106":{"position":[[275,18]]},"208":{"position":[[3264,18]]},"218":{"position":[[275,18]]}}}],["context.getcelldatalist",{"_index":619,"t":{"96":{"position":[[2008,28]]},"208":{"position":[[2008,28]]}}}],["context.getfirstcelldata",{"_index":621,"t":{"96":{"position":[[2100,27]]},"208":{"position":[[2100,27]]}}}],["context.getfirstcelldata().setwritecellstyle(nul",{"_index":646,"t":{"96":{"position":[[3851,51]]},"208":{"position":[[3851,51]]}}}],["context.getreadcelldata().getstringvalu",{"_index":311,"t":{"52":{"position":[[787,43]]},"164":{"position":[[787,43]]}}}],["context.getwritesheetholder().getsheet",{"_index":730,"t":{"108":{"position":[[279,41]]},"220":{"position":[[279,41]]}}}],["context.getwritesheetholder().getsheet().addvalidationdata(datavalid",{"_index":722,"t":{"106":{"position":[[1450,75]]},"218":{"position":[[1450,75]]}}}],["context.getwritesheetholder().getsheet().getdatavalidationhelp",{"_index":716,"t":{"106":{"position":[[1187,67]]},"218":{"position":[[1187,67]]}}}],["context.getwritesheetholder().getsheet().getworkbook().getcreationhelp",{"_index":703,"t":{"106":{"position":[[490,75]]},"218":{"position":[[490,75]]}}}],["context.getwritesheetholder().getsheetno",{"_index":711,"t":{"106":{"position":[[981,44]]},"218":{"position":[[981,44]]}}}],["context.getwriteworkbookholder().getworkbook",{"_index":639,"t":{"96":{"position":[[3321,47]]},"208":{"position":[[3321,47]]}}}],["convert",{"_index":323,"t":{"52":{"position":[[1663,11]]},"84":{"position":[[139,9]]},"86":{"position":[[742,11]]},"110":{"position":[[139,9],[524,9]]},"164":{"position":[[1663,11]]},"196":{"position":[[139,9]]},"198":{"position":[[742,11]]},"222":{"position":[[139,9],[524,9]]}}}],["converter<str",{"_index":304,"t":{"52":{"position":[[462,17]]},"164":{"position":[[462,17]]}}}],["converterdata",{"_index":298,"t":{"52":{"position":[[69,13]]},"84":{"position":[[58,13],[483,14]]},"110":{"position":[[58,13],[443,13],[916,14]]},"164":{"position":[[69,13]]},"196":{"position":[[58,13],[483,14]]},"222":{"position":[[58,13],[443,13],[916,14]]}}}],["converterdata.class",{"_index":320,"t":{"52":{"position":[[1491,20]]},"164":{"position":[[1491,20]]}}}],["converterdata.class).head(variabletitlehead()).sheet(\"模板\").dowrite(data",{"_index":747,"t":{"110":{"position":[[1181,75]]},"222":{"position":[[1181,75]]}}}],["converterdata.class).sheet(\"模板\").dowrite(data",{"_index":461,"t":{"84":{"position":[[818,49]]},"196":{"position":[[818,49]]}}}],["converterdatalisten",{"_index":318,"t":{"52":{"position":[[1273,22],[1516,24]]},"164":{"position":[[1273,22],[1516,24]]}}}],["converterdata}.里面可以使用注解{@link",{"_index":316,"t":{"52":{"position":[[1144,29]]},"164":{"position":[[1144,29]]}}}],["converterread",{"_index":319,"t":{"52":{"position":[[1331,15]]},"164":{"position":[[1331,15]]}}}],["converterutils.converttostringmap(headmap",{"_index":351,"t":{"58":{"position":[[389,42]]},"170":{"position":[[389,42]]}}}],["converterwrit",{"_index":460,"t":{"84":{"position":[[621,16],[683,16]]},"196":{"position":[[621,16],[683,16]]}}}],["converttoexceldata(writeconvertercontext<str",{"_index":313,"t":{"52":{"position":[[903,48]]},"164":{"position":[[903,48]]}}}],["converttojavadata(readconvertercontext",{"_index":310,"t":{"52":{"position":[[718,41]]},"164":{"position":[[718,41]]}}}],["createhelp",{"_index":702,"t":{"106":{"position":[[475,12]]},"218":{"position":[[475,12]]}}}],["createhelper.createhyperlink(hyperlinktype.url",{"_index":704,"t":{"106":{"position":[[588,48]]},"218":{"position":[[588,48]]}}}],["creationhelp",{"_index":701,"t":{"106":{"position":[[460,14]]},"218":{"position":[[460,14]]}}}],["css",{"_index":499,"t":{"86":{"position":[[1999,3]]},"198":{"position":[[1999,3]]}}}],["customcellwritehandl",{"_index":697,"t":{"106":{"position":[[136,22],[1755,23]]},"218":{"position":[[136,22],[1755,23]]}}}],["customcellwritehandler()).sheet(\"模板\").dowrite(data",{"_index":726,"t":{"106":{"position":[[2148,54]]},"218":{"position":[[2148,54]]}}}],["customhandlerwrit",{"_index":724,"t":{"106":{"position":[[1849,20],[1915,20]]},"218":{"position":[[1849,20],[1915,20]]}}}],["customsheetwritehandl",{"_index":707,"t":{"106":{"position":[[824,23],[1786,24],[2095,26]]},"218":{"position":[[824,23],[1786,24],[2095,26]]}}}],["customstringstringconvert",{"_index":303,"t":{"52":{"position":[[423,27],[1701,30]]},"164":{"position":[[423,27],[1701,30]]}}}],["customstringstringconverter.class",{"_index":300,"t":{"52":{"position":[[154,34]]},"84":{"position":[[151,34]]},"110":{"position":[[151,34],[536,34]]},"164":{"position":[[154,34]]},"196":{"position":[[151,34]]},"222":{"position":[[151,34],[536,34]]}}}],["dao存储。当然还要这个类让spr",{"_index":253,"t":{"46":{"position":[[1635,48]]},"158":{"position":[[1635,48]]}}}],["dao，当然有业务逻辑这个也可以是一个servic",{"_index":229,"t":{"46":{"position":[[499,49]]},"158":{"position":[[499,49]]}}}],["data",{"_index":168,"t":{"32":{"position":[[776,7]]},"40":{"position":[[794,8],[870,8],[946,8],[1010,8],[1074,8],[1138,8]]},"46":{"position":[[864,4],[996,5],[2872,5]]},"56":{"position":[[345,4],[576,4]]},"60":{"position":[[285,5]]},"66":{"position":[[363,5]]},"74":{"position":[[744,7]]},"82":{"position":[[635,4],[642,7],[1227,4],[1234,7],[1880,4],[1887,7]]},"88":{"position":[[3119,4]]},"94":{"position":[[1048,10]]},"104":{"position":[[1200,4]]},"113":{"position":[[866,4]]},"144":{"position":[[776,7]]},"152":{"position":[[794,8],[870,8],[946,8],[1010,8],[1074,8],[1138,8]]},"158":{"position":[[864,4],[996,5],[2872,5]]},"168":{"position":[[345,4],[576,4]]},"172":{"position":[[285,5]]},"178":{"position":[[363,5]]},"186":{"position":[[744,7]]},"194":{"position":[[635,4],[642,7],[1227,4],[1234,7],[1880,4],[1887,7]]},"200":{"position":[[3119,4]]},"206":{"position":[[1048,10]]},"216":{"position":[[1200,4]]},"225":{"position":[[866,4]]}}}],["data.add",{"_index":756,"t":{"113":{"position":[[899,14]]},"225":{"position":[[899,14]]}}}],["data.add(0.56",{"_index":758,"t":{"113":{"position":[[942,15]]},"225":{"position":[[942,15]]}}}],["data.add(new",{"_index":757,"t":{"113":{"position":[[920,12]]},"225":{"position":[[920,12]]}}}],["data.add(writecelldemodata",{"_index":556,"t":{"88":{"position":[[3145,28]]},"200":{"position":[[3145,28]]}}}],["data.setdate(new",{"_index":693,"t":{"104":{"position":[[1290,16]]},"216":{"position":[[1290,16]]}}}],["data.setdoubledata(1000000000000.0",{"_index":694,"t":{"104":{"position":[[1316,36]]},"216":{"position":[[1316,36]]}}}],["data.setstr",{"_index":692,"t":{"104":{"position":[[1242,41]]},"216":{"position":[[1242,41]]}}}],["data1，然后多个list",{"_index":210,"t":{"40":{"position":[[720,17]]},"152":{"position":[[720,17]]}}}],["dataformat",{"_index":645,"t":{"96":{"position":[[3701,18]]},"208":{"position":[[3701,18]]}}}],["dataformatdata",{"_index":622,"t":{"96":{"position":[[2180,17]]},"208":{"position":[[2180,17]]}}}],["datalist",{"_index":259,"t":{"46":{"position":[[2347,9]]},"113":{"position":[[757,10]]},"158":{"position":[[2347,9]]},"225":{"position":[[757,10]]}}}],["datalong",{"_index":690,"t":{"104":{"position":[[1041,10]]},"216":{"position":[[1041,10]]}}}],["datavalid",{"_index":720,"t":{"106":{"position":[[1359,14],[1374,14]]},"218":{"position":[[1359,14],[1374,14]]}}}],["datavalidationconstraint",{"_index":717,"t":{"106":{"position":[[1255,24]]},"218":{"position":[[1255,24]]}}}],["datavalidationhelp",{"_index":714,"t":{"106":{"position":[[1157,20]]},"218":{"position":[[1157,20]]}}}],["date",{"_index":143,"t":{"30":{"position":[[135,4],[140,6]]},"46":{"position":[[100,4],[105,5]]},"48":{"position":[[333,4],[338,6]]},"52":{"position":[[306,5]]},"62":{"position":[[188,5]]},"64":{"position":[[120,4],[125,6]]},"74":{"position":[[147,4],[152,5]]},"76":{"position":[[422,4],[819,4]]},"78":{"position":[[186,4],[191,5]]},"80":{"position":[[172,4],[177,5]]},"84":{"position":[[307,4],[312,5]]},"92":{"position":[[212,4],[217,5]]},"94":{"position":[[949,4],[954,5],[1925,4],[1930,5]]},"98":{"position":[[347,4],[352,5]]},"104":{"position":[[182,4],[187,5],[1307,8]]},"110":{"position":[[307,4],[312,5],[692,4],[697,5]]},"113":{"position":[[933,8]]},"142":{"position":[[135,4],[140,6]]},"158":{"position":[[100,4],[105,5]]},"160":{"position":[[333,4],[338,6]]},"164":{"position":[[306,5]]},"174":{"position":[[188,5]]},"176":{"position":[[120,4],[125,6]]},"186":{"position":[[147,4],[152,5]]},"188":{"position":[[422,4],[819,4]]},"190":{"position":[[186,4],[191,5]]},"192":{"position":[[172,4],[177,5]]},"196":{"position":[[307,4],[312,5]]},"204":{"position":[[212,4],[217,5]]},"206":{"position":[[949,4],[954,5],[1925,4],[1930,5]]},"210":{"position":[[347,4],[352,5]]},"216":{"position":[[182,4],[187,5],[1307,8]]},"222":{"position":[[307,4],[312,5],[692,4],[697,5]]},"225":{"position":[[933,8]]}}}],["datetimeformat",{"_index":623,"t":{"96":{"position":[[2209,14]]},"208":{"position":[[2209,14]]}}}],["datetimeformat(\"yyyy年mm月dd日hh时mm分ss",{"_index":301,"t":{"52":{"position":[[251,39]]},"84":{"position":[[236,39]]},"110":{"position":[[236,39],[621,39]]},"164":{"position":[[251,39]]},"196":{"position":[[236,39]]},"222":{"position":[[236,39],[621,39]]}}}],["datetimeformat}、{@link",{"_index":317,"t":{"52":{"position":[[1174,22]]},"84":{"position":[[542,22]]},"164":{"position":[[1174,22]]},"196":{"position":[[542,22]]}}}],["default",{"_index":385,"t":{"60":{"position":[[1436,8]]},"172":{"position":[[1436,8]]}}}],["defaultconverterloader#loaddefaultreadconvert",{"_index":315,"t":{"52":{"position":[[1061,50]]},"164":{"position":[[1061,50]]}}}],["demo",{"_index":83,"t":{"24":{"position":[[378,6]]},"30":{"position":[[322,6]]},"32":{"position":[[241,6]]},"34":{"position":[[236,6]]},"36":{"position":[[340,6]]},"38":{"position":[[239,6]]},"40":{"position":[[274,6]]},"46":{"position":[[2117,6],[2512,6],[3419,6],[3629,6]]},"48":{"position":[[644,6]]},"50":{"position":[[315,6],[594,6]]},"52":{"position":[[1392,6]]},"54":{"position":[[431,6]]},"56":{"position":[[153,6]]},"58":{"position":[[689,6]]},"60":{"position":[[1789,6]]},"62":{"position":[[606,6]]},"64":{"position":[[1053,6]]},"66":{"position":[[923,6]]},"90":{"position":[[262,6]]},"136":{"position":[[378,6]]},"142":{"position":[[322,6]]},"144":{"position":[[241,6]]},"146":{"position":[[236,6]]},"148":{"position":[[340,6]]},"150":{"position":[[239,6]]},"152":{"position":[[274,6]]},"158":{"position":[[2117,6],[2512,6],[3419,6],[3629,6]]},"160":{"position":[[644,6]]},"162":{"position":[[315,6],[594,6]]},"164":{"position":[[1392,6]]},"166":{"position":[[431,6]]},"168":{"position":[[153,6]]},"170":{"position":[[689,6]]},"172":{"position":[[1789,6]]},"174":{"position":[[606,6]]},"176":{"position":[[1053,6]]},"178":{"position":[[923,6]]},"202":{"position":[[262,6]]}}}],["demo.xlsx",{"_index":85,"t":{"24":{"position":[[404,12]]},"46":{"position":[[2143,12],[2538,12],[3445,12],[3655,12]]},"48":{"position":[[670,12]]},"50":{"position":[[341,12],[620,12]]},"52":{"position":[[1418,12]]},"54":{"position":[[457,12]]},"56":{"position":[[179,12]]},"58":{"position":[[715,12]]},"64":{"position":[[1079,12]]},"66":{"position":[[949,12]]},"90":{"position":[[288,12]]},"136":{"position":[[404,12]]},"158":{"position":[[2143,12],[2538,12],[3445,12],[3655,12]]},"160":{"position":[[670,12]]},"162":{"position":[[341,12],[620,12]]},"164":{"position":[[1418,12]]},"166":{"position":[[457,12]]},"168":{"position":[[179,12]]},"170":{"position":[[715,12]]},"176":{"position":[[1079,12]]},"178":{"position":[[949,12]]},"202":{"position":[[288,12]]}}}],["demodao",{"_index":230,"t":{"46":{"position":[[560,7],[568,8],[654,7],[668,10],[752,7],[795,8],[821,8],[1700,7]]},"158":{"position":[[560,7],[568,8],[654,7],[668,10],[752,7],[795,8],[821,8],[1700,7]]}}}],["demodao.save(cacheddatalist",{"_index":252,"t":{"46":{"position":[[1569,29]]},"158":{"position":[[1569,29]]}}}],["demodata",{"_index":71,"t":{"24":{"position":[[202,9]]},"46":{"position":[[58,8],[1875,9],[2326,9],[2336,8]]},"50":{"position":[[131,9]]},"54":{"position":[[90,9]]},"56":{"position":[[335,9]]},"58":{"position":[[503,9]]},"74":{"position":[[58,8],[312,9]]},"76":{"position":[[75,9]]},"96":{"position":[[75,9]]},"98":{"position":[[469,9]]},"100":{"position":[[72,9]]},"102":{"position":[[148,9]]},"106":{"position":[[1721,9]]},"108":{"position":[[700,9]]},"136":{"position":[[202,9]]},"158":{"position":[[58,8],[1875,9],[2326,9],[2336,8]]},"162":{"position":[[131,9]]},"166":{"position":[[90,9]]},"168":{"position":[[335,9]]},"170":{"position":[[503,9]]},"186":{"position":[[58,8],[312,9]]},"188":{"position":[[75,9]]},"208":{"position":[[75,9]]},"210":{"position":[[469,9]]},"212":{"position":[[72,9]]},"214":{"position":[[148,9]]},"218":{"position":[[1721,9]]},"220":{"position":[[700,9]]}}}],["demodata.class",{"_index":88,"t":{"24":{"position":[[486,15]]},"46":{"position":[[2261,15],[2620,15],[3527,15],[3761,15]]},"50":{"position":[[492,15]]},"54":{"position":[[530,15]]},"58":{"position":[[788,15]]},"74":{"position":[[681,15]]},"96":{"position":[[1426,15],[1710,15],[2990,15]]},"136":{"position":[[486,15]]},"158":{"position":[[2261,15],[2620,15],[3527,15],[3761,15]]},"162":{"position":[[492,15]]},"166":{"position":[[530,15]]},"170":{"position":[[788,15]]},"186":{"position":[[681,15]]},"208":{"position":[[1426,15],[1710,15],[2990,15]]}}}],["demodata.class).build",{"_index":428,"t":{"74":{"position":[[1204,24]]},"82":{"position":[[411,24],[951,24]]},"100":{"position":[[379,24]]},"186":{"position":[[1204,24]]},"194":{"position":[[411,24],[951,24]]},"212":{"position":[[379,24]]}}}],["demodata.class).excludecolumnfilednames(excludecolumnfilednames).sheet",{"_index":437,"t":{"76":{"position":[[603,76]]},"188":{"position":[[603,76]]}}}],["demodata.class).includecolumnfilednames(includecolumnfilednames).sheet",{"_index":441,"t":{"76":{"position":[[1000,76]]},"188":{"position":[[1000,76]]}}}],["demodata.class).inmemory(boolean.true).registerwritehandler(new",{"_index":743,"t":{"108":{"position":[[1049,63]]},"220":{"position":[[1049,63]]}}}],["demodata.class).registerwritehandler(loopmergestrategy).sheet(\"模板\").dowrite(data",{"_index":661,"t":{"98":{"position":[[1195,84]]},"210":{"position":[[1195,84]]}}}],["demodata.class).registerwritehandler(new",{"_index":725,"t":{"106":{"position":[[2054,40]]},"218":{"position":[[2054,40]]}}}],["demodata.class).sheet(\"模板\").dowrite(data",{"_index":101,"t":{"24":{"position":[[1022,44]]},"74":{"position":[[962,44]]},"136":{"position":[[1022,44]]},"186":{"position":[[962,44]]}}}],["demodata.class).withtemplate(templatefilename).sheet().dowrite(data",{"_index":561,"t":{"90":{"position":[[478,71]]},"202":{"position":[[478,71]]}}}],["demodatalisten",{"_index":74,"t":{"24":{"position":[[267,17]]},"46":{"position":[[155,16],[240,16],[584,18],[1943,17],[2027,24],[2452,23],[3308,16]]},"50":{"position":[[199,17]]},"54":{"position":[[155,17]]},"136":{"position":[[267,17]]},"158":{"position":[[155,16],[240,16],[584,18],[1943,17],[2027,24],[2452,23],[3308,16]]},"162":{"position":[[199,17]]},"166":{"position":[[155,17]]}}}],["demodatalistener()).build",{"_index":267,"t":{"46":{"position":[[3781,28]]},"50":{"position":[[865,28],[986,28]]},"158":{"position":[[3781,28]]},"162":{"position":[[865,28],[986,28]]}}}],["demodatalistener()).doreadal",{"_index":286,"t":{"50":{"position":[[512,32]]},"162":{"position":[[512,32]]}}}],["demodatalistener()).sheet",{"_index":330,"t":{"54":{"position":[[550,27]]},"166":{"position":[[550,27]]}}}],["demodatalistener()).sheet().doread",{"_index":90,"t":{"24":{"position":[[506,37]]},"46":{"position":[[3547,37]]},"136":{"position":[[506,37]]},"158":{"position":[[3547,37]]}}}],["demodatalistener(demodao",{"_index":234,"t":{"46":{"position":[[770,24]]},"158":{"position":[[770,24]]}}}],["demodatalistener的doafterallanalys",{"_index":284,"t":{"50":{"position":[[377,35]]},"162":{"position":[[377,35]]}}}],["demoexceptionlisten",{"_index":414,"t":{"64":{"position":[[931,22]]},"176":{"position":[[931,22]]}}}],["demoexceptionlistener()).sheet().doread",{"_index":417,"t":{"64":{"position":[[1181,42]]},"176":{"position":[[1181,42]]}}}],["demoextradata",{"_index":356,"t":{"60":{"position":[[77,13],[1581,14]]},"172":{"position":[[77,13],[1581,14]]}}}],["demoextradata.class",{"_index":389,"t":{"60":{"position":[[1889,20]]},"172":{"position":[[1889,20]]}}}],["demoextralisten",{"_index":361,"t":{"60":{"position":[[183,17],[1652,18],[1914,20]]},"172":{"position":[[183,17],[1652,18],[1914,20]]}}}],["demoheaddatalisten",{"_index":352,"t":{"58":{"position":[[571,21]]},"62":{"position":[[463,21]]},"170":{"position":[[571,21]]},"174":{"position":[[463,21]]}}}],["demoheaddatalistener()).sheet().doread",{"_index":354,"t":{"58":{"position":[[808,41]]},"170":{"position":[[808,41]]}}}],["demomergedata",{"_index":653,"t":{"98":{"position":[[204,13],[486,14]]},"210":{"position":[[204,13],[486,14]]}}}],["demomergedata.class).sheet(\"模板\").dowrite(data",{"_index":657,"t":{"98":{"position":[[828,49]]},"210":{"position":[[828,49]]}}}],["demostyledata",{"_index":582,"t":{"94":{"position":[[452,13],[1436,13],[2042,14]]},"206":{"position":[[452,13],[1436,13],[2042,14]]}}}],["demostyledata.class).sheet(\"模板\").dowrite(data",{"_index":595,"t":{"94":{"position":[[2327,49]]},"206":{"position":[[2327,49]]}}}],["demostyledata里面加上contentloopmerg",{"_index":656,"t":{"98":{"position":[[713,36]]},"210":{"position":[[713,36]]}}}],["demo代码地址：https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/fill/filltest.java",{"_index":134,"t":{"28":{"position":[[0,122]]},"140":{"position":[[0,122]]}}}],["demo代码地址：https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/read/readtest.java",{"_index":68,"t":{"24":{"position":[[35,122]]},"44":{"position":[[0,122]]},"136":{"position":[[35,122]]},"156":{"position":[[0,122]]}}}],["demo代码地址：https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/web/webtest.java",{"_index":103,"t":{"24":{"position":[[1079,120]]},"68":{"position":[[6,120]]},"115":{"position":[[6,120]]},"136":{"position":[[1079,120]]},"180":{"position":[[6,120]]},"227":{"position":[[6,120]]}}}],["demo代码地址：https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/write/writetest.java",{"_index":91,"t":{"24":{"position":[[554,124]]},"72":{"position":[[0,124]]},"136":{"position":[[554,124]]},"184":{"position":[[0,124]]}}}],["demo这里实现2点。1",{"_index":723,"t":{"106":{"position":[[1587,13]]},"218":{"position":[[1587,13]]}}}],["demo，所以随便new一个。实际使用如果到了spr",{"_index":231,"t":{"46":{"position":[[608,45]]},"158":{"position":[[608,45]]}}}],["depend",{"_index":60,"t":{"17":{"position":[[0,12],[104,13]]},"129":{"position":[[0,12],[104,13]]}}}],["dignissim",{"_index":10,"t":{"3":{"position":[[80,9]]},"5":{"position":[[200,9],[379,9],[558,9],[737,9],[916,9],[1095,9],[1274,9],[1453,9],[1632,9],[1811,9],[1990,9],[2169,9],[2348,9],[2527,9],[2706,9],[2885,9]]}}}],["disposit",{"_index":119,"t":{"24":{"position":[[1722,13]]},"115":{"position":[[746,13]]},"117":{"position":[[570,13]]},"136":{"position":[[1722,13]]},"227":{"position":[[746,13]]},"229":{"position":[[570,13]]}}}],["doafterallanalysed(analysiscontext",{"_index":251,"t":{"46":{"position":[[1363,34],[3098,34]]},"60":{"position":[[341,34]]},"66":{"position":[[623,34]]},"158":{"position":[[1363,34],[3098,34]]},"172":{"position":[[341,34]]},"178":{"position":[[623,34]]}}}],["dofil",{"_index":167,"t":{"32":{"position":[[743,10]]},"144":{"position":[[743,10]]}}}],["dolor",{"_index":2,"t":{"3":{"position":[[12,5],[164,5]]},"5":{"position":[[132,5],[284,5],[311,5],[463,5],[490,5],[642,5],[669,5],[821,5],[848,5],[1000,5],[1027,5],[1179,5],[1206,5],[1358,5],[1385,5],[1537,5],[1564,5],[1716,5],[1743,5],[1895,5],[1922,5],[2074,5],[2101,5],[2253,5],[2280,5],[2432,5],[2459,5],[2611,5],[2638,5],[2790,5],[2817,5],[2969,5]]}}}],["doubl",{"_index":141,"t":{"30":{"position":[[112,6]]},"46":{"position":[[119,6]]},"48":{"position":[[191,6]]},"74":{"position":[[189,6]]},"78":{"position":[[271,6]]},"80":{"position":[[223,6]]},"84":{"position":[[406,6]]},"92":{"position":[[286,6]]},"94":{"position":[[991,6],[1967,6]]},"98":{"position":[[389,6]]},"104":{"position":[[222,6]]},"110":{"position":[[406,6],[791,6]]},"142":{"position":[[112,6]]},"158":{"position":[[119,6]]},"160":{"position":[[191,6]]},"186":{"position":[[189,6]]},"190":{"position":[[271,6]]},"192":{"position":[[223,6]]},"196":{"position":[[406,6]]},"204":{"position":[[286,6]]},"206":{"position":[[991,6],[1967,6]]},"210":{"position":[[389,6]]},"216":{"position":[[222,6]]},"222":{"position":[[406,6],[791,6]]}}}],["doubledata",{"_index":216,"t":{"46":{"position":[[126,12]]},"48":{"position":[[198,11]]},"52":{"position":[[370,12]]},"62":{"position":[[219,11]]},"74":{"position":[[196,11]]},"78":{"position":[[278,12]]},"80":{"position":[[230,12]]},"84":{"position":[[413,12]]},"92":{"position":[[293,12]]},"94":{"position":[[998,15],[1974,12]]},"98":{"position":[[396,12]]},"104":{"position":[[229,12]]},"110":{"position":[[798,12]]},"158":{"position":[[126,12]]},"160":{"position":[[198,11]]},"164":{"position":[[370,12]]},"174":{"position":[[219,11]]},"186":{"position":[[196,11]]},"190":{"position":[[278,12]]},"192":{"position":[[230,12]]},"196":{"position":[[413,12]]},"204":{"position":[[293,12]]},"206":{"position":[[998,15],[1974,12]]},"210":{"position":[[396,12]]},"216":{"position":[[229,12]]},"222":{"position":[[798,12]]}}}],["doubledata;}@datapubl",{"_index":745,"t":{"110":{"position":[[413,23]]},"222":{"position":[[413,23]]}}}],["download(httpservletrespons",{"_index":107,"t":{"24":{"position":[[1392,28]]},"115":{"position":[[350,28]]},"136":{"position":[[1392,28]]},"227":{"position":[[350,28]]}}}],["downloaddata",{"_index":104,"t":{"24":{"position":[[1264,13]]},"115":{"position":[[216,13]]},"136":{"position":[[1264,13]]},"227":{"position":[[216,13]]}}}],["downloaddata.class).autoclosestream(boolean.false).sheet",{"_index":766,"t":{"117":{"position":[[696,62]]},"229":{"position":[[696,62]]}}}],["downloaddata.class).sheet(\"模板\").dowrite(data",{"_index":122,"t":{"24":{"position":[[1826,48]]},"115":{"position":[[858,48]]},"136":{"position":[[1826,48]]},"227":{"position":[[858,48]]}}}],["downloadfailedusingjson(httpservletrespons",{"_index":765,"t":{"117":{"position":[[153,43]]},"229":{"position":[[153,43]]}}}],["dowrit",{"_index":427,"t":{"74":{"position":[[710,11]]},"186":{"position":[[710,11]]}}}],["dowrite(data",{"_index":438,"t":{"76":{"position":[[680,17],[1077,17]]},"96":{"position":[[1506,17],[2712,17],[3922,17]]},"102":{"position":[[425,17]]},"117":{"position":[[759,17]]},"188":{"position":[[680,17],[1077,17]]},"208":{"position":[[1506,17],[2712,17],[3922,17]]},"214":{"position":[[425,17]]},"229":{"position":[[759,17]]}}}],["draw",{"_index":731,"t":{"108":{"position":[[321,10]]},"220":{"position":[[321,10]]}}}],["drawingpatriarch",{"_index":732,"t":{"108":{"position":[[332,16]]},"220":{"position":[[332,16]]}}}],["drawingpatriarch.createcellcomment(new",{"_index":734,"t":{"108":{"position":[[419,38]]},"220":{"position":[[419,38]]}}}],["dynamicheadwrit",{"_index":672,"t":{"102":{"position":[[202,18],[266,18]]},"214":{"position":[[202,18],[266,18]]}}}],["e",{"_index":768,"t":{"117":{"position":[[796,2]]},"229":{"position":[[796,2]]}}}],["e.getmessag",{"_index":775,"t":{"117":{"position":[[1027,16]]},"229":{"position":[[1027,16]]}}}],["eachcolumn",{"_index":658,"t":{"98":{"position":[[996,11]]},"210":{"position":[[996,11]]}}}],["easyexcel",{"_index":31,"t":{"7":{"position":[[3,11]]},"22":{"position":[[134,11]]},"24":{"position":[[1625,16]]},"96":{"position":[[1532,19]]},"115":{"position":[[624,16]]},"117":{"position":[[448,16]]},"119":{"position":[[3,11]]},"134":{"position":[[134,11]]},"136":{"position":[[1625,16]]},"208":{"position":[[1532,19]]},"227":{"position":[[624,16]]},"229":{"position":[[448,16]]}}}],["easyexcel.read(file.getinputstream",{"_index":129,"t":{"24":{"position":[[2123,37]]},"68":{"position":[[442,37]]},"136":{"position":[[2123,37]]},"180":{"position":[[442,37]]}}}],["easyexcel.read(filenam",{"_index":87,"t":{"24":{"position":[[461,24]]},"46":{"position":[[2236,24],[2595,24],[3502,24],[3736,24]]},"48":{"position":[[701,24]]},"50":{"position":[[467,24]]},"52":{"position":[[1466,24]]},"54":{"position":[[505,24]]},"58":{"position":[[763,24]]},"60":{"position":[[1864,24]]},"62":{"position":[[688,24]]},"64":{"position":[[1127,24]]},"66":{"position":[[998,24]]},"136":{"position":[[461,24]]},"158":{"position":[[2236,24],[2595,24],[3502,24],[3736,24]]},"160":{"position":[[701,24]]},"162":{"position":[[467,24]]},"164":{"position":[[1466,24]]},"166":{"position":[[505,24]]},"170":{"position":[[763,24]]},"172":{"position":[[1864,24]]},"174":{"position":[[688,24]]},"176":{"position":[[1127,24]]},"178":{"position":[[998,24]]}}}],["easyexcel.read(filename).build",{"_index":287,"t":{"50":{"position":[[685,33]]},"162":{"position":[[685,33]]}}}],["easyexcel.read(filename).head(demodata.class).sheet().doreadsync",{"_index":335,"t":{"56":{"position":[[263,67]]},"168":{"position":[[263,67]]}}}],["easyexcel.read(filename).sheet().doreadsync",{"_index":340,"t":{"56":{"position":[[503,46]]},"168":{"position":[[503,46]]}}}],["easyexcel.readsheet(0).build",{"_index":269,"t":{"46":{"position":[[3858,31]]},"158":{"position":[[3858,31]]}}}],["easyexcel.readsheet(0).head(demodata.class).registerreadlistener(new",{"_index":291,"t":{"50":{"position":[[796,68]]},"162":{"position":[[796,68]]}}}],["easyexcel.readsheet(1).head(demodata.class).registerreadlistener(new",{"_index":293,"t":{"50":{"position":[[917,68]]},"162":{"position":[[917,68]]}}}],["easyexcel.write(filenam",{"_index":100,"t":{"24":{"position":[[996,25]]},"32":{"position":[[676,25]]},"74":{"position":[[655,25],[936,25],[1178,25]]},"76":{"position":[[577,25],[974,25]]},"78":{"position":[[589,25]]},"80":{"position":[[558,25]]},"82":{"position":[[385,25],[925,25]]},"84":{"position":[[792,25]]},"86":{"position":[[2788,25]]},"88":{"position":[[3174,25]]},"90":{"position":[[452,25]]},"92":{"position":[[676,25]]},"94":{"position":[[2301,25]]},"96":{"position":[[1400,25],[1684,25],[2964,25]]},"98":{"position":[[802,25],[1169,25]]},"100":{"position":[[353,25]]},"102":{"position":[[325,25]]},"104":{"position":[[837,25]]},"106":{"position":[[2028,25]]},"108":{"position":[[1023,25]]},"110":{"position":[[1155,25]]},"136":{"position":[[996,25]]},"144":{"position":[[676,25]]},"186":{"position":[[655,25],[936,25],[1178,25]]},"188":{"position":[[577,25],[974,25]]},"190":{"position":[[589,25]]},"192":{"position":[[558,25]]},"194":{"position":[[385,25],[925,25]]},"196":{"position":[[792,25]]},"198":{"position":[[2788,25]]},"200":{"position":[[3174,25]]},"202":{"position":[[452,25]]},"204":{"position":[[676,25]]},"206":{"position":[[2301,25]]},"208":{"position":[[1400,25],[1684,25],[2964,25]]},"210":{"position":[[802,25],[1169,25]]},"212":{"position":[[353,25]]},"214":{"position":[[325,25]]},"216":{"position":[[837,25]]},"218":{"position":[[2028,25]]},"220":{"position":[[1023,25]]},"222":{"position":[[1155,25]]}}}],["easyexcel.write(filename).build",{"_index":456,"t":{"82":{"position":[[1517,34]]},"194":{"position":[[1517,34]]}}}],["easyexcel.write(filename).head(head()).sheet(\"模板\").dowrite(datalist",{"_index":753,"t":{"113":{"position":[[222,71]]},"225":{"position":[[222,71]]}}}],["easyexcel.write(filename).withtemplate(templatefilename).build",{"_index":170,"t":{"32":{"position":[[928,65]]},"34":{"position":[[427,65]]},"36":{"position":[[553,65]]},"38":{"position":[[436,65]]},"40":{"position":[[469,65]]},"144":{"position":[[928,65]]},"146":{"position":[[427,65]]},"148":{"position":[[553,65]]},"150":{"position":[[436,65]]},"152":{"position":[[469,65]]}}}],["easyexcel.write(filename).withtemplate(templatefilename).sheet().dofill(data",{"_index":162,"t":{"32":{"position":[[454,80]]},"144":{"position":[[454,80]]}}}],["easyexcel.write(filename).withtemplate(templatefilename).sheet().dofill(filldata",{"_index":151,"t":{"30":{"position":[[615,82]]},"142":{"position":[[615,82]]}}}],["easyexcel.write(filename).withtemplate(templatefilename).sheet().dofill(map",{"_index":159,"t":{"30":{"position":[[937,77]]},"142":{"position":[[937,77]]}}}],["easyexcel.write(response.getoutputstream",{"_index":121,"t":{"24":{"position":[[1782,43]]},"115":{"position":[[814,43]]},"117":{"position":[[652,43]]},"136":{"position":[[1782,43]]},"227":{"position":[[814,43]]},"229":{"position":[[652,43]]}}}],["easyexcel.writersheet(\"模板\").build",{"_index":429,"t":{"74":{"position":[[1253,36]]},"82":{"position":[[485,36]]},"186":{"position":[[1253,36]]},"194":{"position":[[485,36]]}}}],["easyexcel.writersheet(\"模板\").needhead(boolean.false).build",{"_index":664,"t":{"100":{"position":[[479,60]]},"212":{"position":[[479,60]]}}}],["easyexcel.writersheet().build",{"_index":172,"t":{"32":{"position":[[1018,32]]},"34":{"position":[[517,32]]},"36":{"position":[[643,32]]},"38":{"position":[[526,32]]},"40":{"position":[[559,32]]},"144":{"position":[[1018,32]]},"146":{"position":[[517,32]]},"148":{"position":[[643,32]]},"150":{"position":[[526,32]]},"152":{"position":[[559,32]]}}}],["easyexcel.writersheet(i",{"_index":454,"t":{"82":{"position":[[1137,24],[1769,24]]},"194":{"position":[[1137,24],[1769,24]]}}}],["easyexcel.writertable(0).needhead(boolean.true).build",{"_index":668,"t":{"100":{"position":[[622,56]]},"212":{"position":[[622,56]]}}}],["easyexcel.writertable(1).needhead(boolean.true).build",{"_index":670,"t":{"100":{"position":[[704,56]]},"212":{"position":[[704,56]]}}}],["elementum",{"_index":9,"t":{"3":{"position":[[70,9]]},"5":{"position":[[190,9],[369,9],[548,9],[727,9],[906,9],[1085,9],[1264,9],[1443,9],[1622,9],[1801,9],[1980,9],[2159,9],[2338,9],[2517,9],[2696,9],[2875,9]]}}}],["elit",{"_index":7,"t":{"3":{"position":[[51,5]]},"5":{"position":[[171,5],[350,5],[529,5],[708,5],[887,5],[1066,5],[1245,5],[1424,5],[1603,5],[1782,5],[1961,5],[2140,5],[2319,5],[2498,5],[2677,5],[2856,5]]}}}],["empti",{"_index":488,"t":{"86":{"position":[[1544,5]]},"198":{"position":[[1544,5]]}}}],["ero",{"_index":15,"t":{"3":{"position":[[128,4]]},"5":{"position":[[248,4],[427,4],[606,4],[785,4],[964,4],[1143,4],[1322,4],[1501,4],[1680,4],[1859,4],[2038,4],[2217,4],[2396,4],[2575,4],[2754,4],[2933,4]]}}}],["excel",{"_index":67,"t":{"24":{"position":[[27,7],[178,14],[546,7],[699,14],[1206,25],[1240,14],[1545,8],[1896,14]]},"26":{"position":[[8,7]]},"36":{"position":[[1312,11]]},"42":{"position":[[8,6]]},"46":{"position":[[0,8],[1851,14]]},"48":{"position":[[0,8],[9,10]]},"50":{"position":[[0,8],[9,10],[107,14]]},"52":{"position":[[0,8],[9,10],[1120,14]]},"54":{"position":[[0,8],[9,10],[66,14]]},"56":{"position":[[0,8],[9,10]]},"58":{"position":[[0,8],[9,10],[479,14]]},"60":{"position":[[19,8],[1557,14]]},"62":{"position":[[0,8],[145,7],[359,14]]},"64":{"position":[[0,8],[9,10],[830,14]]},"66":{"position":[[0,8],[9,10]]},"68":{"position":[[127,8],[136,10],[209,14]]},"70":{"position":[[8,6]]},"74":{"position":[[0,8],[288,14]]},"76":{"position":[[0,8],[51,14]]},"78":{"position":[[0,8],[316,14]]},"80":{"position":[[0,8],[267,14]]},"82":{"position":[[0,8],[47,14]]},"84":{"position":[[0,8],[215,9],[324,9],[459,14]]},"86":{"position":[[0,8],[493,14]]},"88":{"position":[[0,8],[552,14]]},"90":{"position":[[0,10],[11,8],[55,14]]},"92":{"position":[[0,8],[330,14]]},"94":{"position":[[19,8],[2018,14]]},"96":{"position":[[0,8],[51,14]]},"98":{"position":[[19,8],[445,14]]},"100":{"position":[[0,8],[48,14]]},"102":{"position":[[0,8],[124,14]]},"104":{"position":[[0,8],[487,14]]},"106":{"position":[[0,8],[1697,14]]},"108":{"position":[[0,8],[676,14]]},"110":{"position":[[0,8],[215,9],[324,9],[600,9],[709,9],[892,14]]},"113":{"position":[[0,8]]},"115":{"position":[[155,25],[192,14]]},"136":{"position":[[27,7],[178,14],[546,7],[699,14],[1206,25],[1240,14],[1545,8],[1896,14]]},"138":{"position":[[8,7]]},"148":{"position":[[1312,11]]},"154":{"position":[[8,6]]},"158":{"position":[[0,8],[1851,14]]},"160":{"position":[[0,8],[9,10]]},"162":{"position":[[0,8],[9,10],[107,14]]},"164":{"position":[[0,8],[9,10],[1120,14]]},"166":{"position":[[0,8],[9,10],[66,14]]},"168":{"position":[[0,8],[9,10]]},"170":{"position":[[0,8],[9,10],[479,14]]},"172":{"position":[[19,8],[1557,14]]},"174":{"position":[[0,8],[145,7],[359,14]]},"176":{"position":[[0,8],[9,10],[830,14]]},"178":{"position":[[0,8],[9,10]]},"180":{"position":[[127,8],[136,10],[209,14]]},"182":{"position":[[8,6]]},"186":{"position":[[0,8],[288,14]]},"188":{"position":[[0,8],[51,14]]},"190":{"position":[[0,8],[316,14]]},"192":{"position":[[0,8],[267,14]]},"194":{"position":[[0,8],[47,14]]},"196":{"position":[[0,8],[215,9],[324,9],[459,14]]},"198":{"position":[[0,8],[493,14]]},"200":{"position":[[0,8],[552,14]]},"202":{"position":[[0,10],[11,8],[55,14]]},"204":{"position":[[0,8],[330,14]]},"206":{"position":[[19,8],[2018,14]]},"208":{"position":[[0,8],[51,14]]},"210":{"position":[[19,8],[445,14]]},"212":{"position":[[0,8],[48,14]]},"214":{"position":[[0,8],[124,14]]},"216":{"position":[[0,8],[487,14]]},"218":{"position":[[0,8],[1697,14]]},"220":{"position":[[0,8],[676,14]]},"222":{"position":[[0,8],[215,9],[324,9],[600,9],[709,9],[892,14]]},"225":{"position":[[0,8]]},"227":{"position":[[155,25],[192,14]]}}}],["excelanalysisexcept",{"_index":58,"t":{"15":{"position":[[77,46]]},"127":{"position":[[77,46]]}}}],["exceldataconvertexcept",{"_index":409,"t":{"64":{"position":[[511,26],[540,25],[566,25]]},"176":{"position":[[511,26],[540,25],[566,25]]}}}],["exceldataconvertexception)except",{"_index":410,"t":{"64":{"position":[[594,37]]},"176":{"position":[[594,37]]}}}],["exceldataconvertexception.getcelldata",{"_index":413,"t":{"64":{"position":[[751,41]]},"176":{"position":[[751,41]]}}}],["exceldataconvertexception.getcolumnindex",{"_index":412,"t":{"64":{"position":[[707,43]]},"176":{"position":[[707,43]]}}}],["exceldataconvertexception.getrowindex",{"_index":411,"t":{"64":{"position":[[666,40]]},"176":{"position":[[666,40]]}}}],["excelignor",{"_index":423,"t":{"74":{"position":[[224,12]]},"186":{"position":[[224,12]]}}}],["excelproperti",{"_index":276,"t":{"48":{"position":[[255,23],[302,22],[422,17]]},"52":{"position":[[1635,27]]},"74":{"position":[[69,23],[116,22],[158,22]]},"78":{"position":[[368,22]]},"80":{"position":[[76,22],[132,22],[183,22],[325,22]]},"82":{"position":[[108,22]]},"84":{"position":[[276,22]]},"90":{"position":[[107,22]]},"92":{"position":[[134,23],[181,22],[255,22]]},"94":{"position":[[871,23],[918,22],[960,22],[1847,23],[1894,22],[1936,22]]},"98":{"position":[[269,23],[316,22],[358,22]]},"104":{"position":[[88,23],[135,38],[193,20]]},"110":{"position":[[276,22],[661,22]]},"160":{"position":[[255,23],[302,22],[422,17]]},"164":{"position":[[1635,27]]},"186":{"position":[[69,23],[116,22],[158,22]]},"190":{"position":[[368,22]]},"192":{"position":[[76,22],[132,22],[183,22],[325,22]]},"194":{"position":[[108,22]]},"196":{"position":[[276,22]]},"202":{"position":[[107,22]]},"204":{"position":[[134,23],[181,22],[255,22]]},"206":{"position":[[871,23],[918,22],[960,22],[1847,23],[1894,22],[1936,22]]},"210":{"position":[[269,23],[316,22],[358,22]]},"216":{"position":[[88,23],[135,38],[193,20]]},"222":{"position":[[276,22],[661,22]]}}}],["excelproperty#valu",{"_index":327,"t":{"54":{"position":[[249,36]]},"166":{"position":[[249,36]]}}}],["excelproperty(convert",{"_index":299,"t":{"52":{"position":[[127,24]]},"86":{"position":[[215,24]]},"164":{"position":[[127,24]]},"198":{"position":[[215,24]]}}}],["excelproperty(index",{"_index":275,"t":{"48":{"position":[[157,20]]},"160":{"position":[[157,20]]}}}],["excelproperty(valu",{"_index":443,"t":{"78":{"position":[[70,20],[136,20],[221,20]]},"84":{"position":[[107,20],[367,20]]},"110":{"position":[[107,20],[367,20],[492,20],[752,20]]},"190":{"position":[[70,20],[136,20],[221,20]]},"196":{"position":[[107,20],[367,20]]},"222":{"position":[[107,20],[367,20],[492,20],[752,20]]}}}],["excelproperty}配合使用注解{@link",{"_index":459,"t":{"84":{"position":[[515,26]]},"196":{"position":[[515,26]]}}}],["excelproperty注解的使用，如果想不空列则需要加入order字段，而不是index,order会忽略空列，然后继续往后，而index",{"_index":432,"t":{"76":{"position":[[309,92]]},"188":{"position":[[309,92]]}}}],["excelread",{"_index":264,"t":{"46":{"position":[[3684,11],[3696,11],[3722,11],[3947,12]]},"50":{"position":[[633,11],[645,11],[671,11],[1133,12]]},"158":{"position":[[3684,11],[3696,11],[3722,11],[3947,12]]},"162":{"position":[[633,11],[645,11],[671,11],[1133,12]]}}}],["excelreader.finish",{"_index":271,"t":{"46":{"position":[[4004,21]]},"50":{"position":[[1190,21]]},"158":{"position":[[4004,21]]},"162":{"position":[[1190,21]]}}}],["excelreader.read(readsheet",{"_index":270,"t":{"46":{"position":[[3903,28]]},"158":{"position":[[3903,28]]}}}],["excelreader.read(readsheet1",{"_index":297,"t":{"50":{"position":[[1076,28]]},"162":{"position":[[1076,28]]}}}],["exceltyp",{"_index":99,"t":{"24":{"position":[[980,15]]},"74":{"position":[[639,15],[920,15]]},"136":{"position":[[980,15]]},"186":{"position":[[639,15],[920,15]]}}}],["excelwrit",{"_index":169,"t":{"32":{"position":[[902,11],[914,11]]},"34":{"position":[[401,11],[413,11]]},"36":{"position":[[527,11],[539,11]]},"38":{"position":[[410,11],[422,11]]},"40":{"position":[[443,11],[455,11]]},"74":{"position":[[1126,11],[1138,11],[1164,11],[1366,12]]},"82":{"position":[[311,11],[323,11],[371,11],[726,12],[911,11],[1318,12],[1503,11],[1971,12]]},"100":{"position":[[301,11],[313,11],[339,11],[943,12]]},"144":{"position":[[902,11],[914,11]]},"146":{"position":[[401,11],[413,11]]},"148":{"position":[[527,11],[539,11]]},"150":{"position":[[410,11],[422,11]]},"152":{"position":[[443,11],[455,11]]},"186":{"position":[[1126,11],[1138,11],[1164,11],[1366,12]]},"194":{"position":[[311,11],[323,11],[371,11],[726,12],[911,11],[1318,12],[1503,11],[1971,12]]},"212":{"position":[[301,11],[313,11],[339,11],[943,12]]}}}],["excelwriter.fill(data",{"_index":173,"t":{"32":{"position":[[1051,24],[1089,24]]},"34":{"position":[[894,24],[944,24]]},"36":{"position":[[686,24],[724,24]]},"38":{"position":[[654,24],[704,24]]},"144":{"position":[[1051,24],[1089,24]]},"146":{"position":[[894,24],[944,24]]},"148":{"position":[[686,24],[724,24]]},"150":{"position":[[654,24],[704,24]]}}}],["excelwriter.fill(map",{"_index":189,"t":{"34":{"position":[[1114,21]]},"36":{"position":[[873,21]]},"38":{"position":[[850,21]]},"40":{"position":[[1256,21]]},"146":{"position":[[1114,21]]},"148":{"position":[[873,21]]},"150":{"position":[[850,21]]},"152":{"position":[[1256,21]]}}}],["excelwriter.fill(new",{"_index":212,"t":{"40":{"position":[[752,20],[828,20],[904,20],[968,20],[1032,20],[1096,20]]},"152":{"position":[[752,20],[828,20],[904,20],[968,20],[1032,20],[1096,20]]}}}],["excelwriter.finish",{"_index":174,"t":{"32":{"position":[[1139,21]]},"34":{"position":[[1149,21]]},"36":{"position":[[1265,21]]},"38":{"position":[[895,21]]},"40":{"position":[[1301,21]]},"74":{"position":[[1390,21]]},"82":{"position":[[750,21],[1342,21],[1995,21]]},"100":{"position":[[967,21]]},"144":{"position":[[1139,21]]},"146":{"position":[[1149,21]]},"148":{"position":[[1265,21]]},"150":{"position":[[895,21]]},"152":{"position":[[1301,21]]},"186":{"position":[[1390,21]]},"194":{"position":[[750,21],[1342,21],[1995,21]]},"212":{"position":[[967,21]]}}}],["excelwriter.write(data",{"_index":430,"t":{"74":{"position":[[1290,25]]},"82":{"position":[[650,23],[1242,23],[1895,23]]},"100":{"position":[[774,25],[854,25]]},"186":{"position":[[1290,25]]},"194":{"position":[[650,23],[1242,23],[1895,23]]},"212":{"position":[[774,25],[854,25]]}}}],["excelwriter.write(totallistlist",{"_index":203,"t":{"36":{"position":[[1219,32]]},"148":{"position":[[1219,32]]}}}],["excel对应的实体对象,并使用{@link",{"_index":277,"t":{"48":{"position":[[397,24]]},"160":{"position":[[397,24]]}}}],["excel，所以需要创建excel一行一行的回调监听器，参照{@link",{"_index":73,"t":{"24":{"position":[[220,46],[1940,46]]},"46":{"position":[[1896,46]]},"48":{"position":[[474,46]]},"50":{"position":[[152,46]]},"52":{"position":[[1226,46]]},"54":{"position":[[108,46]]},"58":{"position":[[524,46]]},"60":{"position":[[1607,44]]},"62":{"position":[[416,46]]},"64":{"position":[[884,46]]},"68":{"position":[[256,46]]},"136":{"position":[[220,46],[1940,46]]},"158":{"position":[[1896,46]]},"160":{"position":[[474,46]]},"162":{"position":[[152,46]]},"164":{"position":[[1226,46]]},"166":{"position":[[108,46]]},"170":{"position":[[524,46]]},"172":{"position":[[1607,44]]},"174":{"position":[[416,46]]},"176":{"position":[[884,46]]},"180":{"position":[[256,46]]}}}],["except",{"_index":404,"t":{"64":{"position":[[240,9],[277,9],[334,10],[489,10]]},"86":{"position":[[590,9]]},"117":{"position":[[785,10]]},"176":{"position":[[240,9],[277,9],[334,10],[489,10]]},"198":{"position":[[590,9]]},"229":{"position":[[785,10]]}}}],["exception.getmessag",{"_index":407,"t":{"64":{"position":[[403,24]]},"176":{"position":[[403,24]]}}}],["exceptiondemodata",{"_index":402,"t":{"64":{"position":[[69,17],[854,18]]},"176":{"position":[[69,17],[854,18]]}}}],["exceptiondemodata.class",{"_index":416,"t":{"64":{"position":[[1152,24]]},"176":{"position":[[1152,24]]}}}],["exceptionread",{"_index":415,"t":{"64":{"position":[[992,15]]},"176":{"position":[[992,15]]}}}],["excludecolumnfilednam",{"_index":434,"t":{"76":{"position":[[439,23]]},"188":{"position":[[439,23]]}}}],["excludecolumnfilednames.add(\"d",{"_index":436,"t":{"76":{"position":[[488,36]]},"188":{"position":[[488,36]]}}}],["excludeorincludewrit",{"_index":431,"t":{"76":{"position":[[166,23],[235,23],[734,23]]},"188":{"position":[[166,23],[235,23],[734,23]]}}}],["extend",{"_index":349,"t":{"58":{"position":[[348,7]]},"66":{"position":[[64,7]]},"170":{"position":[[348,7]]},"178":{"position":[[64,7]]}}}],["extra",{"_index":359,"t":{"60":{"position":[[155,5],[426,6]]},"172":{"position":[[155,5],[426,6]]}}}],["extra(cellextra",{"_index":364,"t":{"60":{"position":[[410,15]]},"172":{"position":[[410,15]]}}}],["extra.getcolumnindex",{"_index":371,"t":{"60":{"position":[[630,23],[815,23]]},"172":{"position":[[630,23],[815,23]]}}}],["extra.getfirstcolumnindex",{"_index":380,"t":{"60":{"position":[[1050,28],[1346,28]]},"172":{"position":[[1050,28],[1346,28]]}}}],["extra.getfirstrowindex",{"_index":379,"t":{"60":{"position":[[1024,25],[1320,25]]},"172":{"position":[[1024,25],[1320,25]]}}}],["extra.getlastcolumnindex",{"_index":382,"t":{"60":{"position":[[1104,27],[1400,28]]},"172":{"position":[[1104,27],[1400,28]]}}}],["extra.getlastrowindex",{"_index":381,"t":{"60":{"position":[[1079,24],[1375,24]]},"172":{"position":[[1079,24],[1375,24]]}}}],["extra.getrowindex",{"_index":370,"t":{"60":{"position":[[609,20],[794,20]]},"172":{"position":[[609,20],[794,20]]}}}],["extra.gettext",{"_index":372,"t":{"60":{"position":[[654,17],[839,17],[1132,17]]},"172":{"position":[[654,17],[839,17],[1132,17]]}}}],["extra.gettyp",{"_index":367,"t":{"60":{"position":[[520,17]]},"172":{"position":[[520,17]]}}}],["extra.xlsx",{"_index":388,"t":{"60":{"position":[[1815,13]]},"172":{"position":[[1815,13]]}}}],["extraread",{"_index":387,"t":{"60":{"position":[[1732,11]]},"172":{"position":[[1732,11]]}}}],["extraread(cellextratypeenum.com",{"_index":390,"t":{"60":{"position":[[1951,37]]},"172":{"position":[[1951,37]]}}}],["extraread(cellextratypeenum.hyperlink",{"_index":391,"t":{"60":{"position":[[2006,39]]},"172":{"position":[[2006,39]]}}}],["extraread(cellextratypeenum.merge).sheet().doread",{"_index":392,"t":{"60":{"position":[[2067,53]]},"172":{"position":[[2067,53]]}}}],["failur",{"_index":773,"t":{"117":{"position":[[985,11]]},"229":{"position":[[985,11]]}}}],["fals",{"_index":179,"t":{"34":{"position":[[622,24]]},"146":{"position":[[622,24]]}}}],["file",{"_index":128,"t":{"24":{"position":[[2096,5]]},"68":{"position":[[415,5]]},"86":{"position":[[125,4],[130,5]]},"136":{"position":[[2096,5]]},"180":{"position":[[415,5]]},"198":{"position":[[125,4],[130,5]]}}}],["file(imagepath",{"_index":477,"t":{"86":{"position":[[845,17],[1080,18],[1125,17],[1895,18],[2319,18]]},"198":{"position":[[845,17],[1080,18],[1125,17],[1895,18],[2319,18]]}}}],["file.separ",{"_index":84,"t":{"24":{"position":[[387,14]]},"30":{"position":[[331,14],[357,14]]},"32":{"position":[[250,14],[276,14]]},"34":{"position":[[245,14],[271,14]]},"36":{"position":[[349,14],[375,14]]},"38":{"position":[[248,14],[274,14]]},"40":{"position":[[283,14],[309,14]]},"46":{"position":[[2126,14],[2521,14],[3428,14],[3638,14]]},"48":{"position":[[653,14]]},"50":{"position":[[324,14],[603,14]]},"52":{"position":[[1401,14]]},"54":{"position":[[440,14]]},"56":{"position":[[162,14]]},"58":{"position":[[698,14]]},"60":{"position":[[1798,14]]},"62":{"position":[[615,14]]},"64":{"position":[[1062,14]]},"66":{"position":[[932,14]]},"86":{"position":[[756,14]]},"90":{"position":[[271,14]]},"136":{"position":[[387,14]]},"142":{"position":[[331,14],[357,14]]},"144":{"position":[[250,14],[276,14]]},"146":{"position":[[245,14],[271,14]]},"148":{"position":[[349,14],[375,14]]},"150":{"position":[[248,14],[274,14]]},"152":{"position":[[283,14],[309,14]]},"158":{"position":[[2126,14],[2521,14],[3428,14],[3638,14]]},"160":{"position":[[653,14]]},"162":{"position":[[324,14],[603,14]]},"164":{"position":[[1401,14]]},"166":{"position":[[440,14]]},"168":{"position":[[162,14]]},"170":{"position":[[698,14]]},"172":{"position":[[1798,14]]},"174":{"position":[[615,14]]},"176":{"position":[[1062,14]]},"178":{"position":[[932,14]]},"198":{"position":[[756,14]]},"202":{"position":[[271,14]]}}}],["filenam",{"_index":81,"t":{"24":{"position":[[342,8],[829,8],[1649,8],[1761,8]]},"30":{"position":[[410,8],[713,8]]},"32":{"position":[[336,8],[589,8],[815,8]]},"34":{"position":[[311,8]]},"36":{"position":[[428,8]]},"38":{"position":[[317,8]]},"40":{"position":[[351,8]]},"46":{"position":[[2081,8],[2476,8],[3383,8],[3593,8]]},"48":{"position":[[608,8]]},"50":{"position":[[279,8],[558,8]]},"52":{"position":[[1356,8]]},"54":{"position":[[395,8]]},"56":{"position":[[117,8]]},"58":{"position":[[653,8]]},"60":{"position":[[1753,8]]},"62":{"position":[[570,8]]},"64":{"position":[[1017,8]]},"66":{"position":[[887,8]]},"74":{"position":[[482,8],[763,8],[1014,8]]},"76":{"position":[[199,8],[698,8]]},"78":{"position":[[448,8]]},"80":{"position":[[411,8]]},"82":{"position":[[219,8],[802,8],[1394,8]]},"84":{"position":[[647,8]]},"86":{"position":[[609,8]]},"88":{"position":[[686,8]]},"90":{"position":[[308,8]]},"92":{"position":[[526,8]]},"94":{"position":[[2150,8]]},"96":{"position":[[302,8],[1588,8],[2868,8]]},"98":{"position":[[621,8],[896,8]]},"100":{"position":[[145,8]]},"102":{"position":[[230,8]]},"104":{"position":[[678,8]]},"106":{"position":[[1879,8]]},"108":{"position":[[817,8]]},"110":{"position":[[1006,8]]},"113":{"position":[[79,8]]},"115":{"position":[[648,8],[793,8]]},"117":{"position":[[472,8],[617,8]]},"136":{"position":[[342,8],[829,8],[1649,8],[1761,8]]},"142":{"position":[[410,8],[713,8]]},"144":{"position":[[336,8],[589,8],[815,8]]},"146":{"position":[[311,8]]},"148":{"position":[[428,8]]},"150":{"position":[[317,8]]},"152":{"position":[[351,8]]},"158":{"position":[[2081,8],[2476,8],[3383,8],[3593,8]]},"160":{"position":[[608,8]]},"162":{"position":[[279,8],[558,8]]},"164":{"position":[[1356,8]]},"166":{"position":[[395,8]]},"168":{"position":[[117,8]]},"170":{"position":[[653,8]]},"172":{"position":[[1753,8]]},"174":{"position":[[570,8]]},"176":{"position":[[1017,8]]},"178":{"position":[[887,8]]},"186":{"position":[[482,8],[763,8],[1014,8]]},"188":{"position":[[199,8],[698,8]]},"190":{"position":[[448,8]]},"192":{"position":[[411,8]]},"194":{"position":[[219,8],[802,8],[1394,8]]},"196":{"position":[[647,8]]},"198":{"position":[[609,8]]},"200":{"position":[[686,8]]},"202":{"position":[[308,8]]},"204":{"position":[[526,8]]},"206":{"position":[[2150,8]]},"208":{"position":[[302,8],[1588,8],[2868,8]]},"210":{"position":[[621,8],[896,8]]},"212":{"position":[[145,8]]},"214":{"position":[[230,8]]},"216":{"position":[[678,8]]},"218":{"position":[[1879,8]]},"220":{"position":[[817,8]]},"222":{"position":[[1006,8]]},"225":{"position":[[79,8]]},"227":{"position":[[648,8],[793,8]]},"229":{"position":[[472,8],[617,8]]}}}],["fileutils.openinputstream(new",{"_index":476,"t":{"86":{"position":[[815,29]]},"198":{"position":[[815,29]]}}}],["fill",{"_index":146,"t":{"30":{"position":[[348,6]]},"32":{"position":[[267,6]]},"34":{"position":[[262,6]]},"36":{"position":[[366,6],[1208,6]]},"38":{"position":[[265,6]]},"40":{"position":[[300,6]]},"96":{"position":[[1889,7],[1998,9],[3169,7]]},"142":{"position":[[348,6]]},"144":{"position":[[267,6]]},"146":{"position":[[262,6]]},"148":{"position":[[366,6],[1208,6]]},"150":{"position":[[265,6]]},"152":{"position":[[300,6]]},"208":{"position":[[1889,7],[1998,9],[3169,7]]}}}],["fillconfig",{"_index":183,"t":{"34":{"position":[[814,10],[825,10],[919,11],[969,11]]},"38":{"position":[[559,10],[570,10],[679,11],[729,11]]},"40":{"position":[[592,10],[603,10],[803,11],[879,11]]},"146":{"position":[[814,10],[825,10],[919,11],[969,11]]},"150":{"position":[[559,10],[570,10],[679,11],[729,11]]},"152":{"position":[[592,10],[603,10],[803,11],[879,11]]}}}],["fillconfig.builder().direction(writedirectionenum.horizontal).build",{"_index":206,"t":{"38":{"position":[[583,70]]},"40":{"position":[[616,70]]},"150":{"position":[[583,70]]},"152":{"position":[[616,70]]}}}],["fillconfig.builder().forcenewrow(boolean.true).build",{"_index":184,"t":{"34":{"position":[[838,55]]},"146":{"position":[[838,55]]}}}],["filldata",{"_index":138,"t":{"30":{"position":[[72,8],[530,8],[539,8],[554,11]]},"142":{"position":[[72,8],[530,8],[539,8],[554,11]]}}}],["filldata.setnam",{"_index":149,"t":{"30":{"position":[[566,23]]},"142":{"position":[[566,23]]}}}],["filldata.setnumber(5.2",{"_index":150,"t":{"30":{"position":[[590,24]]},"142":{"position":[[590,24]]}}}],["fillforegroundcolor",{"_index":574,"t":{"94":{"position":[[171,19],[360,19],[581,19],[785,19],[1159,19],[1344,19],[1561,19],[1761,19]]},"206":{"position":[[171,19],[360,19],[581,19],[785,19],[1159,19],[1344,19],[1561,19],[1761,19]]}}}],["fillpatterntyp",{"_index":541,"t":{"88":{"position":[[2259,15]]},"96":{"position":[[767,15],[833,22],[2490,15],[3558,15]]},"200":{"position":[[2259,15]]},"208":{"position":[[767,15],[833,22],[2490,15],[3558,15]]}}}],["fillpatterntype.solid_foreground",{"_index":542,"t":{"88":{"position":[[2275,33]]},"94":{"position":[[1125,33],[1310,33],[1527,33],[1727,33]]},"96":{"position":[[783,33],[2506,33],[3574,33]]},"200":{"position":[[2275,33]]},"206":{"position":[[1125,33],[1310,33],[1527,33],[1727,33]]},"208":{"position":[[783,33],[2506,33],[3574,33]]}}}],["fillpatterntypeenum.solid_foreground",{"_index":573,"t":{"94":{"position":[[133,37],[322,37],[543,37],[747,37]]},"206":{"position":[[133,37],[322,37],[543,37],[747,37]]}}}],["fillstylecellwritehandl",{"_index":630,"t":{"96":{"position":[[2622,29],[3778,25]]},"208":{"position":[[2622,29],[3778,25]]}}}],["fillwrapp",{"_index":211,"t":{"40":{"position":[[738,13]]},"152":{"position":[[738,13]]}}}],["fillwrapper(\"data1",{"_index":213,"t":{"40":{"position":[[773,20],[849,20]]},"152":{"position":[[773,20],[849,20]]}}}],["fillwrapper(\"data2",{"_index":214,"t":{"40":{"position":[[925,20],[989,20]]},"152":{"position":[[925,20],[989,20]]}}}],["fillwrapper(\"data3",{"_index":215,"t":{"40":{"position":[[1053,20],[1117,20]]},"152":{"position":[[1053,20],[1117,20]]}}}],["final",{"_index":222,"t":{"46":{"position":[[356,5],[2699,5],[3934,7]]},"50":{"position":[[1120,7]]},"66":{"position":[[181,5]]},"74":{"position":[[1331,7]]},"82":{"position":[[691,7],[1283,7],[1936,7]]},"100":{"position":[[908,7]]},"158":{"position":[[356,5],[2699,5],[3934,7]]},"162":{"position":[[1120,7]]},"178":{"position":[[181,5]]},"186":{"position":[[1331,7]]},"194":{"position":[[691,7],[1283,7],[1936,7]]},"212":{"position":[[908,7]]}}}],["finish",{"_index":334,"t":{"56":{"position":[[227,13],[452,13]]},"66":{"position":[[984,13]]},"74":{"position":[[1344,11]]},"82":{"position":[[704,11],[1296,11],[1949,11]]},"100":{"position":[[921,11]]},"168":{"position":[[227,13],[452,13]]},"178":{"position":[[984,13]]},"186":{"position":[[1344,11]]},"194":{"position":[[704,11],[1296,11],[1949,11]]},"212":{"position":[[921,11]]}}}],["finish的时候会自动关闭outputstream",{"_index":105,"t":{"24":{"position":[[1303,49]]},"115":{"position":[[261,49]]},"136":{"position":[[1303,49]]},"227":{"position":[[261,49]]}}}],["firstcolumnindex",{"_index":650,"t":{"98":{"position":[[149,16]]},"210":{"position":[[149,16]]}}}],["firstrowindex:{},firstcolumnindex;{},lastrowindex:{},lastcolumnindex",{"_index":378,"t":{"60":{"position":[[917,94],[1225,94]]},"172":{"position":[[917,94],[1225,94]]}}}],["forcenewrow",{"_index":177,"t":{"34":{"position":[[558,15],[650,11]]},"146":{"position":[[558,15],[650,11]]}}}],["forcenewrow=tru",{"_index":182,"t":{"34":{"position":[[748,16]]},"146":{"position":[[748,16]]}}}],["formula",{"_index":532,"t":{"88":{"position":[[1646,7]]},"200":{"position":[[1646,7]]}}}],["formula.setformuladata(formuladata",{"_index":534,"t":{"88":{"position":[[1767,36]]},"200":{"position":[[1767,36]]}}}],["formuladata",{"_index":515,"t":{"88":{"position":[[298,12],[1722,11],[1734,11],[1752,14]]},"200":{"position":[[298,12],[1722,11],[1734,11],[1752,14]]}}}],["formuladata.setformulavalue(\"replace(123456789,1,1,2",{"_index":536,"t":{"88":{"position":[[1874,56]]},"200":{"position":[[1874,56]]}}}],["formulavalu",{"_index":397,"t":{"62":{"position":[[299,14]]},"174":{"position":[[299,14]]}}}],["fusc",{"_index":12,"t":{"3":{"position":[[101,5]]},"5":{"position":[[221,5],[400,5],[579,5],[758,5],[937,5],[1116,5],[1295,5],[1474,5],[1653,5],[1832,5],[2011,5],[2190,5],[2369,5],[2548,5],[2727,5],[2906,5]]}}}],["getmapping(\"download",{"_index":106,"t":{"24":{"position":[[1356,23]]},"115":{"position":[[314,23]]},"136":{"position":[[1356,23]]},"227":{"position":[[314,23]]}}}],["getmapping(\"downloadfailedusingjson",{"_index":764,"t":{"117":{"position":[[102,38]]},"229":{"position":[[102,38]]}}}],["getorcreatestyl",{"_index":626,"t":{"96":{"position":[[2310,16]]},"208":{"position":[[2310,16]]}}}],["getter@setter@equalsandhashcod",{"_index":571,"t":{"94":{"position":[[32,34]]},"98":{"position":[[36,34]]},"206":{"position":[[32,34]]},"210":{"position":[[36,34]]}}}],["getter@setter@equalsandhashcode@contentrowheight(10)@headrowheight(20)@columnwidth(25)publ",{"_index":562,"t":{"92":{"position":[[13,93]]},"204":{"position":[[13,93]]}}}],["getter@setter@equalsandhashcode@contentrowheight(100)@columnwidth(100",{"_index":462,"t":{"86":{"position":[[13,70]]},"198":{"position":[[13,70]]}}}],["getter@setter@equalsandhashcodepubl",{"_index":136,"t":{"30":{"position":[[27,38]]},"46":{"position":[[13,38]]},"48":{"position":[[24,38]]},"52":{"position":[[24,38]]},"60":{"position":[[32,38]]},"62":{"position":[[13,38]]},"64":{"position":[[24,38]]},"74":{"position":[[13,38]]},"78":{"position":[[13,38]]},"80":{"position":[[13,38]]},"84":{"position":[[13,38]]},"88":{"position":[[13,38]]},"104":{"position":[[13,38]]},"110":{"position":[[13,38]]},"142":{"position":[[27,38]]},"158":{"position":[[13,38]]},"160":{"position":[[24,38]]},"164":{"position":[[24,38]]},"172":{"position":[[32,38]]},"174":{"position":[[13,38]]},"176":{"position":[[24,38]]},"186":{"position":[[13,38]]},"190":{"position":[[13,38]]},"192":{"position":[[13,38]]},"196":{"position":[[13,38]]},"200":{"position":[[13,38]]},"216":{"position":[[13,38]]},"222":{"position":[[13,38]]}}}],["groupid>com.alibaba</groupid",{"_index":61,"t":{"17":{"position":[[13,30]]},"129":{"position":[[13,30]]}}}],["handlerstylewrit",{"_index":597,"t":{"96":{"position":[[150,19],[338,19],[1624,19],[2904,19]]},"208":{"position":[[150,19],[338,19],[1624,19],[2904,19]]}}}],["hashmap<str",{"_index":155,"t":{"30":{"position":[[863,15]]},"34":{"position":[[1024,15]]},"36":{"position":[[807,15]]},"38":{"position":[[784,15]]},"40":{"position":[[1190,15]]},"142":{"position":[[863,15]]},"146":{"position":[[1024,15]]},"148":{"position":[[807,15]]},"150":{"position":[[784,15]]},"152":{"position":[[1190,15]]}}}],["hashset<str",{"_index":435,"t":{"76":{"position":[[469,18],[866,18]]},"188":{"position":[[469,18],[866,18]]}}}],["head",{"_index":288,"t":{"50":{"position":[[735,7]]},"102":{"position":[[472,6]]},"113":{"position":[[323,6]]},"162":{"position":[[735,7]]},"214":{"position":[[472,6]]},"225":{"position":[[323,6]]}}}],["head(head()).sheet",{"_index":673,"t":{"102":{"position":[[362,25]]},"214":{"position":[[362,25]]}}}],["head0",{"_index":674,"t":{"102":{"position":[[551,5]]},"110":{"position":[[1373,5],[1822,5]]},"113":{"position":[[397,5]]},"214":{"position":[[551,5]]},"222":{"position":[[1373,5],[1822,5]]},"225":{"position":[[397,5]]}}}],["head0.add",{"_index":675,"t":{"102":{"position":[[584,15]]},"113":{"position":[[431,15]]},"214":{"position":[[584,15]]},"225":{"position":[[431,15]]}}}],["head0.add(\"str",{"_index":749,"t":{"110":{"position":[[1407,18],[1849,18]]},"222":{"position":[[1407,18],[1849,18]]}}}],["head1",{"_index":676,"t":{"102":{"position":[[644,5]]},"110":{"position":[[1470,5],[1912,5]]},"113":{"position":[[491,5]]},"214":{"position":[[644,5]]},"222":{"position":[[1470,5],[1912,5]]},"225":{"position":[[491,5]]}}}],["head1.add",{"_index":677,"t":{"102":{"position":[[677,14]]},"113":{"position":[[525,14]]},"214":{"position":[[677,14]]},"225":{"position":[[525,14]]}}}],["head1.add(\"numb",{"_index":750,"t":{"110":{"position":[[1504,18],[1939,18]]},"222":{"position":[[1504,18],[1939,18]]}}}],["head2",{"_index":678,"t":{"102":{"position":[[736,5]]},"110":{"position":[[1567,5],[2002,5]]},"113":{"position":[[584,5]]},"214":{"position":[[736,5]]},"222":{"position":[[1567,5],[2002,5]]},"225":{"position":[[584,5]]}}}],["head2.add",{"_index":679,"t":{"102":{"position":[[769,14]]},"113":{"position":[[618,14]]},"214":{"position":[[769,14]]},"225":{"position":[[618,14]]}}}],["head2.add(\"d",{"_index":751,"t":{"110":{"position":[[1601,16],[2029,16]]},"222":{"position":[[1601,16],[2029,16]]}}}],["headerread",{"_index":353,"t":{"58":{"position":[[631,12]]},"170":{"position":[[631,12]]}}}],["headfontstyle(fontheightinpoint",{"_index":586,"t":{"94":{"position":[[623,33],[1603,33]]},"206":{"position":[[623,33],[1603,33]]}}}],["headmap",{"_index":343,"t":{"58":{"position":[[101,7],[192,8]]},"170":{"position":[[101,7],[192,8]]}}}],["headrowheight}、{@link",{"_index":567,"t":{"92":{"position":[[413,21]]},"204":{"position":[[413,21]]}}}],["headrownumb",{"_index":325,"t":{"54":{"position":[[181,22],[204,24]]},"166":{"position":[[181,22],[204,24]]}}}],["headrownumber(1).doread",{"_index":332,"t":{"54":{"position":[[653,27]]},"166":{"position":[[653,27]]}}}],["headstyle(fillpatterntyp",{"_index":584,"t":{"94":{"position":[[514,26],[1498,26]]},"206":{"position":[[514,26],[1498,26]]}}}],["headwritecellstyl",{"_index":600,"t":{"96":{"position":[[421,18]]},"208":{"position":[[421,18]]}}}],["headwritecellstyle.setfillforegroundcolor(indexedcolors.red.getindex",{"_index":601,"t":{"96":{"position":[[475,72]]},"208":{"position":[[475,72]]}}}],["headwritecellstyle.setwritefont(headwritefont",{"_index":604,"t":{"96":{"position":[[639,47]]},"208":{"position":[[639,47]]}}}],["headwritefont",{"_index":602,"t":{"96":{"position":[[558,13]]},"208":{"position":[[558,13]]}}}],["headwritefont.setfontheightinpoints((short)20",{"_index":603,"t":{"96":{"position":[[591,47]]},"208":{"position":[[591,47]]}}}],["helper",{"_index":715,"t":{"106":{"position":[[1178,6]]},"218":{"position":[[1178,6]]}}}],["helper.createexplicitlistconstraint(new",{"_index":719,"t":{"106":{"position":[[1293,39]]},"218":{"position":[[1293,39]]}}}],["helper.createvalidation(constraint",{"_index":721,"t":{"106":{"position":[[1391,35]]},"218":{"position":[[1391,35]]}}}],["horizontal.xlsx",{"_index":205,"t":{"38":{"position":[[291,18]]},"150":{"position":[[291,18]]}}}],["horizontalcellstylestrategi",{"_index":598,"t":{"96":{"position":[[193,27],[1214,27],[1242,27]]},"208":{"position":[[193,27],[1214,27],[1242,27]]}}}],["horizontalcellstylestrategy(headwritecellstyl",{"_index":611,"t":{"96":{"position":[[1276,47]]},"208":{"position":[[1276,47]]}}}],["horizontalfil",{"_index":204,"t":{"38":{"position":[[87,16],[353,16]]},"150":{"position":[[87,16],[353,16]]}}}],["https://github.com/alibaba/easyexcel",{"_index":696,"t":{"106":{"position":[[32,57],[1601,50]]},"218":{"position":[[32,57],[1601,50]]}}}],["https://json6.cn",{"_index":64,"t":{"20":{"position":[[0,59]]},"132":{"position":[[0,59]]}}}],["https://raw.githubusercontent.com/alibaba/easyexcel/master/src/test/resources/converter/img.jpg",{"_index":486,"t":{"86":{"position":[[1252,100]]},"198":{"position":[[1252,100]]}}}],["https://yuque.com/easyexcel",{"_index":52,"t":{"9":{"position":[[193,27]]},"121":{"position":[[193,27]]}}}],["hyperlink",{"_index":374,"t":{"60":{"position":[[684,10],[1180,13]]},"88":{"position":[[144,10],[877,9]]},"106":{"position":[[566,9],[576,9]]},"172":{"position":[[684,10],[1180,13]]},"200":{"position":[[144,10],[877,9]]},"218":{"position":[[566,9],[576,9]]}}}],["hyperlink.setaddress(\"https://github.com/alibaba/easyexcel",{"_index":705,"t":{"106":{"position":[[637,61]]},"218":{"position":[[637,61]]}}}],["hyperlink.sethyperlinkdata(hyperlinkdata",{"_index":521,"t":{"88":{"position":[[1012,42]]},"200":{"position":[[1012,42]]}}}],["hyperlinkdata",{"_index":520,"t":{"88":{"position":[[961,13],[975,13],[995,16]]},"200":{"position":[[961,13],[975,13],[995,16]]}}}],["hyperlinkdata.setaddress(\"https://github.com/alibaba/easyexcel",{"_index":522,"t":{"88":{"position":[[1055,65]]},"200":{"position":[[1055,65]]}}}],["hyperlinkdata.sethyperlinktype(hyperlinktype.url",{"_index":523,"t":{"88":{"position":[[1121,50]]},"200":{"position":[[1121,50]]}}}],["i).build",{"_index":455,"t":{"82":{"position":[[1169,11]]},"194":{"position":[[1169,11]]}}}],["i).head(demodata.class).build",{"_index":458,"t":{"82":{"position":[[1801,32]]},"194":{"position":[[1801,32]]}}}],["ignor",{"_index":424,"t":{"74":{"position":[[252,8]]},"186":{"position":[[252,8]]}}}],["imagedata",{"_index":494,"t":{"86":{"position":[[1715,9],[1725,9],[1741,12],[2160,9],[2176,12]]},"198":{"position":[[1715,9],[1725,9],[1741,12],[2160,9],[2176,12]]}}}],["imagedata.setbottom(5",{"_index":503,"t":{"86":{"position":[[2103,23],[2434,23]]},"198":{"position":[[2103,23],[2434,23]]}}}],["imagedata.setimage(fileutils.readfiletobytearray(new",{"_index":497,"t":{"86":{"position":[[1842,52],[2266,52]]},"198":{"position":[[1842,52],[2266,52]]}}}],["imagedata.setimagetype(imagetype.picture_type_png",{"_index":498,"t":{"86":{"position":[[1922,51],[2338,51]]},"198":{"position":[[1922,51],[2338,51]]}}}],["imagedata.setleft(5",{"_index":504,"t":{"86":{"position":[[2127,21]]},"198":{"position":[[2127,21]]}}}],["imagedata.setleft(50",{"_index":506,"t":{"86":{"position":[[2458,22]]},"198":{"position":[[2458,22]]}}}],["imagedata.setrelativefirstcolumnindex(0",{"_index":508,"t":{"86":{"position":[[2586,41]]},"198":{"position":[[2586,41]]}}}],["imagedata.setrelativefirstrowindex(0",{"_index":507,"t":{"86":{"position":[[2547,38]]},"198":{"position":[[2547,38]]}}}],["imagedata.setrelativelastcolumnindex(1",{"_index":510,"t":{"86":{"position":[[2739,40]]},"198":{"position":[[2739,40]]}}}],["imagedata.setrelativelastrowindex(0",{"_index":509,"t":{"86":{"position":[[2628,37]]},"198":{"position":[[2628,37]]}}}],["imagedata.setright(40",{"_index":502,"t":{"86":{"position":[[2079,23]]},"198":{"position":[[2079,23]]}}}],["imagedata.setright(5",{"_index":505,"t":{"86":{"position":[[2411,22]]},"198":{"position":[[2411,22]]}}}],["imagedata.settop(5",{"_index":501,"t":{"86":{"position":[[2058,20],[2390,20]]},"198":{"position":[[2058,20],[2390,20]]}}}],["imagedatalist",{"_index":492,"t":{"86":{"position":[[1680,13]]},"198":{"position":[[1680,13]]}}}],["imagedatalist.add(imagedata",{"_index":495,"t":{"86":{"position":[[1754,29],[2189,29]]},"198":{"position":[[1754,29],[2189,29]]}}}],["imagedemodata",{"_index":464,"t":{"86":{"position":[[101,13],[517,14],[918,13],[932,13],[952,16]]},"198":{"position":[[101,13],[517,14],[918,13],[932,13],[952,16]]}}}],["imagedemodata.class).sheet().dowrite(list",{"_index":511,"t":{"86":{"position":[[2814,43]]},"198":{"position":[[2814,43]]}}}],["imagedemodata.setbytearray(fileutils.readfiletobytearray(new",{"_index":481,"t":{"86":{"position":[[1019,60]]},"198":{"position":[[1019,60]]}}}],["imagedemodata.setfile(new",{"_index":482,"t":{"86":{"position":[[1099,25]]},"198":{"position":[[1099,25]]}}}],["imagedemodata.setinputstream(inputstream",{"_index":484,"t":{"86":{"position":[[1179,42]]},"198":{"position":[[1179,42]]}}}],["imagedemodata.setstring(imagepath",{"_index":483,"t":{"86":{"position":[[1143,35]]},"198":{"position":[[1143,35]]}}}],["imagedemodata.seturl(new",{"_index":485,"t":{"86":{"position":[[1222,24]]},"198":{"position":[[1222,24]]}}}],["imagedemodata.setwritecelldatafile(writecelldata",{"_index":487,"t":{"86":{"position":[[1482,50]]},"198":{"position":[[1482,50]]}}}],["imagepath",{"_index":474,"t":{"86":{"position":[[705,9]]},"198":{"position":[[705,9]]}}}],["imagewrit",{"_index":473,"t":{"86":{"position":[[570,12],[645,12]]},"198":{"position":[[570,12],[645,12]]}}}],["img.jpg",{"_index":475,"t":{"86":{"position":[[773,10]]},"198":{"position":[[773,10]]}}}],["implement",{"_index":218,"t":{"46":{"position":[[257,10]]},"52":{"position":[[451,10]]},"58":{"position":[[319,12]]},"60":{"position":[[201,10]]},"106":{"position":[[159,10],[848,10]]},"108":{"position":[[118,10]]},"158":{"position":[[257,10]]},"164":{"position":[[451,10]]},"170":{"position":[[319,12]]},"172":{"position":[[201,10]]},"218":{"position":[[159,10],[848,10]]},"220":{"position":[[118,10]]}}}],["includecolumnfilednam",{"_index":439,"t":{"76":{"position":[[836,23]]},"188":{"position":[[836,23]]}}}],["includecolumnfilednames.add(\"d",{"_index":440,"t":{"76":{"position":[[885,36]]},"188":{"position":[[885,36]]}}}],["index",{"_index":273,"t":{"48":{"position":[[107,5]]},"78":{"position":[[102,5],[167,5],[252,5]]},"160":{"position":[[107,5]]},"190":{"position":[[102,5],[167,5],[252,5]]}}}],["indexdata",{"_index":442,"t":{"78":{"position":[[58,9],[340,10]]},"90":{"position":[[79,10]]},"190":{"position":[[58,9],[340,10]]},"202":{"position":[[79,10]]}}}],["indexdata.class).sheet(\"模板\").dowrite(data",{"_index":446,"t":{"78":{"position":[[615,45]]},"190":{"position":[[615,45]]}}}],["indexedcolors.green.getindex()@contentstyle(fillpatterntyp",{"_index":578,"t":{"94":{"position":[[260,59],[1248,59]]},"206":{"position":[[260,59],[1248,59]]}}}],["indexedcolors.pink.getindex",{"_index":583,"t":{"94":{"position":[[484,29],[1468,29]]},"206":{"position":[[484,29],[1468,29]]}}}],["indexedcolors.red.getindex()@headstyle(fillpatterntyp",{"_index":572,"t":{"94":{"position":[[76,54],[1068,54]]},"206":{"position":[[76,54],[1068,54]]}}}],["indexedcolors.sky_blue.getindex",{"_index":588,"t":{"94":{"position":[[681,33],[1661,33]]},"206":{"position":[[681,33],[1661,33]]}}}],["indexornamedata",{"_index":272,"t":{"48":{"position":[[69,15],[449,16]]},"160":{"position":[[69,15],[449,16]]}}}],["indexornamedata.class",{"_index":280,"t":{"48":{"position":[[726,22]]},"160":{"position":[[726,22]]}}}],["indexornamedatalisten",{"_index":278,"t":{"48":{"position":[[521,24]]},"160":{"position":[[521,24]]}}}],["indexornamedatalistener()).sheet().doread",{"_index":281,"t":{"48":{"position":[[753,44]]},"160":{"position":[[753,44]]}}}],["indexornameread",{"_index":279,"t":{"48":{"position":[[581,17]]},"160":{"position":[[581,17]]}}}],["indexwrit",{"_index":445,"t":{"78":{"position":[[426,12],[484,12]]},"190":{"position":[[426,12],[484,12]]}}}],["index，要么一个对象只用nam",{"_index":274,"t":{"48":{"position":[[120,33]]},"160":{"position":[[120,33]]}}}],["inmemori",{"_index":742,"t":{"108":{"position":[[963,13]]},"220":{"position":[[963,13]]}}}],["inputstream",{"_index":465,"t":{"86":{"position":[[144,11],[156,12],[788,12],[801,11]]},"198":{"position":[[144,11],[156,12],[788,12],[801,11]]}}}],["instanceof",{"_index":408,"t":{"64":{"position":[[500,10]]},"176":{"position":[[500,10]]}}}],["int",{"_index":223,"t":{"46":{"position":[[362,3],[2705,3]]},"66":{"position":[[187,3]]},"82":{"position":[[563,4],[1034,4],[1610,4]]},"104":{"position":[[1145,4]]},"113":{"position":[[826,4]]},"158":{"position":[[362,3],[2705,3]]},"178":{"position":[[187,3]]},"194":{"position":[[563,4],[1034,4],[1610,4]]},"216":{"position":[[1145,4]]},"225":{"position":[[826,4]]}}}],["invok",{"_index":57,"t":{"15":{"position":[[66,10]]},"127":{"position":[[66,10]]}}}],["invoke(demodata",{"_index":243,"t":{"46":{"position":[[980,15],[2856,15]]},"158":{"position":[[980,15],[2856,15]]}}}],["invoke(demoextradata",{"_index":363,"t":{"60":{"position":[[264,20]]},"172":{"position":[[264,20]]}}}],["invoke(map<integ",{"_index":420,"t":{"66":{"position":[[335,19]]},"178":{"position":[[335,19]]}}}],["invokehead(map<integ",{"_index":344,"t":{"58":{"position":[[151,23]]},"170":{"position":[[151,23]]}}}],["invokeheadmap",{"_index":342,"t":{"58":{"position":[[42,30]]},"64":{"position":[[468,17]]},"170":{"position":[[42,30]]},"176":{"position":[[468,17]]}}}],["ioexcept",{"_index":110,"t":{"24":{"position":[[1438,11],[2109,11]]},"68":{"position":[[428,11]]},"115":{"position":[[396,11]]},"117":{"position":[[214,11]]},"136":{"position":[[1438,11],[2109,11]]},"180":{"position":[[428,11]]},"227":{"position":[[396,11]]},"229":{"position":[[214,11]]}}}],["ipsum",{"_index":1,"t":{"3":{"position":[[6,5],[115,5],[158,5]]},"5":{"position":[[126,5],[235,5],[278,5],[305,5],[414,5],[457,5],[484,5],[593,5],[636,5],[663,5],[772,5],[815,5],[842,5],[951,5],[994,5],[1021,5],[1130,5],[1173,5],[1200,5],[1309,5],[1352,5],[1379,5],[1488,5],[1531,5],[1558,5],[1667,5],[1710,5],[1737,5],[1846,5],[1889,5],[1916,5],[2025,5],[2068,5],[2095,5],[2204,5],[2247,5],[2274,5],[2383,5],[2426,5],[2453,5],[2562,5],[2605,5],[2632,5],[2741,5],[2784,5],[2811,5],[2920,5],[2963,5]]}}}],["issue处理，当然也可以做一些pr",{"_index":65,"t":{"22":{"position":[[0,49]]},"134":{"position":[[0,49]]}}}],["java",{"_index":66,"t":{"22":{"position":[[112,11]]},"134":{"position":[[112,11]]}}}],["java7和java6",{"_index":55,"t":{"13":{"position":[[8,11]]},"125":{"position":[[8,11]]}}}],["java8",{"_index":56,"t":{"13":{"position":[[28,5]]},"125":{"position":[[28,5]]}}}],["java为string,excel为str",{"_index":322,"t":{"52":{"position":[[1595,36]]},"164":{"position":[[1595,36]]}}}],["jdk8",{"_index":163,"t":{"32":{"position":[[562,4]]},"74":{"position":[[447,5]]},"144":{"position":[[562,4]]},"186":{"position":[[447,5]]}}}],["jiaju",{"_index":593,"t":{"94":{"position":[[1035,5]]},"106":{"position":[[102,5],[790,5]]},"108":{"position":[[64,5]]},"206":{"position":[[1035,5]]},"218":{"position":[[102,5],[790,5]]},"220":{"position":[[64,5]]}}}],["json.tojsonstring(data",{"_index":246,"t":{"46":{"position":[[1052,25]]},"56":{"position":[[384,25],[646,25]]},"66":{"position":[[419,25]]},"158":{"position":[[1052,25]]},"168":{"position":[[384,25],[646,25]]},"178":{"position":[[419,25]]}}}],["json.tojsonstring(demodata",{"_index":260,"t":{"46":{"position":[[2381,29]]},"158":{"position":[[2381,29]]}}}],["json.tojsonstring(extra",{"_index":365,"t":{"60":{"position":[[486,26]]},"172":{"position":[[486,26]]}}}],["json.tojsonstring(headmap",{"_index":346,"t":{"58":{"position":[[252,28]]},"170":{"position":[[252,28]]}}}],["json（默认失败了会返回一个有部分数据的excel",{"_index":763,"t":{"117":{"position":[[41,40]]},"229":{"position":[[41,40]]}}}],["lastcolumnindex",{"_index":651,"t":{"98":{"position":[[171,15]]},"210":{"position":[[171,15]]}}}],["lastrowindex",{"_index":649,"t":{"98":{"position":[[131,12]]},"210":{"position":[[131,12]]}}}],["limit",{"_index":27,"t":{"5":{"position":[[81,5]]}}}],["link",{"_index":70,"t":{"24":{"position":[[193,8],[714,8],[1255,8],[1911,8]]},"46":{"position":[[898,6],[1866,8]]},"48":{"position":[[440,8]]},"50":{"position":[[122,8]]},"52":{"position":[[1047,13],[1135,8]]},"54":{"position":[[81,8]]},"58":{"position":[[494,8]]},"60":{"position":[[1572,8]]},"62":{"position":[[374,8]]},"64":{"position":[[845,8]]},"68":{"position":[[224,8]]},"74":{"position":[[303,8]]},"76":{"position":[[66,8]]},"78":{"position":[[331,8],[359,8]]},"80":{"position":[[282,8],[316,8]]},"82":{"position":[[62,8],[99,8]]},"84":{"position":[[474,8],[506,8]]},"86":{"position":[[508,8]]},"88":{"position":[[567,8]]},"90":{"position":[[70,8],[98,8]]},"92":{"position":[[345,8],[382,10]]},"94":{"position":[[2033,8]]},"96":{"position":[[66,8]]},"98":{"position":[[460,8],[479,6]]},"100":{"position":[[63,8]]},"102":{"position":[[139,8]]},"104":{"position":[[339,6],[401,8],[502,8],[551,10]]},"106":{"position":[[1712,8],[1748,6],[1779,6]]},"108":{"position":[[691,8],[727,6]]},"110":{"position":[[907,8]]},"115":{"position":[[207,8]]},"136":{"position":[[193,8],[714,8],[1255,8],[1911,8]]},"158":{"position":[[898,6],[1866,8]]},"160":{"position":[[440,8]]},"162":{"position":[[122,8]]},"164":{"position":[[1047,13],[1135,8]]},"166":{"position":[[81,8]]},"170":{"position":[[494,8]]},"172":{"position":[[1572,8]]},"174":{"position":[[374,8]]},"176":{"position":[[845,8]]},"180":{"position":[[224,8]]},"186":{"position":[[303,8]]},"188":{"position":[[66,8]]},"190":{"position":[[331,8],[359,8]]},"192":{"position":[[282,8],[316,8]]},"194":{"position":[[62,8],[99,8]]},"196":{"position":[[474,8],[506,8]]},"198":{"position":[[508,8]]},"200":{"position":[[567,8]]},"202":{"position":[[70,8],[98,8]]},"204":{"position":[[345,8],[382,10]]},"206":{"position":[[2033,8]]},"208":{"position":[[66,8]]},"210":{"position":[[460,8],[479,6]]},"212":{"position":[[63,8]]},"214":{"position":[[139,8]]},"216":{"position":[[339,6],[401,8],[502,8],[551,10]]},"218":{"position":[[1712,8],[1748,6],[1779,6]]},"220":{"position":[[691,8],[727,6]]},"222":{"position":[[907,8]]},"227":{"position":[[207,8]]}}}],["list",{"_index":29,"t":{"5":{"position":[[109,4]]},"32":{"position":[[156,6],[183,6]]},"34":{"position":[[174,10],[797,10]]},"36":{"position":[[247,10],[266,22],[765,11],[911,4],[935,11],[1364,53]]},"38":{"position":[[177,10]]},"40":{"position":[[192,10],[209,13],[690,9]]},"46":{"position":[[1218,4],[1742,5],[2997,4]]},"56":{"position":[[256,4],[352,5]]},"86":{"position":[[885,4]]},"102":{"position":[[500,4],[873,5]]},"104":{"position":[[1088,4],[1378,5]]},"110":{"position":[[1327,4],[1707,5],[1783,4],[2135,5]]},"113":{"position":[[351,4],[722,5],[789,4],[983,5]]},"144":{"position":[[156,6],[183,6]]},"146":{"position":[[174,10],[797,10]]},"148":{"position":[[247,10],[266,22],[765,11],[911,4],[935,11],[1364,53]]},"150":{"position":[[177,10]]},"152":{"position":[[192,10],[209,13],[690,9]]},"158":{"position":[[1218,4],[1742,5],[2997,4]]},"168":{"position":[[256,4],[352,5]]},"198":{"position":[[885,4]]},"214":{"position":[[500,4],[873,5]]},"216":{"position":[[1088,4],[1378,5]]},"222":{"position":[[1327,4],[1707,5],[1783,4],[2135,5]]},"225":{"position":[[351,4],[722,5],[789,4],[983,5]]}}}],["list,且list",{"_index":181,"t":{"34":{"position":[[707,34]]},"146":{"position":[[707,34]]}}}],["list.add(data",{"_index":695,"t":{"104":{"position":[[1353,15]]},"113":{"position":[[958,15]]},"216":{"position":[[1353,15]]},"225":{"position":[[958,15]]}}}],["list.add(head0",{"_index":680,"t":{"102":{"position":[[815,16]]},"110":{"position":[[1649,16],[2077,16]]},"113":{"position":[[664,16]]},"214":{"position":[[815,16]]},"222":{"position":[[1649,16],[2077,16]]},"225":{"position":[[664,16]]}}}],["list.add(head1",{"_index":681,"t":{"102":{"position":[[832,16]]},"110":{"position":[[1666,16],[2094,16]]},"113":{"position":[[681,16]]},"214":{"position":[[832,16]]},"222":{"position":[[1666,16],[2094,16]]},"225":{"position":[[681,16]]}}}],["list.add(head2",{"_index":682,"t":{"102":{"position":[[849,16]]},"110":{"position":[[1683,16],[2111,16]]},"113":{"position":[[698,16]]},"214":{"position":[[849,16]]},"222":{"position":[[1683,16],[2111,16]]},"225":{"position":[[698,16]]}}}],["list.add(imagedemodata",{"_index":480,"t":{"86":{"position":[[969,24]]},"198":{"position":[[969,24]]}}}],["list.xlsx",{"_index":161,"t":{"32":{"position":[[293,12]]},"144":{"position":[[293,12]]}}}],["list<demodata",{"_index":226,"t":{"46":{"position":[[408,14],[2749,14]]},"56":{"position":[[241,14]]},"82":{"position":[[620,14],[1212,14],[1865,14]]},"158":{"position":[[408,14],[2749,14]]},"168":{"position":[[241,14]]},"194":{"position":[[620,14],[1212,14],[1865,14]]}}}],["list<imagedata",{"_index":491,"t":{"86":{"position":[[1664,15]]},"198":{"position":[[1664,15]]}}}],["list<imagedemodata",{"_index":478,"t":{"86":{"position":[[865,19]]},"198":{"position":[[865,19]]}}}],["list<list<object",{"_index":754,"t":{"113":{"position":[[738,18],[770,18]]},"225":{"position":[[738,18],[770,18]]}}}],["list<list<str",{"_index":194,"t":{"36":{"position":[[954,18]]},"102":{"position":[[402,18],[453,18],[481,18]]},"110":{"position":[[846,26],[1267,18],[1308,18],[1723,18],[1764,18]]},"113":{"position":[[304,18],[332,18]]},"148":{"position":[[954,18]]},"214":{"position":[[402,18],[453,18],[481,18]]},"222":{"position":[[846,26],[1267,18],[1308,18],[1723,18],[1764,18]]},"225":{"position":[[304,18],[332,18]]}}}],["list<longestmatchcolumnwidthdata",{"_index":689,"t":{"104":{"position":[[1007,33],[1054,33]]},"216":{"position":[[1007,33],[1054,33]]}}}],["list<map<integ",{"_index":338,"t":{"56":{"position":[[466,17]]},"66":{"position":[[216,17]]},"168":{"position":[[466,17]]},"178":{"position":[[216,17]]}}}],["list<object",{"_index":755,"t":{"113":{"position":[[853,12]]},"225":{"position":[[853,12]]}}}],["list<str",{"_index":197,"t":{"36":{"position":[[1020,12]]},"102":{"position":[[538,12],[631,12],[723,12]]},"110":{"position":[[1360,12],[1457,12],[1554,12],[1809,12],[1899,12],[1989,12]]},"113":{"position":[[384,12],[478,12],[571,12]]},"148":{"position":[[1020,12]]},"214":{"position":[[538,12],[631,12],[723,12]]},"222":{"position":[[1360,12],[1457,12],[1554,12],[1809,12],[1899,12],[1989,12]]},"225":{"position":[[384,12],[478,12],[571,12]]}}}],["list<string>头格式的sheet仅仅写入头,然后通过t",{"_index":671,"t":{"102":{"position":[[49,47]]},"214":{"position":[[49,47]]}}}],["list<writecelldemodata",{"_index":555,"t":{"88":{"position":[[3095,23]]},"200":{"position":[[3095,23]]}}}],["listen",{"_index":289,"t":{"50":{"position":[[743,9],[753,19]]},"162":{"position":[[743,9],[753,19]]}}}],["listfil",{"_index":160,"t":{"32":{"position":[[86,10],[372,10],[625,10],[851,10]]},"144":{"position":[[86,10],[372,10],[625,10],[851,10]]}}}],["listmap",{"_index":339,"t":{"56":{"position":[[493,7],[583,8]]},"168":{"position":[[493,7],[583,8]]}}}],["listutils.newarraylist",{"_index":479,"t":{"86":{"position":[[892,25]]},"110":{"position":[[1334,25],[1381,25],[1478,25],[1575,25]]},"113":{"position":[[358,25],[405,25],[499,25],[592,25],[796,25],[873,25]]},"198":{"position":[[892,25]]},"222":{"position":[[1334,25],[1381,25],[1478,25],[1575,25]]},"225":{"position":[[358,25],[405,25],[499,25],[592,25],[796,25],[873,25]]}}}],["listutils.newarraylistwithexpectedsize(batch_count",{"_index":228,"t":{"46":{"position":[[440,52],[1240,52],[2781,52],[3019,52]]},"66":{"position":[[260,52],[544,52]]},"158":{"position":[[440,52],[1240,52],[2781,52],[3019,52]]},"178":{"position":[[260,52],[544,52]]}}}],["list为最后一行，然后再拼接table.还有03",{"_index":191,"t":{"36":{"position":[[70,42]]},"148":{"position":[[70,42]]}}}],["list的时候不管list",{"_index":178,"t":{"34":{"position":[[574,25]]},"146":{"position":[[574,25]]}}}],["log.error",{"_index":406,"t":{"64":{"position":[[372,30],[632,33]]},"176":{"position":[[372,30],[632,33]]}}}],["log.info",{"_index":245,"t":{"46":{"position":[[1029,22],[1450,22],[1518,26],[1599,21],[2359,21],[3201,26],[3252,21]]},"58":{"position":[[228,23]]},"60":{"position":[[460,25],[907,9],[1215,9]]},"66":{"position":[[396,22],[681,22],[749,26],[800,21]]},"106":{"position":[[313,26]]},"158":{"position":[[1029,22],[1450,22],[1518,26],[1599,21],[2359,21],[3201,26],[3252,21]]},"170":{"position":[[228,23]]},"172":{"position":[[460,25],[907,9],[1215,9]]},"178":{"position":[[396,22],[681,22],[749,26],[800,21]]},"218":{"position":[[313,26]]}}}],["log.info(\"第{}个sheet",{"_index":710,"t":{"106":{"position":[[954,26]]},"218":{"position":[[954,26]]}}}],["log.info(\"额外信息是批注,在rowindex:{},columnindex",{"_index":369,"t":{"60":{"position":[[554,54]]},"172":{"position":[[554,54]]}}}],["log.info(\"额外信息是超链接,在rowindex:{},columnindex",{"_index":376,"t":{"60":{"position":[[738,55]]},"172":{"position":[[738,55]]}}}],["logger.info",{"_index":336,"t":{"56":{"position":[[360,23],[622,23]]},"168":{"position":[[360,23],[622,23]]}}}],["long",{"_index":20,"t":{"5":{"position":[[30,4]]}}}],["longestmatchcolumnwidthdata",{"_index":683,"t":{"104":{"position":[[58,27],[511,28],[1172,27],[1211,30]]},"216":{"position":[[58,27],[511,28],[1172,27],[1211,30]]}}}],["longestmatchcolumnwidthdata.class",{"_index":687,"t":{"104":{"position":[[863,34]]},"216":{"position":[[863,34]]}}}],["longestmatchcolumnwidthstylestrategi",{"_index":684,"t":{"104":{"position":[[346,42],[562,37]]},"216":{"position":[[346,42],[562,37]]}}}],["longestmatchcolumnwidthstylestrategy()).sheet(\"模板\").dowrite(datalong",{"_index":688,"t":{"104":{"position":[[924,72]]},"216":{"position":[[924,72]]}}}],["longestmatchcolumnwidthwrit",{"_index":686,"t":{"104":{"position":[[638,30],[714,30]]},"216":{"position":[[638,30],[714,30]]}}}],["loopmergestrategi",{"_index":659,"t":{"98":{"position":[[1050,17],[1068,17]]},"210":{"position":[[1050,17],[1068,17]]}}}],["loopmergestrategy(2",{"_index":660,"t":{"98":{"position":[[1092,20]]},"210":{"position":[[1092,20]]}}}],["lorem",{"_index":0,"t":{"3":{"position":[[0,5],[152,5]]},"5":{"position":[[120,5],[272,5],[299,5],[451,5],[478,5],[630,5],[657,5],[809,5],[836,5],[988,5],[1015,5],[1167,5],[1194,5],[1346,5],[1373,5],[1525,5],[1552,5],[1704,5],[1731,5],[1883,5],[1910,5],[2062,5],[2089,5],[2241,5],[2268,5],[2420,5],[2447,5],[2599,5],[2626,5],[2778,5],[2805,5],[2957,5]]}}}],["map",{"_index":152,"t":{"30":{"position":[[705,7],[853,3]]},"34":{"position":[[1014,3]]},"36":{"position":[[797,3]]},"38":{"position":[[774,3]]},"40":{"position":[[1180,3]]},"117":{"position":[[938,3]]},"142":{"position":[[705,7],[853,3]]},"146":{"position":[[1014,3]]},"148":{"position":[[797,3]]},"150":{"position":[[774,3]]},"152":{"position":[[1180,3]]},"229":{"position":[[938,3]]}}}],["map.put(\"d",{"_index":185,"t":{"34":{"position":[[1051,15]]},"36":{"position":[[834,15]]},"38":{"position":[[811,15]]},"40":{"position":[[1217,15]]},"146":{"position":[[1051,15]]},"148":{"position":[[834,15]]},"150":{"position":[[811,15]]},"152":{"position":[[1217,15]]}}}],["map.put(\"messag",{"_index":774,"t":{"117":{"position":[[997,18]]},"229":{"position":[[997,18]]}}}],["map.put(\"nam",{"_index":156,"t":{"30":{"position":[[890,15]]},"142":{"position":[[890,15]]}}}],["map.put(\"numb",{"_index":157,"t":{"30":{"position":[[913,17]]},"142":{"position":[[913,17]]}}}],["map.put(\"statu",{"_index":772,"t":{"117":{"position":[[967,17]]},"229":{"position":[[967,17]]}}}],["map.put(\"tot",{"_index":187,"t":{"34":{"position":[[1090,16]]},"146":{"position":[[1090,16]]}}}],["map<integ",{"_index":341,"t":{"56":{"position":[[554,13]]},"168":{"position":[[554,13]]}}}],["map<integer,str",{"_index":347,"t":{"58":{"position":[[291,19]]},"170":{"position":[[291,19]]}}}],["map<str",{"_index":153,"t":{"30":{"position":[[833,11]]},"34":{"position":[[994,11]]},"36":{"position":[[777,11]]},"38":{"position":[[754,11]]},"40":{"position":[[1160,11]]},"117":{"position":[[918,11]]},"142":{"position":[[833,11]]},"146":{"position":[[994,11]]},"148":{"position":[[777,11]]},"150":{"position":[[754,11]]},"152":{"position":[[1160,11]]},"229":{"position":[[918,11]]}}}],["maputils.newhashmap",{"_index":771,"t":{"117":{"position":[[944,22]]},"229":{"position":[[944,22]]}}}],["margin",{"_index":500,"t":{"86":{"position":[[2005,6]]},"198":{"position":[[2005,6]]}}}],["merg",{"_index":384,"t":{"60":{"position":[[1208,6]]},"98":{"position":[[512,11]]},"172":{"position":[[1208,6]]},"210":{"position":[[512,11]]}}}],["mergewrit",{"_index":655,"t":{"98":{"position":[[589,12],[657,12],[932,12]]},"210":{"position":[[589,12],[657,12],[932,12]]}}}],["mybatis,尽量别直接调用多次insert,自己写一个mapper里面新增一个方法batchinsert",{"_index":255,"t":{"46":{"position":[[1753,67]]},"158":{"position":[[1753,67]]}}}],["name",{"_index":140,"t":{"30":{"position":[[98,5]]},"48":{"position":[[115,4]]},"142":{"position":[[98,5]]},"160":{"position":[[115,4]]}}}],["new",{"_index":89,"t":{"24":{"position":[[502,3],[2179,3]]},"30":{"position":[[550,3],[859,3]]},"34":{"position":[[1020,3]]},"36":{"position":[[803,3],[989,3],[1045,3]]},"38":{"position":[[780,3]]},"40":{"position":[[1186,3]]},"46":{"position":[[664,3],[2277,3],[2636,3],[3543,3],[3777,3]]},"48":{"position":[[749,3]]},"50":{"position":[[508,3]]},"52":{"position":[[970,3],[1512,3]]},"54":{"position":[[546,3]]},"58":{"position":[[804,3]]},"60":{"position":[[1910,3]]},"62":{"position":[[741,3]]},"64":{"position":[[1177,3]]},"66":{"position":[[1023,3]]},"68":{"position":[[498,3]]},"76":{"position":[[465,3],[862,3]]},"86":{"position":[[948,3],[1459,3],[1696,3],[1737,3],[2172,3]]},"88":{"position":[[821,3],[889,3],[991,3],[1212,3],[1314,3],[1656,3],[1748,3],[2005,3],[2173,3],[2525,3],[2682,3],[2841,3],[2979,3],[3126,3]]},"96":{"position":[[442,3],[574,3],[735,3],[1047,3],[1272,3]]},"98":{"position":[[1088,3]]},"102":{"position":[[507,3],[559,3],[652,3],[744,3]]},"104":{"position":[[1095,3],[1207,3]]},"106":{"position":[[1119,3]]},"110":{"position":[[1790,3],[1830,3],[1920,3],[2010,3]]},"136":{"position":[[502,3],[2179,3]]},"142":{"position":[[550,3],[859,3]]},"146":{"position":[[1020,3]]},"148":{"position":[[803,3],[989,3],[1045,3]]},"150":{"position":[[780,3]]},"152":{"position":[[1186,3]]},"158":{"position":[[664,3],[2277,3],[2636,3],[3543,3],[3777,3]]},"160":{"position":[[749,3]]},"162":{"position":[[508,3]]},"164":{"position":[[970,3],[1512,3]]},"166":{"position":[[546,3]]},"170":{"position":[[804,3]]},"172":{"position":[[1910,3]]},"174":{"position":[[741,3]]},"176":{"position":[[1177,3]]},"178":{"position":[[1023,3]]},"180":{"position":[[498,3]]},"188":{"position":[[465,3],[862,3]]},"198":{"position":[[948,3],[1459,3],[1696,3],[1737,3],[2172,3]]},"200":{"position":[[821,3],[889,3],[991,3],[1212,3],[1314,3],[1656,3],[1748,3],[2005,3],[2173,3],[2525,3],[2682,3],[2841,3],[2979,3],[3126,3]]},"208":{"position":[[442,3],[574,3],[735,3],[1047,3],[1272,3]]},"210":{"position":[[1088,3]]},"214":{"position":[[507,3],[559,3],[652,3],[744,3]]},"216":{"position":[[1095,3],[1207,3]]},"218":{"position":[[1119,3]]},"222":{"position":[[1790,3],[1830,3],[1920,3],[2010,3]]}}}],["new了一个writecellstyl",{"_index":625,"t":{"96":{"position":[[2266,37]]},"208":{"position":[[2266,37]]}}}],["nomodeldatalisten",{"_index":418,"t":{"66":{"position":[[44,19]]},"178":{"position":[[44,19]]}}}],["nomodeldatalistener()).sheet().doread",{"_index":422,"t":{"66":{"position":[[1027,40]]},"178":{"position":[[1027,40]]}}}],["nomodelread",{"_index":421,"t":{"66":{"position":[[864,13]]},"178":{"position":[[864,13]]}}}],["nomodelwrit",{"_index":752,"t":{"113":{"position":[[48,14],[115,14]]},"225":{"position":[[48,14],[115,14]]}}}],["null",{"_index":265,"t":{"46":{"position":[[3710,5],[3963,5]]},"50":{"position":[[659,5],[1149,5]]},"74":{"position":[[1152,5],[1382,5]]},"82":{"position":[[337,5],[742,5],[1334,5],[1987,5]]},"96":{"position":[[1901,9],[3181,9]]},"100":{"position":[[327,5],[959,5]]},"158":{"position":[[3710,5],[3963,5]]},"162":{"position":[[659,5],[1149,5]]},"186":{"position":[[1152,5],[1382,5]]},"194":{"position":[[337,5],[742,5],[1334,5],[1987,5]]},"208":{"position":[[1901,9],[3181,9]]},"212":{"position":[[327,5],[959,5]]}}}],["number",{"_index":142,"t":{"30":{"position":[[119,7]]},"62":{"position":[[134,10],[153,11]]},"142":{"position":[[119,7]]},"174":{"position":[[134,10],[153,11]]}}}],["numberformat",{"_index":302,"t":{"52":{"position":[[332,22],[1197,20]]},"84":{"position":[[344,22],[565,20]]},"110":{"position":[[344,22],[729,22]]},"164":{"position":[[332,22],[1197,20]]},"196":{"position":[[344,22],[565,20]]},"222":{"position":[[344,22],[729,22]]}}}],["object",{"_index":154,"t":{"30":{"position":[[845,7],[879,10]]},"34":{"position":[[1006,7],[1040,10]]},"36":{"position":[[789,7],[823,10]]},"38":{"position":[[766,7],[800,10]]},"40":{"position":[[1172,7],[1206,10]]},"142":{"position":[[845,7],[879,10]]},"146":{"position":[[1006,7],[1040,10]]},"148":{"position":[[789,7],[823,10]]},"150":{"position":[[766,7],[800,10]]},"152":{"position":[[1172,7],[1206,10]]}}}],["officedocument.spreadsheetml.sheet",{"_index":760,"t":{"115":{"position":[[515,37]]},"117":{"position":[[339,37]]},"227":{"position":[[515,37]]},"229":{"position":[[339,37]]}}}],["on",{"_index":236,"t":{"46":{"position":[[869,3]]},"158":{"position":[[869,3]]}}}],["onceabsolutemerge(firstrowindex",{"_index":648,"t":{"98":{"position":[[93,32]]},"210":{"position":[[93,32]]}}}],["onexcept",{"_index":403,"t":{"64":{"position":[[144,28]]},"176":{"position":[[144,28]]}}}],["onexception(except",{"_index":405,"t":{"64":{"position":[[312,21]]},"176":{"position":[[312,21]]}}}],["overrid",{"_index":242,"t":{"46":{"position":[[958,9],[1341,9],[2834,9],[3076,9]]},"52":{"position":[[482,9],[554,9],[694,9],[869,9]]},"58":{"position":[[129,9]]},"60":{"position":[[242,9],[319,9],[388,9]]},"64":{"position":[[290,9]]},"66":{"position":[[313,9],[601,9]]},"96":{"position":[[1773,9],[3053,9]]},"106":{"position":[[189,9],[879,9]]},"108":{"position":[[147,9]]},"158":{"position":[[958,9],[1341,9],[2834,9],[3076,9]]},"164":{"position":[[482,9],[554,9],[694,9],[869,9]]},"170":{"position":[[129,9]]},"172":{"position":[[242,9],[319,9],[388,9]]},"176":{"position":[[290,9]]},"178":{"position":[[313,9],[601,9]]},"208":{"position":[[1773,9],[3053,9]]},"218":{"position":[[189,9],[879,9]]},"220":{"position":[[147,9]]}}}],["p",{"_index":190,"t":{"36":{"position":[[55,3]]},"46":{"position":[[1842,3],[1887,3],[1963,3]]},"50":{"position":[[98,3],[143,3],[219,3]]},"52":{"position":[[1041,3]]},"58":{"position":[[470,3],[515,3],[595,3]]},"60":{"position":[[1485,3],[1548,3],[1598,3],[1673,3]]},"62":{"position":[[350,3],[407,3],[487,3]]},"64":{"position":[[821,3],[875,3],[956,3]]},"68":{"position":[[200,3],[247,3],[325,3]]},"74":{"position":[[279,3],[324,3]]},"76":{"position":[[42,3],[87,3],[113,3]]},"82":{"position":[[38,3],[90,3],[133,3]]},"86":{"position":[[484,3],[534,3]]},"88":{"position":[[543,3],[597,3]]},"94":{"position":[[2009,3],[2059,3]]},"96":{"position":[[42,3],[87,3],[114,3]]},"98":{"position":[[436,3],[503,3],[530,3]]},"102":{"position":[[43,3],[115,3],[160,3]]},"104":{"position":[[265,3],[391,3],[478,3],[542,3],[602,3]]},"106":{"position":[[1581,3],[1688,3],[1733,3],[1813,3]]},"108":{"position":[[667,3],[712,3],[757,3]]},"110":{"position":[[840,3],[883,3],[933,3]]},"115":{"position":[[183,3],[232,3],[252,3]]},"148":{"position":[[55,3]]},"158":{"position":[[1842,3],[1887,3],[1963,3]]},"162":{"position":[[98,3],[143,3],[219,3]]},"164":{"position":[[1041,3]]},"170":{"position":[[470,3],[515,3],[595,3]]},"172":{"position":[[1485,3],[1548,3],[1598,3],[1673,3]]},"174":{"position":[[350,3],[407,3],[487,3]]},"176":{"position":[[821,3],[875,3],[956,3]]},"180":{"position":[[200,3],[247,3],[325,3]]},"186":{"position":[[279,3],[324,3]]},"188":{"position":[[42,3],[87,3],[113,3]]},"194":{"position":[[38,3],[90,3],[133,3]]},"198":{"position":[[484,3],[534,3]]},"200":{"position":[[543,3],[597,3]]},"206":{"position":[[2009,3],[2059,3]]},"208":{"position":[[42,3],[87,3],[114,3]]},"210":{"position":[[436,3],[503,3],[530,3]]},"214":{"position":[[43,3],[115,3],[160,3]]},"216":{"position":[[265,3],[391,3],[478,3],[542,3],[602,3]]},"218":{"position":[[1581,3],[1688,3],[1733,3],[1813,3]]},"220":{"position":[[667,3],[712,3],[757,3]]},"222":{"position":[[840,3],[883,3],[933,3]]},"227":{"position":[[183,3],[232,3],[252,3]]}}}],["p>1",{"_index":69,"t":{"24":{"position":[[172,5],[693,5],[1234,5],[1890,5]]},"48":{"position":[[391,5]]},"52":{"position":[[1114,5]]},"54":{"position":[[60,5]]},"78":{"position":[[310,5]]},"80":{"position":[[261,5]]},"84":{"position":[[453,5]]},"90":{"position":[[49,5]]},"92":{"position":[[324,5]]},"100":{"position":[[42,5]]},"136":{"position":[[172,5],[693,5],[1234,5],[1890,5]]},"160":{"position":[[391,5]]},"164":{"position":[[1114,5]]},"166":{"position":[[60,5]]},"190":{"position":[[310,5]]},"192":{"position":[[261,5]]},"196":{"position":[[453,5]]},"202":{"position":[[49,5]]},"204":{"position":[[324,5]]},"212":{"position":[[42,5]]}}}],["p>2",{"_index":72,"t":{"24":{"position":[[214,5],[773,5],[1280,5],[1934,5]]},"48":{"position":[[468,5]]},"52":{"position":[[1220,5]]},"54":{"position":[[102,5]]},"78":{"position":[[353,5]]},"80":{"position":[[310,5]]},"84":{"position":[[500,5]]},"90":{"position":[[92,5]]},"92":{"position":[[376,5]]},"100":{"position":[[84,5]]},"136":{"position":[[214,5],[773,5],[1280,5],[1934,5]]},"160":{"position":[[468,5]]},"164":{"position":[[1220,5]]},"166":{"position":[[102,5]]},"190":{"position":[[353,5]]},"192":{"position":[[310,5]]},"196":{"position":[[500,5]]},"202":{"position":[[92,5]]},"204":{"position":[[376,5]]},"212":{"position":[[84,5]]}}}],["p>3",{"_index":75,"t":{"24":{"position":[[287,5],[1297,5],[2009,5]]},"48":{"position":[[548,5]]},"52":{"position":[[1298,5]]},"54":{"position":[[175,5]]},"78":{"position":[[393,5]]},"80":{"position":[[350,5]]},"84":{"position":[[588,5]]},"90":{"position":[[132,5]]},"92":{"position":[[462,5]]},"136":{"position":[[287,5],[1297,5],[2009,5]]},"160":{"position":[[548,5]]},"164":{"position":[[1298,5]]},"166":{"position":[[175,5]]},"190":{"position":[[393,5]]},"192":{"position":[[350,5]]},"196":{"position":[[588,5]]},"202":{"position":[[132,5]]},"204":{"position":[[462,5]]}}}],["p>4",{"_index":559,"t":{"90":{"position":[[160,5]]},"202":{"position":[[160,5]]}}}],["pagereadlistener<demodata>(datalist",{"_index":258,"t":{"46":{"position":[[2281,35]]},"158":{"position":[[2281,35]]}}}],["param",{"_index":233,"t":{"46":{"position":[[745,6],[857,6],[940,6],[1323,6]]},"52":{"position":[[666,6]]},"58":{"position":[[94,6],[111,6]]},"64":{"position":[[233,6],[252,6]]},"158":{"position":[[745,6],[857,6],[940,6],[1323,6]]},"164":{"position":[[666,6]]},"170":{"position":[[94,6],[111,6]]},"176":{"position":[[233,6],[252,6]]}}}],["pellentesqu",{"_index":8,"t":{"3":{"position":[[57,12]]},"5":{"position":[[177,12],[356,12],[535,12],[714,12],[893,12],[1072,12],[1251,12],[1430,12],[1609,12],[1788,12],[1967,12],[2146,12],[2325,12],[2504,12],[2683,12],[2862,12]]}}}],["poi",{"_index":632,"t":{"96":{"position":[[2738,13]]},"104":{"position":[[397,3]]},"208":{"position":[[2738,13]]},"216":{"position":[[397,3]]}}}],["poi的cel",{"_index":617,"t":{"96":{"position":[[1857,19],[3137,19]]},"208":{"position":[[1857,19],[3137,19]]}}}],["poi的workbook",{"_index":637,"t":{"96":{"position":[[3286,14]]},"208":{"position":[[3286,14]]}}}],["post",{"_index":22,"t":{"5":{"position":[[40,5],[92,4]]}}}],["postman",{"_index":112,"t":{"24":{"position":[[1475,25]]},"115":{"position":[[433,25]]},"117":{"position":[[251,25]]},"136":{"position":[[1475,25]]},"227":{"position":[[433,25]]},"229":{"position":[[251,25]]}}}],["postmapping(\"upload",{"_index":125,"t":{"24":{"position":[[2024,22]]},"68":{"position":[[343,22]]},"136":{"position":[[2024,22]]},"180":{"position":[[343,22]]}}}],["privat",{"_index":139,"t":{"30":{"position":[[83,7],[104,7],[127,7]]},"46":{"position":[[69,7],[92,7],[111,7],[341,7],[400,7],[552,7],[1492,7],[2741,7],[3175,7]]},"48":{"position":[[183,7],[279,7],[325,7]]},"52":{"position":[[189,7],[291,7],[355,7]]},"60":{"position":[[93,7],[114,7]]},"62":{"position":[[81,7],[165,7],[194,7],[274,7]]},"64":{"position":[[112,7]]},"66":{"position":[[166,7],[208,7],[723,7]]},"74":{"position":[[93,7],[139,7],[181,7],[237,7]]},"78":{"position":[[113,7],[178,7],[263,7]]},"80":{"position":[[109,7],[164,7],[215,7]]},"84":{"position":[[186,7],[299,7],[398,7]]},"86":{"position":[[117,7],[136,7],[270,7],[293,7],[353,7],[419,7]]},"88":{"position":[[114,7],[190,7],[268,7],[368,7],[459,7]]},"92":{"position":[[158,7],[204,7],[278,7]]},"94":{"position":[[895,7],[941,7],[983,7],[1871,7],[1917,7],[1959,7]]},"98":{"position":[[293,7],[339,7],[381,7]]},"102":{"position":[[445,7]]},"104":{"position":[[112,7],[174,7],[214,7],[999,7]]},"110":{"position":[[186,7],[299,7],[398,7],[571,7],[684,7],[783,7],[1259,7],[1715,7]]},"113":{"position":[[296,7],[730,7]]},"142":{"position":[[83,7],[104,7],[127,7]]},"158":{"position":[[69,7],[92,7],[111,7],[341,7],[400,7],[552,7],[1492,7],[2741,7],[3175,7]]},"160":{"position":[[183,7],[279,7],[325,7]]},"164":{"position":[[189,7],[291,7],[355,7]]},"172":{"position":[[93,7],[114,7]]},"174":{"position":[[81,7],[165,7],[194,7],[274,7]]},"176":{"position":[[112,7]]},"178":{"position":[[166,7],[208,7],[723,7]]},"186":{"position":[[93,7],[139,7],[181,7],[237,7]]},"190":{"position":[[113,7],[178,7],[263,7]]},"192":{"position":[[109,7],[164,7],[215,7]]},"196":{"position":[[186,7],[299,7],[398,7]]},"198":{"position":[[117,7],[136,7],[270,7],[293,7],[353,7],[419,7]]},"200":{"position":[[114,7],[190,7],[268,7],[368,7],[459,7]]},"204":{"position":[[158,7],[204,7],[278,7]]},"206":{"position":[[895,7],[941,7],[983,7],[1871,7],[1917,7],[1959,7]]},"210":{"position":[[293,7],[339,7],[381,7]]},"214":{"position":[[445,7]]},"216":{"position":[[112,7],[174,7],[214,7],[999,7]]},"222":{"position":[[186,7],[299,7],[398,7],[571,7],[684,7],[783,7],[1259,7],[1715,7]]},"225":{"position":[[296,7],[730,7]]}}}],["public",{"_index":77,"t":{"24":{"position":[[308,6],[794,6],[1380,6],[2061,6]]},"30":{"position":[[190,6]]},"32":{"position":[[74,6]]},"34":{"position":[[75,6]]},"36":{"position":[[139,6]]},"38":{"position":[[75,6]]},"40":{"position":[[91,6]]},"46":{"position":[[577,6],[763,6],[968,6],[1351,6],[1684,9],[1710,6],[1987,6],[2685,6],[2844,6],[3086,6]]},"48":{"position":[[569,6]]},"50":{"position":[[243,6]]},"52":{"position":[[410,6],[492,6],[564,6],[704,6],[879,6],[1319,6]]},"54":{"position":[[354,6]]},"56":{"position":[[78,6]]},"58":{"position":[[139,6],[619,6]]},"60":{"position":[[252,6],[329,6],[398,6],[1720,6]]},"62":{"position":[[534,6]]},"64":{"position":[[300,6],[980,6]]},"66":{"position":[[323,6],[611,6],[852,6]]},"68":{"position":[[380,6]]},"74":{"position":[[348,6]]},"76":{"position":[[154,6]]},"78":{"position":[[414,6]]},"80":{"position":[[371,6]]},"82":{"position":[[162,6]]},"84":{"position":[[609,6]]},"86":{"position":[[558,6]]},"88":{"position":[[644,6]]},"90":{"position":[[181,6]]},"92":{"position":[[483,6]]},"94":{"position":[[2106,6]]},"96":{"position":[[138,6],[1783,6],[3063,6]]},"98":{"position":[[577,6]]},"100":{"position":[[111,6]]},"102":{"position":[[190,6]]},"104":{"position":[[626,6]]},"106":{"position":[[199,6],[889,6],[1837,6]]},"108":{"position":[[157,6],[781,6]]},"110":{"position":[[957,6]]},"113":{"position":[[36,6]]},"115":{"position":[[338,6]]},"117":{"position":[[141,6]]},"136":{"position":[[308,6],[794,6],[1380,6],[2061,6]]},"142":{"position":[[190,6]]},"144":{"position":[[74,6]]},"146":{"position":[[75,6]]},"148":{"position":[[139,6]]},"150":{"position":[[75,6]]},"152":{"position":[[91,6]]},"158":{"position":[[577,6],[763,6],[968,6],[1351,6],[1684,9],[1710,6],[1987,6],[2685,6],[2844,6],[3086,6]]},"160":{"position":[[569,6]]},"162":{"position":[[243,6]]},"164":{"position":[[410,6],[492,6],[564,6],[704,6],[879,6],[1319,6]]},"166":{"position":[[354,6]]},"168":{"position":[[78,6]]},"170":{"position":[[139,6],[619,6]]},"172":{"position":[[252,6],[329,6],[398,6],[1720,6]]},"174":{"position":[[534,6]]},"176":{"position":[[300,6],[980,6]]},"178":{"position":[[323,6],[611,6],[852,6]]},"180":{"position":[[380,6]]},"186":{"position":[[348,6]]},"188":{"position":[[154,6]]},"190":{"position":[[414,6]]},"192":{"position":[[371,6]]},"194":{"position":[[162,6]]},"196":{"position":[[609,6]]},"198":{"position":[[558,6]]},"200":{"position":[[644,6]]},"202":{"position":[[181,6]]},"204":{"position":[[483,6]]},"206":{"position":[[2106,6]]},"208":{"position":[[138,6],[1783,6],[3063,6]]},"210":{"position":[[577,6]]},"212":{"position":[[111,6]]},"214":{"position":[[190,6]]},"216":{"position":[[626,6]]},"218":{"position":[[199,6],[889,6],[1837,6]]},"220":{"position":[[157,6],[781,6]]},"222":{"position":[[957,6]]},"225":{"position":[[36,6]]},"227":{"position":[[338,6]]},"229":{"position":[[141,6]]}}}],["qq",{"_index":53,"t":{"9":{"position":[[221,20]]},"121":{"position":[[221,20]]}}}],["qq1",{"_index":32,"t":{"9":{"position":[[0,9]]},"121":{"position":[[0,9]]}}}],["qq2",{"_index":34,"t":{"9":{"position":[[20,9]]},"121":{"position":[[20,9]]}}}],["qq3",{"_index":36,"t":{"9":{"position":[[41,9]]},"121":{"position":[[41,9]]}}}],["qq4",{"_index":38,"t":{"9":{"position":[[61,5]]},"121":{"position":[[61,5]]}}}],["readcelldata",{"_index":345,"t":{"58":{"position":[[175,16]]},"170":{"position":[[175,16]]}}}],["reader",{"_index":263,"t":{"46":{"position":[[3671,12]]},"158":{"position":[[3671,12]]}}}],["readlisten",{"_index":348,"t":{"58":{"position":[[332,12]]},"170":{"position":[[332,12]]}}}],["readlistener<demodata",{"_index":219,"t":{"46":{"position":[[268,22],[2640,24]]},"158":{"position":[[268,22],[2640,24]]}}}],["readlistener<demoextradata",{"_index":362,"t":{"60":{"position":[[212,27]]},"172":{"position":[[212,27]]}}}],["readsheet",{"_index":268,"t":{"46":{"position":[[3836,9],[3846,9]]},"50":{"position":[[773,9],[894,9]]},"158":{"position":[[3836,9],[3846,9]]},"162":{"position":[[773,9],[894,9]]}}}],["readsheet1",{"_index":290,"t":{"50":{"position":[[783,10]]},"162":{"position":[[783,10]]}}}],["readsheet2",{"_index":292,"t":{"50":{"position":[[904,10],[1105,12]]},"162":{"position":[[904,10],[1105,12]]}}}],["registerconvert",{"_index":321,"t":{"52":{"position":[[1549,32]]},"164":{"position":[[1549,32]]}}}],["registerconverter(new",{"_index":324,"t":{"52":{"position":[[1678,22]]},"164":{"position":[[1678,22]]}}}],["registerwritehandler(horizontalcellstylestrategi",{"_index":612,"t":{"96":{"position":[[1442,50]]},"208":{"position":[[1442,50]]}}}],["registerwritehandler(new",{"_index":614,"t":{"96":{"position":[[1726,25],[3006,25]]},"104":{"position":[[898,25]]},"106":{"position":[[2122,25]]},"208":{"position":[[1726,25],[3006,25]]},"216":{"position":[[898,25]]},"218":{"position":[[2122,25]]}}}],["repeatedread",{"_index":283,"t":{"50":{"position":[[255,14]]},"162":{"position":[[255,14]]}}}],["repeatedwrit",{"_index":450,"t":{"82":{"position":[[174,15],[255,15],[838,15],[1430,15]]},"194":{"position":[[174,15],[255,15],[838,15],[1430,15]]}}}],["respons",{"_index":108,"t":{"24":{"position":[[1421,9]]},"115":{"position":[[379,9]]},"117":{"position":[[197,9],[804,10]]},"136":{"position":[[1421,9]]},"227":{"position":[[379,9]]},"229":{"position":[[197,9],[804,10]]}}}],["response.getwriter().println(json.tojsonstring(map",{"_index":776,"t":{"117":{"position":[[1044,53]]},"229":{"position":[[1044,53]]}}}],["response.reset",{"_index":769,"t":{"117":{"position":[[815,17]]},"229":{"position":[[815,17]]}}}],["response.setcharacterencoding(\"utf",{"_index":114,"t":{"24":{"position":[[1554,34]]},"115":{"position":[[553,34]]},"117":{"position":[[377,34],[878,34]]},"136":{"position":[[1554,34]]},"227":{"position":[[553,34]]},"229":{"position":[[377,34],[878,34]]}}}],["response.setcontenttype(\"application/json",{"_index":770,"t":{"117":{"position":[[833,44]]},"229":{"position":[[833,44]]}}}],["response.setcontenttype(\"application/vnd.m",{"_index":113,"t":{"24":{"position":[[1501,43]]},"136":{"position":[[1501,43]]}}}],["response.setcontenttype(\"application/vnd.openxmlformat",{"_index":759,"t":{"115":{"position":[[459,55]]},"117":{"position":[[283,55]]},"227":{"position":[[459,55]]},"229":{"position":[[283,55]]}}}],["response.setheader(\"cont",{"_index":118,"t":{"24":{"position":[[1694,27]]},"115":{"position":[[718,27]]},"117":{"position":[[542,27]]},"136":{"position":[[1694,27]]},"227":{"position":[[718,27]]},"229":{"position":[[542,27]]}}}],["responsebodi",{"_index":126,"t":{"24":{"position":[[2047,13]]},"68":{"position":[[366,13]]},"136":{"position":[[2047,13]]},"180":{"position":[[366,13]]}}}],["return",{"_index":132,"t":{"24":{"position":[[2232,6]]},"32":{"position":[[769,6]]},"52":{"position":[[531,6],[612,6],[683,7],[771,6],[858,7],[963,6]]},"68":{"position":[[551,6]]},"74":{"position":[[737,6]]},"102":{"position":[[866,6]]},"104":{"position":[[1371,6]]},"110":{"position":[[1700,6],[2128,6]]},"113":{"position":[[715,6],[976,6]]},"136":{"position":[[2232,6]]},"144":{"position":[[769,6]]},"164":{"position":[[531,6],[612,6],[683,7],[771,6],[858,7],[963,6]]},"180":{"position":[[551,6]]},"186":{"position":[[737,6]]},"214":{"position":[[866,6]]},"216":{"position":[[1371,6]]},"222":{"position":[[1700,6],[2128,6]]},"225":{"position":[[715,6],[976,6]]}}}],["rhoncu",{"_index":13,"t":{"3":{"position":[[107,7]]},"5":{"position":[[227,7],[406,7],[585,7],[764,7],[943,7],[1122,7],[1301,7],[1480,7],[1659,7],[1838,7],[2017,7],[2196,7],[2375,7],[2554,7],[2733,7],[2912,7]]}}}],["richtest",{"_index":545,"t":{"88":{"position":[[2514,8]]},"200":{"position":[[2514,8]]}}}],["richtest.setrichtextstringdatavalue(richtextstringdata",{"_index":548,"t":{"88":{"position":[[2708,56]]},"200":{"position":[[2708,56]]}}}],["richtest.settype(celldatatypeenum.rich_text_str",{"_index":546,"t":{"88":{"position":[[2548,52]]},"200":{"position":[[2548,52]]}}}],["richtext",{"_index":517,"t":{"88":{"position":[[489,10]]},"200":{"position":[[489,10]]}}}],["richtextstringdata",{"_index":529,"t":{"88":{"position":[[1447,30],[2642,18],[2661,18],[2686,21]]},"200":{"position":[[1447,30],[2642,18],[2661,18],[2686,21]]}}}],["richtextstringdata.applyfont(0",{"_index":552,"t":{"88":{"position":[[2908,31]]},"200":{"position":[[2908,31]]}}}],["richtextstringdata.applyfont(2",{"_index":554,"t":{"88":{"position":[[3048,31]]},"200":{"position":[[3048,31]]}}}],["richtextstringdata.settextstr",{"_index":549,"t":{"88":{"position":[[2765,43]]},"200":{"position":[[2765,43]]}}}],["row",{"_index":237,"t":{"46":{"position":[[873,3]]},"158":{"position":[[873,3]]}}}],["row1",{"_index":357,"t":{"60":{"position":[[108,5]]},"172":{"position":[[108,5]]}}}],["row2",{"_index":358,"t":{"60":{"position":[[129,6]]},"172":{"position":[[129,6]]}}}],["rowwritehandl",{"_index":728,"t":{"108":{"position":[[129,15]]},"220":{"position":[[129,15]]}}}],["same",{"_index":239,"t":{"46":{"position":[[890,4]]},"158":{"position":[[890,4]]}}}],["save(list<demodata",{"_index":254,"t":{"46":{"position":[[1722,19]]},"158":{"position":[[1722,19]]}}}],["savedata",{"_index":250,"t":{"46":{"position":[[1196,11],[1438,11],[1505,10],[2975,11],[3144,11],[3188,10]]},"66":{"position":[[515,11],[669,11],[736,10]]},"158":{"position":[[1196,11],[1438,11],[1505,10],[2975,11],[3144,11],[3188,10]]},"178":{"position":[[515,11],[669,11],[736,10]]}}}],["set<str",{"_index":433,"t":{"76":{"position":[[427,11],[824,11]]},"188":{"position":[[427,11],[824,11]]}}}],["sheet",{"_index":148,"t":{"30":{"position":[[505,13],[808,13]]},"32":{"position":[[429,13],[734,8]]},"46":{"position":[[3813,9],[3893,9]]},"48":{"position":[[686,14]]},"50":{"position":[[357,9],[548,9]]},"52":{"position":[[1735,7]]},"66":{"position":[[968,15]]},"74":{"position":[[697,12]]},"82":{"position":[[199,12],[444,16],[783,12],[1375,12]]},"96":{"position":[[1493,12],[2697,14],[3907,14]]},"100":{"position":[[407,13],[421,12]]},"108":{"position":[[265,5],[271,5]]},"142":{"position":[[505,13],[808,13]]},"144":{"position":[[429,13],[734,8]]},"158":{"position":[[3813,9],[3893,9]]},"160":{"position":[[686,14]]},"162":{"position":[[357,9],[548,9]]},"164":{"position":[[1735,7]]},"178":{"position":[[968,15]]},"186":{"position":[[697,12]]},"194":{"position":[[199,12],[444,16],[783,12],[1375,12]]},"208":{"position":[[1493,12],[2697,14],[3907,14]]},"212":{"position":[[407,13],[421,12]]},"220":{"position":[[265,5],[271,5]]}}}],["sheet(\"模板\").dowrite(data",{"_index":744,"t":{"108":{"position":[[1136,29]]},"220":{"position":[[1136,29]]}}}],["sheet().doread",{"_index":261,"t":{"46":{"position":[[2413,21],[3276,20]]},"52":{"position":[[1743,18]]},"158":{"position":[[2413,21],[3276,20]]},"164":{"position":[[1743,18]]}}}],["sheet,这里注意一个sheet",{"_index":282,"t":{"50":{"position":[[52,43]]},"162":{"position":[[52,43]]}}}],["sheet.createdrawingpatriarch",{"_index":733,"t":{"108":{"position":[[351,31]]},"220":{"position":[[351,31]]}}}],["sheet.getrow(0).getcell(1).setcellcomment(com",{"_index":740,"t":{"108":{"position":[[593,51]]},"220":{"position":[[593,51]]}}}],["sheet1",{"_index":294,"t":{"50":{"position":[[1023,10]]},"162":{"position":[[1023,10]]}}}],["sheet1!a1\".equals(extra.gettext",{"_index":375,"t":{"60":{"position":[[698,37]]},"172":{"position":[[698,37]]}}}],["sheet2",{"_index":295,"t":{"50":{"position":[[1034,6]]},"162":{"position":[[1034,6]]}}}],["sheet2!a1\".equals(extra.gettext",{"_index":377,"t":{"60":{"position":[[867,37]]},"172":{"position":[[867,37]]}}}],["sheetnam",{"_index":453,"t":{"82":{"position":[[1096,16]]},"194":{"position":[[1096,16]]}}}],["sheetname必须不一样。这里注意demodata.class",{"_index":457,"t":{"82":{"position":[[1672,35]]},"194":{"position":[[1672,35]]}}}],["sheetno",{"_index":452,"t":{"82":{"position":[[1080,15],[1656,15]]},"194":{"position":[[1080,15],[1656,15]]}}}],["sheetwritehandl",{"_index":708,"t":{"106":{"position":[[859,17]]},"218":{"position":[[859,17]]}}}],["sheet的配置，sheet配置了不需要，t",{"_index":665,"t":{"100":{"position":[[559,29]]},"212":{"position":[[559,29]]}}}],["sheet读取完毕后调用一次。然后所有sheet都会往同一个demodatalisten",{"_index":285,"t":{"50":{"position":[[413,53]]},"162":{"position":[[413,53]]}}}],["short)1",{"_index":736,"t":{"108":{"position":[[487,9]]},"220":{"position":[[487,9]]}}}],["short)2",{"_index":737,"t":{"108":{"position":[[500,9]]},"220":{"position":[[500,9]]}}}],["simple.xlsx",{"_index":147,"t":{"30":{"position":[[374,14]]},"142":{"position":[[374,14]]}}}],["simplefil",{"_index":144,"t":{"30":{"position":[[202,12],[446,12],[749,12]]},"142":{"position":[[202,12],[446,12],[749,12]]}}}],["simpleread",{"_index":79,"t":{"24":{"position":[[320,12]]},"46":{"position":[[1999,12]]},"136":{"position":[[320,12]]},"158":{"position":[[1999,12]]}}}],["simplewrit",{"_index":93,"t":{"24":{"position":[[806,13]]},"74":{"position":[[360,13],[518,13],[799,13],[1050,13]]},"136":{"position":[[806,13]]},"186":{"position":[[360,13],[518,13],[799,13],[1050,13]]}}}],["simplewrite在数据量不大的情况下可以使用（5000",{"_index":425,"t":{"74":{"position":[[382,50]]},"186":{"position":[[382,50]]}}}],["sit",{"_index":3,"t":{"3":{"position":[[18,3],[170,3]]},"5":{"position":[[138,3],[290,3],[317,3],[469,3],[496,3],[648,3],[675,3],[827,3],[854,3],[1006,3],[1033,3],[1185,3],[1212,3],[1364,3],[1391,3],[1543,3],[1570,3],[1722,3],[1749,3],[1901,3],[1928,3],[2080,3],[2107,3],[2259,3],[2286,3],[2438,3],[2465,3],[2617,3],[2644,3],[2796,3],[2823,3],[2975,3]]}}}],["size",{"_index":28,"t":{"5":{"position":[[97,4]]}}}],["slf4jpublic",{"_index":360,"t":{"60":{"position":[[164,12]]},"66":{"position":[[25,12]]},"106":{"position":[[115,14],[803,14]]},"108":{"position":[[77,14]]},"172":{"position":[[164,12]]},"178":{"position":[[25,12]]},"218":{"position":[[115,14],[803,14]]},"220":{"position":[[77,14]]}}}],["spring,请使用这个构造方法。每次创建listener的时候需要把spr",{"_index":232,"t":{"46":{"position":[[687,53]]},"158":{"position":[[687,53]]}}}],["spring管理，要每次读取excel都要new,然后里面用到spr",{"_index":262,"t":{"46":{"position":[[3325,49]]},"158":{"position":[[3325,49]]}}}],["spring管理，要每次读取excel都要new,然后里面用到spring可以构造方法传进去@slf4jpubl",{"_index":217,"t":{"46":{"position":[[172,61]]},"158":{"position":[[172,61]]}}}],["static",{"_index":221,"t":{"46":{"position":[[349,6],[2692,6]]},"66":{"position":[[174,6]]},"158":{"position":[[349,6],[2692,6]]},"178":{"position":[[174,6]]}}}],["string",{"_index":80,"t":{"24":{"position":[[335,6],[822,6],[1642,6],[2068,6]]},"30":{"position":[[91,6],[271,6],[403,6]]},"32":{"position":[[190,6],[329,6]]},"34":{"position":[[185,6],[304,6]]},"36":{"position":[[289,6],[421,6]]},"38":{"position":[[188,6],[310,6]]},"40":{"position":[[223,6],[344,6]]},"46":{"position":[[77,6],[84,7],[2074,6]]},"48":{"position":[[287,6],[294,7],[601,6]]},"50":{"position":[[272,6]]},"52":{"position":[[197,6],[204,7],[218,9],[299,6],[363,6],[711,6],[1349,6]]},"54":{"position":[[388,6]]},"56":{"position":[[110,6],[484,8],[568,7]]},"58":{"position":[[646,6]]},"60":{"position":[[101,6],[122,6],[1746,6]]},"62":{"position":[[106,7],[563,6]]},"64":{"position":[[1010,6]]},"66":{"position":[[107,8],[234,8],[355,7],[880,6]]},"68":{"position":[[387,6]]},"74":{"position":[[101,6],[108,7],[245,6],[475,6]]},"76":{"position":[[192,6]]},"78":{"position":[[121,6],[128,7],[441,6]]},"80":{"position":[[117,6],[124,7],[404,6]]},"82":{"position":[[212,6]]},"84":{"position":[[194,6],[201,7],[640,6]]},"86":{"position":[[175,10],[278,6],[285,7],[602,6],[698,6]]},"88":{"position":[[679,6]]},"90":{"position":[[211,6],[301,6]]},"92":{"position":[[166,6],[173,7],[519,6]]},"94":{"position":[[903,6],[910,7],[1879,6],[1886,7],[2143,6]]},"96":{"position":[[295,6]]},"98":{"position":[[301,6],[308,7],[614,6]]},"100":{"position":[[138,6]]},"102":{"position":[[223,6]]},"104":{"position":[[120,6],[127,7],[671,6]]},"106":{"position":[[1333,8],[1872,6]]},"108":{"position":[[810,6]]},"110":{"position":[[194,6],[201,7],[579,6],[586,7],[999,6]]},"113":{"position":[[72,6]]},"115":{"position":[[641,6]]},"117":{"position":[[465,6],[930,7]]},"136":{"position":[[335,6],[822,6],[1642,6],[2068,6]]},"142":{"position":[[91,6],[271,6],[403,6]]},"144":{"position":[[190,6],[329,6]]},"146":{"position":[[185,6],[304,6]]},"148":{"position":[[289,6],[421,6]]},"150":{"position":[[188,6],[310,6]]},"152":{"position":[[223,6],[344,6]]},"158":{"position":[[77,6],[84,7],[2074,6]]},"160":{"position":[[287,6],[294,7],[601,6]]},"162":{"position":[[272,6]]},"164":{"position":[[197,6],[204,7],[218,9],[299,6],[363,6],[711,6],[1349,6]]},"166":{"position":[[388,6]]},"168":{"position":[[110,6],[484,8],[568,7]]},"170":{"position":[[646,6]]},"172":{"position":[[101,6],[122,6],[1746,6]]},"174":{"position":[[106,7],[563,6]]},"176":{"position":[[1010,6]]},"178":{"position":[[107,8],[234,8],[355,7],[880,6]]},"180":{"position":[[387,6]]},"186":{"position":[[101,6],[108,7],[245,6],[475,6]]},"188":{"position":[[192,6]]},"190":{"position":[[121,6],[128,7],[441,6]]},"192":{"position":[[117,6],[124,7],[404,6]]},"194":{"position":[[212,6]]},"196":{"position":[[194,6],[201,7],[640,6]]},"198":{"position":[[175,10],[278,6],[285,7],[602,6],[698,6]]},"200":{"position":[[679,6]]},"202":{"position":[[211,6],[301,6]]},"204":{"position":[[166,6],[173,7],[519,6]]},"206":{"position":[[903,6],[910,7],[1879,6],[1886,7],[2143,6]]},"208":{"position":[[295,6]]},"210":{"position":[[301,6],[308,7],[614,6]]},"212":{"position":[[138,6]]},"214":{"position":[[223,6]]},"216":{"position":[[120,6],[127,7],[671,6]]},"218":{"position":[[1333,8],[1872,6]]},"220":{"position":[[810,6]]},"222":{"position":[[194,6],[201,7],[579,6],[586,7],[999,6]]},"225":{"position":[[72,6]]},"227":{"position":[[641,6]]},"229":{"position":[[465,6],[930,7]]}}}],["string.class",{"_index":306,"t":{"52":{"position":[[538,13]]},"164":{"position":[[538,13]]}}}],["stringimageconverter.class",{"_index":467,"t":{"86":{"position":[[242,27]]},"198":{"position":[[242,27]]}}}],["string默认转换成str",{"_index":466,"t":{"86":{"position":[[186,25]]},"198":{"position":[[186,25]]}}}],["style",{"_index":596,"t":{"96":{"position":[[96,11]]},"208":{"position":[[96,11]]}}}],["success",{"_index":133,"t":{"24":{"position":[[2239,10]]},"68":{"position":[[558,10]]},"136":{"position":[[2239,10]]},"180":{"position":[[558,10]]}}}],["summari",{"_index":18,"t":{"5":{"position":[[12,7]]}}}],["supportexceltypekey",{"_index":308,"t":{"52":{"position":[[588,21]]},"164":{"position":[[588,21]]}}}],["supportjavatypekey",{"_index":305,"t":{"52":{"position":[[508,20]]},"164":{"position":[[508,20]]}}}],["swagger",{"_index":111,"t":{"24":{"position":[[1460,14]]},"115":{"position":[[418,14]]},"117":{"position":[[236,14]]},"136":{"position":[[1460,14]]},"227":{"position":[[418,14]]},"229":{"position":[[236,14]]}}}],["switch",{"_index":366,"t":{"60":{"position":[[513,6]]},"172":{"position":[[513,6]]}}}],["sxssfsheet#autosizecolumn(int",{"_index":685,"t":{"104":{"position":[[410,31]]},"216":{"position":[[410,31]]}}}],["synchronousread",{"_index":333,"t":{"56":{"position":[[90,17]]},"168":{"position":[[90,17]]}}}],["system.currenttimemilli",{"_index":95,"t":{"24":{"position":[[875,26]]},"30":{"position":[[461,26],[764,26]]},"32":{"position":[[385,26],[638,26],[864,26]]},"34":{"position":[[363,26]]},"36":{"position":[[489,26]]},"38":{"position":[[372,26]]},"40":{"position":[[405,26]]},"74":{"position":[[534,26],[815,26],[1066,26]]},"76":{"position":[[261,26],[760,26]]},"78":{"position":[[499,26]]},"80":{"position":[[468,26]]},"82":{"position":[[273,26],[856,26],[1448,26]]},"84":{"position":[[702,26]]},"86":{"position":[[660,26]]},"88":{"position":[[745,26]]},"90":{"position":[[362,26]]},"92":{"position":[[586,26]]},"94":{"position":[[2211,26]]},"96":{"position":[[360,26],[1646,26],[2926,26]]},"98":{"position":[[672,26],[947,26]]},"100":{"position":[[196,26]]},"102":{"position":[[287,26],[602,28],[694,28],[786,28]]},"104":{"position":[[747,26]]},"106":{"position":[[1938,26]]},"108":{"position":[[870,26]]},"110":{"position":[[1065,26],[1428,28],[1525,28],[1620,28],[1870,28],[1960,28],[2048,28]]},"113":{"position":[[132,26],[449,28],[542,28],[635,28]]},"136":{"position":[[875,26]]},"142":{"position":[[461,26],[764,26]]},"144":{"position":[[385,26],[638,26],[864,26]]},"146":{"position":[[363,26]]},"148":{"position":[[489,26]]},"150":{"position":[[372,26]]},"152":{"position":[[405,26]]},"186":{"position":[[534,26],[815,26],[1066,26]]},"188":{"position":[[261,26],[760,26]]},"190":{"position":[[499,26]]},"192":{"position":[[468,26]]},"194":{"position":[[273,26],[856,26],[1448,26]]},"196":{"position":[[702,26]]},"198":{"position":[[660,26]]},"200":{"position":[[745,26]]},"202":{"position":[[362,26]]},"204":{"position":[[586,26]]},"206":{"position":[[2211,26]]},"208":{"position":[[360,26],[1646,26],[2926,26]]},"210":{"position":[[672,26],[947,26]]},"212":{"position":[[196,26]]},"214":{"position":[[287,26],[602,28],[694,28],[786,28]]},"216":{"position":[[747,26]]},"218":{"position":[[1938,26]]},"220":{"position":[[870,26]]},"222":{"position":[[1065,26],[1428,28],[1525,28],[1620,28],[1870,28],[1960,28],[2048,28]]},"225":{"position":[[132,26],[449,28],[542,28],[635,28]]}}}],["tabl",{"_index":662,"t":{"100":{"position":[[29,10],[90,11],[237,23],[434,13],[543,15]]},"102":{"position":[[169,11]]},"212":{"position":[[29,10],[90,11],[237,23],[434,13],[543,15]]},"214":{"position":[[169,11]]}}}],["tablewrit",{"_index":663,"t":{"100":{"position":[[123,12],[181,12]]},"212":{"position":[[123,12],[181,12]]}}}],["templatefilenam",{"_index":145,"t":{"30":{"position":[[278,16]]},"32":{"position":[[197,16]]},"34":{"position":[[192,16]]},"36":{"position":[[296,16]]},"38":{"position":[[195,16]]},"40":{"position":[[230,16]]},"90":{"position":[[218,16]]},"142":{"position":[[278,16]]},"144":{"position":[[197,16]]},"146":{"position":[[192,16]]},"148":{"position":[[296,16]]},"150":{"position":[[195,16]]},"152":{"position":[[230,16]]},"202":{"position":[[218,16]]}}}],["templatewrit",{"_index":560,"t":{"90":{"position":[[193,15],[344,15]]},"202":{"position":[[193,15],[344,15]]}}}],["tempor",{"_index":14,"t":{"3":{"position":[[121,6]]},"5":{"position":[[241,6],[420,6],[599,6],[778,6],[957,6],[1136,6],[1315,6],[1494,6],[1673,6],[1852,6],[2031,6],[2210,6],[2389,6],[2568,6],[2747,6],[2926,6]]}}}],["test",{"_index":76,"t":{"24":{"position":[[302,5],[788,5]]},"30":{"position":[[184,5]]},"32":{"position":[[68,5]]},"34":{"position":[[69,5]]},"36":{"position":[[133,5]]},"38":{"position":[[69,5]]},"40":{"position":[[85,5]]},"46":{"position":[[1981,5]]},"48":{"position":[[563,5]]},"50":{"position":[[237,5]]},"52":{"position":[[1313,5]]},"54":{"position":[[348,5]]},"56":{"position":[[72,5]]},"58":{"position":[[613,5]]},"60":{"position":[[1714,5]]},"62":{"position":[[528,5]]},"64":{"position":[[974,5]]},"66":{"position":[[846,5]]},"74":{"position":[[342,5]]},"76":{"position":[[148,5]]},"78":{"position":[[408,5]]},"80":{"position":[[365,5]]},"82":{"position":[[156,5]]},"84":{"position":[[603,5]]},"86":{"position":[[552,5]]},"88":{"position":[[638,5]]},"90":{"position":[[175,5]]},"92":{"position":[[477,5]]},"94":{"position":[[2100,5]]},"96":{"position":[[132,5]]},"98":{"position":[[571,5]]},"100":{"position":[[105,5]]},"102":{"position":[[184,5]]},"104":{"position":[[620,5]]},"106":{"position":[[1831,5]]},"108":{"position":[[775,5]]},"110":{"position":[[951,5]]},"113":{"position":[[30,5]]},"136":{"position":[[302,5],[788,5]]},"142":{"position":[[184,5]]},"144":{"position":[[68,5]]},"146":{"position":[[69,5]]},"148":{"position":[[133,5]]},"150":{"position":[[69,5]]},"152":{"position":[[85,5]]},"158":{"position":[[1981,5]]},"160":{"position":[[563,5]]},"162":{"position":[[237,5]]},"164":{"position":[[1313,5]]},"166":{"position":[[348,5]]},"168":{"position":[[72,5]]},"170":{"position":[[613,5]]},"172":{"position":[[1714,5]]},"174":{"position":[[528,5]]},"176":{"position":[[974,5]]},"178":{"position":[[846,5]]},"186":{"position":[[342,5]]},"188":{"position":[[148,5]]},"190":{"position":[[408,5]]},"192":{"position":[[365,5]]},"194":{"position":[[156,5]]},"196":{"position":[[603,5]]},"198":{"position":[[552,5]]},"200":{"position":[[638,5]]},"202":{"position":[[175,5]]},"204":{"position":[[477,5]]},"206":{"position":[[2100,5]]},"208":{"position":[[132,5]]},"210":{"position":[[571,5]]},"212":{"position":[[105,5]]},"214":{"position":[[184,5]]},"216":{"position":[[620,5]]},"218":{"position":[[1831,5]]},"220":{"position":[[775,5]]},"222":{"position":[[951,5]]},"225":{"position":[[30,5]]}}}],["testfileutil.getpath",{"_index":82,"t":{"24":{"position":[[353,22],[840,22]]},"30":{"position":[[297,22],[421,22],[724,22]]},"32":{"position":[[216,22],[347,22],[600,22],[826,22]]},"34":{"position":[[211,22],[322,22]]},"36":{"position":[[315,22],[439,22]]},"38":{"position":[[214,22],[328,22]]},"40":{"position":[[249,22],[362,22]]},"46":{"position":[[2092,22],[2487,22],[3394,22],[3604,22]]},"48":{"position":[[619,22]]},"50":{"position":[[290,22],[569,22]]},"52":{"position":[[1367,22]]},"54":{"position":[[406,22]]},"56":{"position":[[128,22]]},"58":{"position":[[664,22]]},"60":{"position":[[1764,22]]},"62":{"position":[[581,22]]},"64":{"position":[[1028,22]]},"66":{"position":[[898,22]]},"74":{"position":[[493,22],[774,22],[1025,22]]},"76":{"position":[[210,22],[709,22]]},"78":{"position":[[459,22]]},"80":{"position":[[422,22]]},"82":{"position":[[230,22],[813,22],[1405,22]]},"84":{"position":[[658,22]]},"86":{"position":[[620,22],[717,22]]},"88":{"position":[[697,22]]},"90":{"position":[[237,22],[319,22]]},"92":{"position":[[537,22]]},"94":{"position":[[2161,22]]},"96":{"position":[[313,22],[1599,22],[2879,22]]},"98":{"position":[[632,22],[907,22]]},"100":{"position":[[156,22]]},"102":{"position":[[241,22]]},"104":{"position":[[689,22]]},"106":{"position":[[1890,22]]},"108":{"position":[[828,22]]},"110":{"position":[[1017,22]]},"113":{"position":[[90,22]]},"136":{"position":[[353,22],[840,22]]},"142":{"position":[[297,22],[421,22],[724,22]]},"144":{"position":[[216,22],[347,22],[600,22],[826,22]]},"146":{"position":[[211,22],[322,22]]},"148":{"position":[[315,22],[439,22]]},"150":{"position":[[214,22],[328,22]]},"152":{"position":[[249,22],[362,22]]},"158":{"position":[[2092,22],[2487,22],[3394,22],[3604,22]]},"160":{"position":[[619,22]]},"162":{"position":[[290,22],[569,22]]},"164":{"position":[[1367,22]]},"166":{"position":[[406,22]]},"168":{"position":[[128,22]]},"170":{"position":[[664,22]]},"172":{"position":[[1764,22]]},"174":{"position":[[581,22]]},"176":{"position":[[1028,22]]},"178":{"position":[[898,22]]},"186":{"position":[[493,22],[774,22],[1025,22]]},"188":{"position":[[210,22],[709,22]]},"190":{"position":[[459,22]]},"192":{"position":[[422,22]]},"194":{"position":[[230,22],[813,22],[1405,22]]},"196":{"position":[[658,22]]},"198":{"position":[[620,22],[717,22]]},"200":{"position":[[697,22]]},"202":{"position":[[237,22],[319,22]]},"204":{"position":[[537,22]]},"206":{"position":[[2161,22]]},"208":{"position":[[313,22],[1599,22],[2879,22]]},"210":{"position":[[632,22],[907,22]]},"212":{"position":[[156,22]]},"214":{"position":[[241,22]]},"216":{"position":[[689,22]]},"218":{"position":[[1890,22]]},"220":{"position":[[828,22]]},"222":{"position":[[1017,22]]},"225":{"position":[[90,22]]}}}],["this.demodao",{"_index":235,"t":{"46":{"position":[[806,12]]},"158":{"position":[[806,12]]}}}],["throw",{"_index":109,"t":{"24":{"position":[[1431,6],[2102,6]]},"64":{"position":[[269,7]]},"68":{"position":[[421,6]]},"86":{"position":[[583,6]]},"115":{"position":[[389,6]]},"117":{"position":[[207,6]]},"136":{"position":[[1431,6],[2102,6]]},"176":{"position":[[269,7]]},"180":{"position":[[421,6]]},"198":{"position":[[583,6]]},"227":{"position":[[389,6]]},"229":{"position":[[207,6]]}}}],["totallist",{"_index":198,"t":{"36":{"position":[[1033,9]]},"148":{"position":[[1033,9]]}}}],["totallist.add(\"统计:1000",{"_index":202,"t":{"36":{"position":[[1170,25]]},"148":{"position":[[1170,25]]}}}],["totallist.add(nul",{"_index":201,"t":{"36":{"position":[[1100,20],[1121,20],[1142,20]]},"148":{"position":[[1100,20],[1121,20],[1142,20]]}}}],["totallistlist",{"_index":195,"t":{"36":{"position":[[973,13]]},"148":{"position":[[973,13]]}}}],["totallistlist.add(totallist",{"_index":200,"t":{"36":{"position":[[1070,29]]},"148":{"position":[[1070,29]]}}}],["tri",{"_index":266,"t":{"46":{"position":[[3716,3]]},"50":{"position":[[665,3]]},"74":{"position":[[1158,3]]},"82":{"position":[[343,3],[894,3],[1486,3]]},"86":{"position":[[784,3]]},"100":{"position":[[333,3]]},"117":{"position":[[277,3]]},"158":{"position":[[3716,3]]},"162":{"position":[[665,3]]},"186":{"position":[[1158,3]]},"194":{"position":[[343,3],[894,3],[1486,3]]},"198":{"position":[[784,3]]},"212":{"position":[[333,3]]},"229":{"position":[[277,3]]}}}],["true",{"_index":180,"t":{"34":{"position":[[662,14]]},"96":{"position":[[1918,4],[3198,4]]},"108":{"position":[[977,26]]},"146":{"position":[[662,14]]},"208":{"position":[[1918,4],[3198,4]]},"220":{"position":[[977,26]]}}}],["truncat",{"_index":25,"t":{"5":{"position":[[57,8]]}}}],["ultrici",{"_index":11,"t":{"3":{"position":[[90,10]]},"5":{"position":[[210,10],[389,10],[568,10],[747,10],[926,10],[1105,10],[1284,10],[1463,10],[1642,10],[1821,10],[2000,10],[2179,10],[2358,10],[2537,10],[2716,10],[2895,10]]}}}],["upload(multipartfil",{"_index":127,"t":{"24":{"position":[[2075,20]]},"68":{"position":[[394,20]]},"136":{"position":[[2075,20]]},"180":{"position":[[394,20]]}}}],["uploaddata",{"_index":123,"t":{"24":{"position":[[1920,11]]},"68":{"position":[[233,11]]},"136":{"position":[[1920,11]]},"180":{"position":[[233,11]]}}}],["uploaddata.class",{"_index":130,"t":{"24":{"position":[[2161,17]]},"68":{"position":[[480,17]]},"136":{"position":[[2161,17]]},"180":{"position":[[480,17]]}}}],["uploaddatalisten",{"_index":124,"t":{"24":{"position":[[1987,19]]},"68":{"position":[[303,19]]},"136":{"position":[[1987,19]]},"180":{"position":[[303,19]]}}}],["uploaddatalistener(uploaddao)).sheet().doread",{"_index":131,"t":{"24":{"position":[[2183,48]]},"68":{"position":[[502,48]]},"136":{"position":[[2183,48]]},"180":{"position":[[502,48]]}}}],["url",{"_index":470,"t":{"86":{"position":[[325,7],[361,3],[365,4],[1247,4]]},"198":{"position":[[325,7],[361,3],[365,4],[1247,4]]}}}],["urlencoder.encod",{"_index":116,"t":{"24":{"position":[[1597,27],[1660,23]]},"115":{"position":[[596,27],[659,23]]},"117":{"position":[[420,27],[483,23]]},"136":{"position":[[1597,27],[1660,23]]},"227":{"position":[[596,27],[659,23]]},"229":{"position":[[420,27],[483,23]]}}}],["us",{"_index":23,"t":{"5":{"position":[[46,3]]}}}],["utf",{"_index":117,"t":{"24":{"position":[[1684,4]]},"115":{"position":[[683,4]]},"117":{"position":[[507,4]]},"136":{"position":[[1684,4]]},"227":{"position":[[683,4]]},"229":{"position":[[507,4]]}}}],["valu",{"_index":238,"t":{"46":{"position":[[877,6]]},"158":{"position":[[877,6]]}}}],["variabletitlehead",{"_index":748,"t":{"110":{"position":[[1286,19],[1742,19]]},"222":{"position":[[1286,19],[1742,19]]}}}],["variabletitlewrit",{"_index":746,"t":{"110":{"position":[[969,20],[1042,20]]},"222":{"position":[[969,20],[1042,20]]}}}],["veri",{"_index":19,"t":{"5":{"position":[[25,4]]}}}],["version>3.0.5</vers",{"_index":63,"t":{"17":{"position":[[79,24]]},"129":{"position":[[79,24]]}}}],["view",{"_index":30,"t":{"5":{"position":[[114,5]]}}}],["void",{"_index":78,"t":{"24":{"position":[[315,4],[801,4],[1387,4]]},"30":{"position":[[197,4]]},"32":{"position":[[81,4]]},"34":{"position":[[82,4]]},"36":{"position":[[146,4]]},"38":{"position":[[82,4]]},"40":{"position":[[98,4]]},"46":{"position":[[975,4],[1358,4],[1500,4],[1717,4],[1994,4],[2851,4],[3093,4],[3183,4]]},"48":{"position":[[576,4]]},"50":{"position":[[250,4]]},"52":{"position":[[1326,4]]},"54":{"position":[[361,4]]},"56":{"position":[[85,4]]},"58":{"position":[[146,4],[626,4]]},"60":{"position":[[259,4],[336,4],[405,4],[1727,4]]},"62":{"position":[[541,4]]},"64":{"position":[[307,4],[987,4]]},"66":{"position":[[330,4],[618,4],[731,4],[859,4]]},"74":{"position":[[355,4]]},"76":{"position":[[161,4]]},"78":{"position":[[421,4]]},"80":{"position":[[378,4]]},"82":{"position":[[169,4]]},"84":{"position":[[616,4]]},"86":{"position":[[565,4]]},"88":{"position":[[651,4]]},"90":{"position":[[188,4]]},"92":{"position":[[490,4]]},"94":{"position":[[2113,4]]},"96":{"position":[[145,4],[1790,4],[3070,4]]},"98":{"position":[[584,4]]},"100":{"position":[[118,4]]},"102":{"position":[[197,4]]},"104":{"position":[[633,4]]},"106":{"position":[[206,4],[896,4],[1844,4]]},"108":{"position":[[164,4],[788,4]]},"110":{"position":[[964,4]]},"113":{"position":[[43,4]]},"115":{"position":[[345,4]]},"117":{"position":[[148,4]]},"136":{"position":[[315,4],[801,4],[1387,4]]},"142":{"position":[[197,4]]},"144":{"position":[[81,4]]},"146":{"position":[[82,4]]},"148":{"position":[[146,4]]},"150":{"position":[[82,4]]},"152":{"position":[[98,4]]},"158":{"position":[[975,4],[1358,4],[1500,4],[1717,4],[1994,4],[2851,4],[3093,4],[3183,4]]},"160":{"position":[[576,4]]},"162":{"position":[[250,4]]},"164":{"position":[[1326,4]]},"166":{"position":[[361,4]]},"168":{"position":[[85,4]]},"170":{"position":[[146,4],[626,4]]},"172":{"position":[[259,4],[336,4],[405,4],[1727,4]]},"174":{"position":[[541,4]]},"176":{"position":[[307,4],[987,4]]},"178":{"position":[[330,4],[618,4],[731,4],[859,4]]},"186":{"position":[[355,4]]},"188":{"position":[[161,4]]},"190":{"position":[[421,4]]},"192":{"position":[[378,4]]},"194":{"position":[[169,4]]},"196":{"position":[[616,4]]},"198":{"position":[[565,4]]},"200":{"position":[[651,4]]},"202":{"position":[[188,4]]},"204":{"position":[[490,4]]},"206":{"position":[[2113,4]]},"208":{"position":[[145,4],[1790,4],[3070,4]]},"210":{"position":[[584,4]]},"212":{"position":[[118,4]]},"214":{"position":[[197,4]]},"216":{"position":[[633,4]]},"218":{"position":[[206,4],[896,4],[1844,4]]},"220":{"position":[[164,4],[788,4]]},"222":{"position":[[964,4]]},"225":{"position":[[43,4]]},"227":{"position":[[345,4]]},"229":{"position":[[148,4]]}}}],["web",{"_index":102,"t":{"24":{"position":[[1069,9]]},"136":{"position":[[1069,9]]}}}],["widthandheightdata",{"_index":563,"t":{"92":{"position":[[113,18],[354,19]]},"204":{"position":[[113,18],[354,19]]}}}],["widthandheightdata.class).sheet(\"模板\").dowrite(data",{"_index":570,"t":{"92":{"position":[[702,54]]},"204":{"position":[[702,54]]}}}],["widthandheightwrit",{"_index":569,"t":{"92":{"position":[[495,21],[562,21]]},"204":{"position":[[495,21],[562,21]]}}}],["withtempl",{"_index":558,"t":{"90":{"position":[[138,14]]},"202":{"position":[[138,14]]}}}],["withtemplate(templatefilenam",{"_index":166,"t":{"32":{"position":[[702,31]]},"144":{"position":[[702,31]]}}}],["workbook",{"_index":638,"t":{"96":{"position":[[3301,8],[3310,8]]},"208":{"position":[[3301,8],[3310,8]]}}}],["workbook.createcellstyl",{"_index":641,"t":{"96":{"position":[[3456,27]]},"208":{"position":[[3456,27]]}}}],["write",{"_index":94,"t":{"24":{"position":[[865,7]]},"36":{"position":[[1199,8]]},"136":{"position":[[865,7]]},"148":{"position":[[1199,8]]}}}],["writecelldata",{"_index":312,"t":{"52":{"position":[[886,16]]},"86":{"position":[[1443,13],[1463,18]]},"88":{"position":[[893,24],[1216,28],[1660,18],[2009,25],[2529,18]]},"96":{"position":[[2058,13],[2072,16],[3746,19]]},"164":{"position":[[886,16]]},"198":{"position":[[1443,13],[1463,18]]},"200":{"position":[[893,24],[1216,28],[1660,18],[2009,25],[2529,18]]},"208":{"position":[[2058,13],[2072,16],[3746,19]]}}}],["writecelldata.setimagedatalist(imagedatalist",{"_index":496,"t":{"86":{"position":[[1784,46],[2219,46]]},"198":{"position":[[1784,46],[2219,46]]}}}],["writecelldata.setstringvalu",{"_index":490,"t":{"86":{"position":[[1610,41]]},"198":{"position":[[1610,41]]}}}],["writecelldata.settype(celldatatypeenum.str",{"_index":489,"t":{"86":{"position":[[1562,47]]},"198":{"position":[[1562,47]]}}}],["writecelldata<>(context.getvalu",{"_index":314,"t":{"52":{"position":[[974,36]]},"164":{"position":[[974,36]]}}}],["writecelldata<str",{"_index":513,"t":{"88":{"position":[[122,21],[198,21],[276,21],[376,21],[467,21],[855,21],[1180,21],[1624,21],[1966,21],[2492,21]]},"200":{"position":[[122,21],[198,21],[276,21],[376,21],[467,21],[855,21],[1180,21],[1624,21],[1966,21],[2492,21]]}}}],["writecelldata<void",{"_index":471,"t":{"86":{"position":[[427,19],[1423,19]]},"198":{"position":[[427,19],[1423,19]]}}}],["writecelldatafil",{"_index":472,"t":{"86":{"position":[[447,19]]},"198":{"position":[[447,19]]}}}],["writecelldatawrit",{"_index":518,"t":{"88":{"position":[[656,20],[722,20]]},"200":{"position":[[656,20],[722,20]]}}}],["writecelldemodata",{"_index":512,"t":{"88":{"position":[[58,17],[576,18],[783,17],[801,17],[825,20]]},"200":{"position":[[58,17],[576,18],[783,17],[801,17],[825,20]]}}}],["writecelldemodata.class).inmemory(true).sheet(\"模板\").dowrite(data",{"_index":557,"t":{"88":{"position":[[3200,66]]},"200":{"position":[[3200,66]]}}}],["writecelldemodata.setcommentdata(com",{"_index":524,"t":{"88":{"position":[[1245,42]]},"200":{"position":[[1245,42]]}}}],["writecelldemodata.setformuladata(formula",{"_index":533,"t":{"88":{"position":[[1679,42]]},"200":{"position":[[1679,42]]}}}],["writecelldemodata.sethyperlink(hyperlink",{"_index":519,"t":{"88":{"position":[[918,42]]},"200":{"position":[[918,42]]}}}],["writecelldemodata.setrichtext(richtest",{"_index":547,"t":{"88":{"position":[[2601,40]]},"200":{"position":[[2601,40]]}}}],["writecelldemodata.setwritecellstyle(writecellstyl",{"_index":538,"t":{"88":{"position":[[2084,52]]},"200":{"position":[[2084,52]]}}}],["writecellstyl",{"_index":516,"t":{"88":{"position":[[398,15],[1988,14],[2137,14],[2177,17]]},"96":{"position":[[406,14],[446,17],[696,14],[739,17],[2163,14],[2350,14],[2365,14],[2657,14],[3809,14]]},"200":{"position":[[398,15],[1988,14],[2137,14],[2177,17]]},"208":{"position":[[406,14],[446,17],[696,14],[739,17],[2163,14],[2350,14],[2365,14],[2657,14],[3809,14]]}}}],["writecellstyle.setfillforegroundcolor(indexedcolors.red.getindex",{"_index":628,"t":{"96":{"position":[[2411,68]]},"208":{"position":[[2411,68]]}}}],["writecellstyle.setfillpatterntype(fillpatterntype.solid_foreground",{"_index":629,"t":{"96":{"position":[[2540,68]]},"208":{"position":[[2540,68]]}}}],["writecellstyle.settype(celldatatypeenum.str",{"_index":537,"t":{"88":{"position":[[2035,48]]},"200":{"position":[[2035,48]]}}}],["writecellstyle.setwritecellstyle(writecellstyledata",{"_index":540,"t":{"88":{"position":[[2195,53]]},"200":{"position":[[2195,53]]}}}],["writecellstyledata",{"_index":539,"t":{"88":{"position":[[2152,18]]},"200":{"position":[[2152,18]]}}}],["writecellstyledata.setfillforegroundcolor(indexedcolors.green.getindex",{"_index":544,"t":{"88":{"position":[[2402,74]]},"200":{"position":[[2402,74]]}}}],["writecellstyledata.setfillpatterntype(fillpatterntype.solid_foreground",{"_index":543,"t":{"88":{"position":[[2321,72]]},"200":{"position":[[2321,72]]}}}],["writecellstyle里面的dataformatdata",{"_index":624,"t":{"96":{"position":[[2227,35]]},"208":{"position":[[2227,35]]}}}],["writefont",{"_index":550,"t":{"88":{"position":[[2819,9],[2829,9],[2845,12],[2943,11],[2967,9],[2983,12],[3083,11]]},"96":{"position":[[548,9],[578,12],[1018,9],[1051,12]]},"200":{"position":[[2819,9],[2829,9],[2845,12],[2943,11],[2967,9],[2983,12],[3083,11]]},"208":{"position":[[548,9],[578,12],[1018,9],[1051,12]]}}}],["writefont.setcolor(indexedcolors.green.getindex",{"_index":553,"t":{"88":{"position":[[2996,51]]},"200":{"position":[[2996,51]]}}}],["writefont.setcolor(indexedcolors.red.getindex",{"_index":551,"t":{"88":{"position":[[2858,49]]},"200":{"position":[[2858,49]]}}}],["writesheet",{"_index":171,"t":{"32":{"position":[[994,10],[1005,10],[1076,12],[1114,12]]},"34":{"position":[[493,10],[504,10],[931,12],[981,12],[1136,12]]},"36":{"position":[[619,10],[630,10],[711,12],[749,12],[895,12],[1252,12]]},"38":{"position":[[502,10],[513,10],[691,12],[741,12],[872,12]]},"40":{"position":[[535,10],[546,10],[815,12],[891,12],[955,12],[1019,12],[1083,12],[1147,12],[1278,12]]},"74":{"position":[[1229,10],[1240,10],[1316,12]]},"82":{"position":[[461,10],[472,10],[674,12],[1063,16],[1113,10],[1124,10],[1266,12],[1639,16],[1745,10],[1756,10],[1919,12]]},"100":{"position":[[455,10],[466,10],[800,11],[880,11]]},"144":{"position":[[994,10],[1005,10],[1076,12],[1114,12]]},"146":{"position":[[493,10],[504,10],[931,12],[981,12],[1136,12]]},"148":{"position":[[619,10],[630,10],[711,12],[749,12],[895,12],[1252,12]]},"150":{"position":[[502,10],[513,10],[691,12],[741,12],[872,12]]},"152":{"position":[[535,10],[546,10],[815,12],[891,12],[955,12],[1019,12],[1083,12],[1147,12],[1278,12]]},"186":{"position":[[1229,10],[1240,10],[1316,12]]},"194":{"position":[[461,10],[472,10],[674,12],[1063,16],[1113,10],[1124,10],[1266,12],[1639,16],[1745,10],[1756,10],[1919,12]]},"212":{"position":[[455,10],[466,10],[800,11],[880,11]]}}}],["writet",{"_index":666,"t":{"100":{"position":[[597,10],[679,10]]},"212":{"position":[[597,10],[679,10]]}}}],["writetable0",{"_index":667,"t":{"100":{"position":[[608,11],[812,13]]},"212":{"position":[[608,11],[812,13]]}}}],["writetable1",{"_index":669,"t":{"100":{"position":[[690,11],[892,13]]},"212":{"position":[[690,11],[892,13]]}}}],["xlsx",{"_index":96,"t":{"24":{"position":[[904,8],[1772,9]]},"30":{"position":[[490,8],[793,8]]},"32":{"position":[[414,8],[667,8],[893,8]]},"34":{"position":[[392,8]]},"36":{"position":[[518,8]]},"38":{"position":[[401,8]]},"40":{"position":[[434,8]]},"74":{"position":[[563,8],[844,8],[1095,8]]},"76":{"position":[[290,8],[789,8]]},"78":{"position":[[528,8]]},"80":{"position":[[497,8]]},"82":{"position":[[302,8],[885,8],[1477,8]]},"84":{"position":[[731,8]]},"86":{"position":[[689,8]]},"88":{"position":[[774,8]]},"90":{"position":[[391,8]]},"92":{"position":[[615,8]]},"94":{"position":[[2240,8]]},"96":{"position":[[389,8],[1675,8],[2955,8]]},"98":{"position":[[701,8],[976,8]]},"100":{"position":[[225,8]]},"102":{"position":[[316,8]]},"104":{"position":[[776,8]]},"106":{"position":[[1967,8]]},"108":{"position":[[899,8]]},"110":{"position":[[1094,8]]},"113":{"position":[[161,8]]},"115":{"position":[[804,9]]},"117":{"position":[[628,9]]},"136":{"position":[[904,8],[1772,9]]},"142":{"position":[[490,8],[793,8]]},"144":{"position":[[414,8],[667,8],[893,8]]},"146":{"position":[[392,8]]},"148":{"position":[[518,8]]},"150":{"position":[[401,8]]},"152":{"position":[[434,8]]},"186":{"position":[[563,8],[844,8],[1095,8]]},"188":{"position":[[290,8],[789,8]]},"190":{"position":[[528,8]]},"192":{"position":[[497,8]]},"194":{"position":[[302,8],[885,8],[1477,8]]},"196":{"position":[[731,8]]},"198":{"position":[[689,8]]},"200":{"position":[[774,8]]},"202":{"position":[[391,8]]},"204":{"position":[[615,8]]},"206":{"position":[[2240,8]]},"208":{"position":[[389,8],[1675,8],[2955,8]]},"210":{"position":[[701,8],[976,8]]},"212":{"position":[[225,8]]},"214":{"position":[[316,8]]},"216":{"position":[[776,8]]},"218":{"position":[[1967,8]]},"220":{"position":[[899,8]]},"222":{"position":[[1094,8]]},"225":{"position":[[161,8]]},"227":{"position":[[804,9]]},"229":{"position":[[628,9]]}}}],["xssfclientanchor(0",{"_index":735,"t":{"108":{"position":[[458,19]]},"220":{"position":[[458,19]]}}}],["xssfrichtextstr",{"_index":739,"t":{"108":{"position":[[547,29]]},"220":{"position":[[547,29]]}}}],["zhuang",{"_index":527,"t":{"88":{"position":[[1399,9]]},"94":{"position":[[1041,6]]},"106":{"position":[[108,6],[796,6]]},"108":{"position":[[70,6]]},"200":{"position":[[1399,9]]},"206":{"position":[[1041,6]]},"218":{"position":[[108,6],[796,6]]},"220":{"position":[[70,6]]}}}]],"pipeline":["stemmer"]}}]